{"version":3,"file":"markup.m.js","sources":["../../node_modules/@smotaal/tokenizer/lib/grouping.js","../../node_modules/@smotaal/tokenizer/lib/tokenizer.js","../../node_modules/@smotaal/tokenizer/lib/parser.js","../../node_modules/@smotaal/tokenizer/extensions/css/css-mode.js","../../node_modules/@smotaal/tokenizer/extensions/html/html-mode.js","../../node_modules/@smotaal/tokenizer/extensions/markdown/markdown-mode.js","../../node_modules/@smotaal/tokenizer/extensions/javascript/javascript-mode.js","../../node_modules/@smotaal/tokenizer/extensions/javascript/extended-modes.js","../../node_modules/@smotaal/tokenizer/extended.js","../../node_modules/pseudom/lib/pseudo.mjs","../../node_modules/pseudom/lib/native.mjs","../../node_modules/pseudom/pseudom.js","../../node_modules/@smotaal/tokenizer/extensions/resync.js","../../node_modules/@smotaal/tokenizer/extensions/dom.js","../../node_modules/@smotaal/tokenizer/browser/markup.js","../../packages/parser/lib/markup.js"],"sourcesContent":["const {defineProperty} = Object;\n\nconst setProperty = (target, property, value, enumerable = true, configurable = true) =>\n  defineProperty(target, property, {value, enumerable, configurable}) && value;\n\n/** @typedef {import('./types').Grouping} Grouping */\n/** @typedef {import('./types').Tokenizer} Tokenizer */\n/** @typedef {import('./types').Token} Token */\n/** @typedef {import('./types')['Tokenizer']} TokenizerClass */\n/** @typedef {{[name: string]: Grouping}} Groupers */\n/** @typedef {(TokenizerClass)['createGrouper']} createGrouper */\n\nexport class Grouping {\n  /**\n   * @param {{syntax: string, groupers: Groupers, createGrouper: createGrouper}} options\n   */\n  constructor({syntax, groupers, createGrouper, contextualizer}) {\n    this.groupers = groupers;\n    this.groupings = [];\n    this.hints = new Set();\n    this.syntax = syntax;\n    this.goal = syntax;\n    this.hint = syntax;\n    this.contextualizer = contextualizer;\n    this.context = syntax;\n    this.create = createGrouper || Object;\n  }\n\n  /**\n   * @param {Token} next\n   * @param {Token} parent\n   * @param state\n   * @param context\n   */\n  close(next, state, context) {\n    let after, grouper, parent;\n    const {groupings, hints, syntax} = this;\n\n    const closed = groupings.pop();\n    grouper = closed;\n    groupings.includes(grouper) || hints.delete(grouper.hinter);\n\n    (closed.punctuator === 'opener' && (next.punctuator = 'closer')) ||\n      (closed.punctuator && (next.punctuator = closed.punctuator));\n\n    after = grouper.close && grouper.close(next, state, context);\n\n    const previousGrouper = (grouper = groupings[groupings.length - 1]);\n\n    this.goal = (previousGrouper && previousGrouper.goal) || syntax;\n    this.grouper = previousGrouper;\n\n    parent = (next.parent && next.parent.parent) || undefined;\n\n    return {after, grouper, closed, parent};\n  }\n\n  open(next, context) {\n    let opened, parent, grouper;\n\n    const {groupers, groupings, hints, hint, syntax} = this;\n    let {punctuator, text} = next;\n    const hinter = punctuator ? `${syntax}-${punctuator}` : hint;\n    const group = `${hinter},${text}`;\n\n    grouper = groupers[group];\n\n    const {\n      mode: {matchers, comments, spans, closures},\n    } = context;\n\n    if (context.spans && punctuator === 'span') {\n      const span = context.spans.get(text);\n      punctuator = next.punctuator = 'span';\n      opened =\n        grouper ||\n        this.create({\n          syntax,\n          goal: syntax,\n          span,\n          matcher: span.matcher || (matchers && matchers.span) || undefined,\n          spans: (spans && spans[text]) || undefined,\n          hinter,\n          punctuator,\n        });\n    } else if (context.punctuator !== 'quote') {\n      if (punctuator === 'quote') {\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            quote: text,\n            matcher: (matchers && matchers.quote) || undefined,\n            spans: (spans && spans[text]) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'comment') {\n        const comment = comments.get(text);\n        opened =\n          grouper ||\n          this.create({\n            syntax,\n            goal: punctuator,\n            comment,\n            matcher: comment.matcher || (matchers && matchers.comment) || undefined,\n            hinter,\n            punctuator,\n          });\n      } else if (punctuator === 'closure') {\n        const closure = (grouper && grouper.closure) || closures.get(text);\n        punctuator = next.punctuator = 'opener';\n        closure &&\n          (opened =\n            grouper ||\n            this.create({\n              syntax,\n              goal: syntax,\n              closure,\n              matcher: closure.matcher || (matchers && matchers.closure) || undefined,\n              hinter,\n              punctuator,\n            }));\n      }\n    }\n\n    if (opened) {\n      groupers[group] || (groupers[group] = grouper = opened);\n      groupings.push(grouper), hints.add(hinter);\n      this.goal = (grouper && grouper.goal) || syntax;\n      parent = next;\n    }\n\n    return {grouper, opened, parent, punctuator};\n  }\n}\n","import {Grouping} from './grouping.js';\n\n/** Tokenizer for a single mode (language) */\nexport class Tokenizer {\n  constructor(mode, defaults) {\n    this.mode = mode;\n    this.defaults = defaults || this.constructor.defaults || undefined;\n  }\n\n  /** Token generator from source using tokenizer.mode (or defaults.mode) */\n  *tokenize(source, state = {}) {\n    let done;\n\n    // TODO: Consider supporting Symbol.species\n    const Species = this.constructor;\n\n    // Local context\n    const contextualizer = this.contextualizer || (this.contextualizer = Species.contextualizer(this));\n    let context = contextualizer.next().value;\n\n    const {mode, syntax, createGrouper = Species.createGrouper || Object} = context;\n\n    // Local grouping\n    const groupers = mode.groupers || (mode.groupers = {});\n    const grouping =\n      state.grouping ||\n      (state.grouping = new Grouping({\n        syntax: syntax || mode.syntax,\n        groupers,\n        createGrouper,\n        contextualizer,\n      }));\n\n    // Local matching\n    let {match, index = 0} = state;\n\n    // Local tokens\n    let previous, last, parent;\n    const top = {type: 'top', text: '', offset: index};\n\n    let lastContext = context;\n\n    state.source = source;\n\n    const tokenize = state.tokenize || (text => [{text}]);\n\n    while (true) {\n      const {\n        mode: {syntax, matchers, comments, spans, closures},\n        punctuator: $$punctuator,\n        closer: $$closer,\n        spans: $$spans,\n        matcher: $$matcher,\n        token,\n        forming = true,\n      } = context;\n\n      // Current contextual hint (syntax or hint)\n      const hint = grouping.hint;\n\n      while (lastContext === (lastContext = context)) {\n        let next;\n\n        state.last = last;\n\n        const lastIndex = state.index || 0;\n\n        $$matcher.lastIndex = lastIndex;\n        match = state.match = $$matcher.exec(source);\n        done = index === (index = state.index = $$matcher.lastIndex) || !match;\n\n        if (done) return;\n\n        // Current contextual match\n        const {0: text, 1: whitespace, 2: sequence, index: offset} = match;\n\n        // Current quasi-contextual fragment\n        const pre = source.slice(lastIndex, offset);\n        pre &&\n          ((next = token({\n            type: 'pre',\n            text: pre,\n            offset: lastIndex,\n            previous,\n            parent,\n            hint,\n            last,\n            source,\n          })),\n          yield (previous = next));\n\n        // Current contextual fragment\n        const type = (whitespace && 'whitespace') || (sequence && 'sequence') || 'text';\n        next = token({type, text, offset, previous, parent, hint, last, source});\n\n        // Current contextual punctuator (from sequence)\n        const closing =\n          $$closer &&\n          ($$closer.test ? $$closer.test(text) : $$closer === text || (whitespace && whitespace.includes($$closer)));\n\n        let after;\n        let punctuator = next.punctuator;\n\n        if (punctuator || closing) {\n          let closed, opened, grouper;\n\n          if (closing) {\n            ({after, closed, parent = top, grouper} = grouping.close(next, state, context));\n          } else if ($$punctuator !== 'comment') {\n            ({grouper, opened, parent = top, punctuator} = grouping.open(next, context));\n          }\n\n          state.context = grouping.context = grouping.goal || syntax;\n\n          if (opened || closed) {\n            next.type = 'punctuator';\n            context = contextualizer.next((state.grouper = grouper || undefined)).value;\n            grouping.hint = `${[...grouping.hints].join(' ')} ${grouping.context ? `in-${grouping.context}` : ''}`;\n            opened && (after = opened.open && opened.open(next, state, context));\n          }\n        }\n\n        // Current contextual tail token (yield from sequence)\n        yield (previous = next);\n\n        // Next reference to last contextual sequence token\n        next && !whitespace && forming && (last = next);\n\n        if (after) {\n          let tokens, token, nextIndex;\n\n          if (after.syntax) {\n            const {syntax, offset, index} = after;\n            const body = index > offset && source.slice(offset, index - 1);\n            if (body) {\n              body.length > 0 &&\n                ((tokens = tokenize(body, {options: {sourceType: syntax}}, this.defaults)), (nextIndex = index));\n              const hint = `${syntax}-in-${mode.syntax}`;\n              token = token => ((token.hint = `${(token.hint && `${token.hint} `) || ''}${hint}`), token);\n            }\n          } else if (after.length) {\n            const hint = grouping.hint;\n            token = token => ((token.hint = `${hint} ${token.type || 'code'}`), context.token(token));\n            (tokens = after).end > state.index && (nextIndex = after.end);\n          }\n\n          if (tokens) {\n            for (const next of tokens) {\n              previous && ((next.previous = previous).next = next);\n              token && token(next);\n              yield (previous = next);\n            }\n            nextIndex > state.index && (state.index = nextIndex);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Context generator using tokenizer.mode (or defaults.mode)\n   */\n  get contextualizer() {\n    const value = this.constructor.contextualizer(this);\n    Object.defineProperty(this, 'contextualizer', {value});\n    return value;\n  }\n\n  /**\n   * Tokenizer context generator\n   */\n  static *contextualizer(tokenizer) {\n    // Local contextualizer state\n    let grouper, done;\n\n    // Tokenizer mode\n    const mode = tokenizer.mode;\n    const defaults = tokenizer.defaults;\n    mode !== undefined || (mode = (defaults && defaults.mode) || undefined);\n    if (!mode) throw ReferenceError(`Tokenizer.contextualizer invoked without a mode`);\n\n    // TODO: Refactoring\n    const initialize = context => {\n      context.token ||\n        (context.token = (tokenizer => (tokenizer.next(), token => tokenizer.next(token).value))(\n          this.tokenizer(context),\n        ));\n      return context;\n    };\n\n    if (!mode.context) {\n      const {\n        syntax,\n        matcher = (mode.matcher = (defaults && defaults.matcher) || undefined),\n        quotes,\n        punctuators = (mode.punctuators = {aggregators: {}}),\n        punctuators: {aggregators = ($punctuators.aggregators = {})},\n        patterns: {\n          maybeKeyword = (mode.patterns.maybeKeyword =\n            (defaults && defaults.patterns && defaults.patterns.maybeKeyword) || undefined),\n        } = (mode.patterns = {maybeKeyword: null}),\n        spans: {['(spans)']: spans} = (mode.spans = {}),\n      } = mode;\n\n      initialize(\n        (mode.context = {\n          mode,\n          punctuators,\n          aggregators,\n          matcher,\n          quotes,\n          spans,\n        }),\n      );\n    }\n\n    const {\n      syntax: $syntax,\n      matcher: $matcher,\n      quotes: $quotes,\n      punctuators: $punctuators,\n      punctuators: {aggregators: $aggregators},\n    } = mode;\n\n    while (true) {\n      if (grouper !== (grouper = yield (grouper && grouper.context) || mode.context) && grouper && !grouper.context) {\n        const {\n          goal = $syntax,\n          punctuator,\n          punctuators = $punctuators,\n          aggregators = $aggregators,\n          closer,\n          spans,\n          matcher = $matcher,\n          quotes = $quotes,\n          forming = goal === $syntax,\n        } = grouper;\n\n        initialize(\n          (grouper.context = {\n            mode,\n            punctuator,\n            punctuators,\n            aggregators,\n            closer,\n            spans,\n            matcher,\n            quotes,\n            forming,\n          }),\n        );\n      }\n    }\n  }\n\n  static *tokenizer(context) {\n    let done, next;\n\n    const {\n      mode: {syntax, keywords, assigners, operators, combinators, nonbreakers, comments, closures, breakers, patterns},\n      punctuators,\n      aggregators,\n      spans,\n      quotes,\n      forming = true,\n    } = context;\n\n    const {maybeIdentifier, maybeKeyword, segments} = patterns || false;\n    const wording = keywords || maybeIdentifier ? true : false;\n\n    const matchSegment =\n      segments &&\n      (segments[Symbol.match] ||\n        (!(Symbol.match in segments) &&\n          (segments[Symbol.match] = (segments => {\n            const sources = [];\n            const names = [];\n            for (const name of Object.getOwnPropertyNames(segments)) {\n              const segment = segments[name];\n              if (segment && segment.source && !/\\\\\\d/.test(segment.source)) {\n                names.push(name);\n                sources.push(segment.source.replace(/\\\\?\\((.)/g, (m, a) => (m[0] !== '\\\\' && a !== '?' && '(?:') || m));\n              }\n            }\n            const {length} = names;\n            if (!length) return false;\n            const matcher = new RegExp(`(${sources.join('|)|(')}|)`, 'u');\n            return text => {\n              // OR: for (const segment of names) if (segments[segment].test(text)) return segment;\n              const match = matcher.exec(text);\n              if (match[0]) for (let i = 1, n = length; n--; i++) if (match[i]) return names[i - 1];\n            };\n          })(segments))));\n\n    const LineEndings = /$/gm;\n    const punctuate = text =>\n      (nonbreakers && nonbreakers.includes(text) && 'nonbreaker') ||\n      (operators && operators.includes(text) && 'operator') ||\n      (comments && comments.includes(text) && 'comment') ||\n      (spans && spans.includes(text) && 'span') ||\n      (quotes && quotes.includes(text) && 'quote') ||\n      (closures && closures.includes(text) && 'closure') ||\n      (breakers && breakers.includes(text) && 'breaker') ||\n      false;\n    const aggregate = text =>\n      (assigners && assigners.includes(text) && 'assigner') ||\n      (combinators && combinators.includes(text) && 'combinator') ||\n      false;\n\n    while (!done) {\n      let token;\n\n      if (next && next.text) {\n        const {text, type, hint, previous, parent, last} = next;\n\n        if (type === 'sequence') {\n          ((next.punctuator =\n            (previous && (aggregators[text] || (!(text in aggregators) && (aggregators[text] = aggregate(text))))) ||\n            (punctuators[text] || (!(text in punctuators) && (punctuators[text] = punctuate(text)))) ||\n            undefined) &&\n            (next.type = 'punctuator')) ||\n            (matchSegment &&\n              (next.type = matchSegment(text)) &&\n              (next.hint = `${(hint && `${hint} `) || ''}${next.type}`)) ||\n            (next.type = 'sequence');\n        } else if (type === 'whitespace') {\n          next.breaks = text.match(LineEndings).length - 1;\n        } else if (forming && wording) {\n          const word = text.trim();\n          word &&\n            ((keywords &&\n              keywords.includes(word) &&\n              (!last || last.punctuator !== 'nonbreaker' || (previous && previous.breaks > 0)) &&\n              (next.type = 'keyword')) ||\n              (maybeIdentifier && maybeIdentifier.test(word) && (next.type = 'identifier')));\n        } else {\n          next.type = 'text';\n        }\n\n        previous && (previous.next = next) && (parent || (next.parent = previous.parent));\n\n        token = next;\n      }\n\n      next = yield token;\n    }\n  }\n\n  static createGrouper({\n    syntax,\n    goal = syntax,\n    quote,\n    comment,\n    closure,\n    span,\n    grouping = comment || closure || span || undefined,\n    punctuator,\n    spans = (grouping && grouping.spans) || undefined,\n    matcher = (grouping && grouping.matcher) || undefined,\n    quotes = (grouping && grouping.quotes) || undefined,\n    punctuators = {aggregators: {}},\n    opener = quote || (grouping && grouping.opener) || undefined,\n    closer = quote || (grouping && grouping.closer) || undefined,\n    hinter,\n    open = (grouping && grouping.open) || undefined,\n    close = (grouping && grouping.close) || undefined,\n  }) {\n    return {syntax, goal, punctuator, spans, matcher, quotes, punctuators, opener, closer, hinter, open, close};\n  }\n}\n","import {Tokenizer} from './tokenizer.js';\n\nexport const TOKENIZERS = 'tokenizers';\nexport const MAPPINGS = 'mappings';\nexport const MODES = 'modes';\n\nconst none = {\n  syntax: 'markup',\n  matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\/+|\\/\\*+|\\*+\\/|\\(|\\)|\\[|\\]|,|;|\\.\\.\\.|\\.|\\b:\\/\\/\\b|::|:|\\?|`|\"|'|\\$\\{|\\{|\\}|=>|<\\/|\\/>|\\++|\\-+|\\*+|&+|\\|+|=+|!={0,3}|<{1,3}=?|>{1,2}=?)|[+\\-*/&|^%<>~!]=?/g,\n};\n\nconst define = (instance, property, value, options) => {\n  if (!instance.hasOwnProperty(property))\n    return (\n      Object.defineProperty(instance, property, {\n        value,\n        writable: (options && options.writable === true) || false,\n        configurable: (options && options.configurable === true) || false,\n        enumerable: !options || options.enumerable === true,\n      }),\n      value\n    );\n};\n\nexport class Parser {\n  /**\n   * @param source {string}\n   * @param state {{sourceType?: string}}\n   */\n  tokenize(source, state = {}) {\n    const {\n      options: {\n        sourceType,\n        mode = (state.options.mode = (sourceType && this.get(sourceType)) || none),\n      } = (state.options = {}),\n    } = state;\n    let tokenizer = mode && this[TOKENIZERS].get(mode);\n    if (!source || !mode) return [];\n    !tokenizer && this[TOKENIZERS].set(mode, (tokenizer = new Tokenizer(mode)));\n    state.parser = this;\n    state.tokenize = (this.hasOwnProperty('tokenize') && this.tokenize) || (this.tokenize = this.tokenize.bind(this));\n    return tokenizer.tokenize(source, state);\n  }\n\n  get [TOKENIZERS]() {\n    return define(this, TOKENIZERS, new WeakMap());\n  }\n  get [MAPPINGS]() {\n    return define(this, MAPPINGS, Object.create(null));\n  }\n\n  get [MODES]() {\n    return define(this, MODES, Object.create(null));\n  }\n\n  get(id = 'default') {\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n    if (id in modes) return modes[id];\n    let mapping = mappings[id];\n    !mapping || mapping.syntax === id || (mapping = mappings[mapping.syntax]);\n    if (mapping && mapping.factory) {\n      const {syntax, factory, options} = mapping;\n      if (options.requires && options.requires.length > 0) {\n        const list = [];\n        for (const id of options.requires) id in modes || this.get(id) || list.push(id);\n        if (list.length) {\n          list.length > 1 && list.push(list.splice(-2, 2).join(' and '));\n          throw Error(`Cannot initialize \"${syntax}\" which requires the list mode(s): ${list.join(', ')}`);\n        }\n      }\n      return (mapping.mode = modes[id] = factory(options, modes));\n    }\n  }\n\n  /**\n   * @param mode {ModeFactory | Mode}\n   * @param options {ModeOptions}\n   */\n  register(mode, options) {\n    const {[MAPPINGS]: mappings, [MODES]: modes} = this;\n\n    if (!mappings) return;\n\n    const factory = typeof mode === 'function' && mode;\n\n    const {syntax, aliases = (options.aliases = [])} = ({syntax: options.syntax = mode.syntax} = options = {\n      syntax: undefined,\n      ...factory.defaults,\n      ...options,\n    });\n\n    if (!syntax || typeof syntax !== 'string')\n      throw TypeError(`Cannot register \"${syntax}\" since it not valid string'`);\n\n    if (mappings[syntax]) {\n      if (factory ? factory === mappings[syntax].factory : mode === modes[syntax]) return;\n      else throw ReferenceError(`Cannot register \"${syntax}\" since it is already registered`);\n    }\n\n    if (aliases && aliases.length > 0) {\n      for (const alias of aliases) {\n        if (!alias || typeof alias !== 'string')\n          throw TypeError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" not valid string'`);\n        else if (mappings[alias])\n          throw ReferenceError(`Cannot register \"${syntax}\" since it's alias \"${alias}\" is already registered`);\n      }\n    }\n\n    const mapping = factory ? {syntax, factory, options} : {syntax, mode, options};\n\n    const descriptor = {value: mapping, writable: false};\n    for (const id of [syntax, ...aliases]) {\n      Object.defineProperty(mappings, id, descriptor);\n    }\n  }\n\n  /**\n   * @param mode {string}\n   * @param requires {string[]}\n   */\n  requires(mode, requires) {\n    const missing = [];\n    for (const mode of requires) mode in this[MAPPINGS] || missing.push(`\"${mode}\"`);\n    if (!missing.length) return;\n    throw Error(`Cannot initialize \"${mode}\" which requires the missing mode(s): ${missing.join(', ')}`);\n  }\n}\n\n/**\n * @typedef { Partial<{syntax: string, matcher: RegExp, [name:string]: Set | Map | {[name:string]: Set | Map | RegExp} }> } Mode\n * @typedef { {[name: string]: Mode} } Modes\n * @typedef { {[name: string]: {syntax: string} } } Mappings\n * @typedef { {aliases?: string[], syntax: string} } ModeOptions\n * @typedef { (options: ModeOptions, modes: Modes) => Mode } ModeFactory\n */\n\n// * @typedef { typeof helpers } Helpers\n","import {Symbols, Closures} from '../helpers.js';\n\nexport const css = Object.defineProperties(\n  ({syntax} = css.defaults) => ({\n    syntax,\n    comments: Closures.from('/*…*/'),\n    closures: Closures.from('{…} (…) […]'),\n    quotes: Symbols.from(`' \"`),\n    assigners: Symbols.from(`:`),\n    combinators: Symbols.from('> :: + :'),\n    nonbreakers: Symbols.from(`-`),\n    breakers: Symbols.from(', ;'),\n    matcher: /([\\s\\n]+)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\/\\*|\\*\\/|\\(|\\)|\\[|\\]|\"|'|\\{|\\}|,|;|\\.|\\b:\\/\\/\\b|::\\b|:(?!active|after|any|any-link|backdrop|before|checked|default|defined|dir|disabled|empty|enabled|first|first-child|first-letter|first-line|first-of-type|focus|focus-visible|focus-within|fullscreen|host|hover|in-range|indeterminate|invalid|lang|last-child|last-of-type|left|link|matches|not|nth-child|nth-last-child|nth-last-of-type|nth-of-type|only-child|only-of-type|optional|out-of-range|read-only|required|right|root|scope|target|valid|visited))/g,\n    matchers: {\n      quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])?|\\*\\/|`|\"|'|\\$\\{)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {value: {syntax: 'css'}},\n  },\n);\n","import {Closures, Symbols, raw} from '../helpers.js';\n\nexport const html = Object.defineProperties(\n  ({syntax} = html.defaults) => {\n    const html = {\n      syntax,\n      keywords: Symbols.from('DOCTYPE doctype'),\n      comments: Closures.from('<!--…-->'),\n      closures: Closures.from('<%…%> <!…> <…/> </…> <…>'),\n      quotes: [],\n      patterns: {\n        maybeKeyword: /^[a-z](\\w*)$/i,\n        closeTag: /<\\/\\w[^<>{}]*?>/g,\n        // maybeIdentifier: /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/,\n      },\n      matcher: /([\\s\\n]+)|(\"|'|=|&#x?[a-f0-9]+;|&[a-z]+;|\\/?>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+))/gi,\n      matchers: {\n        quote: /(\\n)|(\\\\(?:(?:\\\\\\\\)*\\\\|[^\\\\\\s])|\"|')/g,\n        comment: /(\\n)|(-->)/g,\n      },\n    };\n\n    const DOCTAGS = Symbols.from('SCRIPT STYLE');\n    const TAG = /^[a-z]+$/i;\n    // TODO: Check if custom/namespace tags ever need special close logic\n    // const TAGLIKE = /^(?:(?:[a-z][\\-a-z]*)?[a-z]+\\:)?(?:[a-z][\\-a-z]*)?[a-z]+$/i;\n\n    const HTMLTagClosure = html.closures.get('<');\n\n    HTMLTagClosure.patterns = html.patterns;\n\n    HTMLTagClosure.close = (next, state, context) => {\n      const parent = next && next.parent;\n      const first = parent && parent.next;\n      const tag = first && first.text && TAG.test(first.text) && first.text.toUpperCase();\n\n      if (tag && DOCTAGS.includes(tag)) {\n        let {source, index} = state;\n        const $$matcher = html.patterns.closeTag;\n\n        let match;\n        $$matcher.lastIndex = index;\n\n        // TODO: Check if `<script>`…`</SCRIPT>` is still valid!\n        const $$closer = new RegExp(raw`^<\\/(?:${first.text.toLowerCase()}|${tag})\\b`);\n\n        let syntax = (tag === 'STYLE' && 'css') || '';\n\n        if (!syntax) {\n          const openTag = source.slice(parent.offset, index);\n          const match = /\\stype=.*?\\b(.+?)\\b/.exec(openTag);\n          syntax = tag === 'SCRIPT' && (!match || !match[1] || /^module$|javascript/i.test(match[1])) ? 'es' : '';\n        }\n\n        while ((match = $$matcher.exec(source))) {\n          if ($$closer.test(match[0])) {\n            if (syntax) {\n              return {offset: index, index: match.index, syntax};\n            } else {\n              const offset = index;\n              const text = source.slice(offset, match.index - 1);\n              state.index = match.index;\n              return [{text, offset, previous: next, parent}];\n            }\n          }\n        }\n      }\n    };\n    HTMLTagClosure.quotes = Symbols.from(`' \"`);\n    HTMLTagClosure.closer = /\\/?>/;\n\n    return html;\n  },\n  {\n    defaults: {value: {syntax: 'html', aliases: ['htm']}},\n  },\n);\n","import {previousTextFrom, indenter, Closures, sequence, all, raw} from '../helpers.js';\n\nexport const markdown = Object.defineProperties(\n  ({syntax} = defaults, {html}) => {\n    const EMBEDDED = true;\n    const matcher = ((...matchers) => {\n      let matcher = matchers[matchers.length - 1];\n      try {\n        matchers.push(\n          (matcher = sequence`${all(\n            sequence`(${markdown.WHITESPACE})`,\n            sequence`(${all(\n              markdown.ESCAPES,\n              markdown.ENTITIES,\n              markdown.RULES,\n              markdown.BLOCKS,\n              markdown.INLINES,\n              markdown.TYPOGRAPHS,\n              markdown.TAGS,\n              markdown.BRACKETS,\n              markdown.FENCES,\n              markdown.SPANS,\n            )})`,\n            markdown.INDICIES,\n            markdown.DECIMAL,\n            markdown.EXPONENTIAL,\n            markdown.FRAGMENTS,\n          )}${'/gim'}`),\n        );\n        return matcher;\n      } catch (exception) {\n        matchers.push(exception.message.replace(/.*Invalid regular expression: /, ''));\n        console.warn(exception);\n      }\n      matcher.matchers = matchers;\n      return matcher;\n    })(\n      /(^\\s+|\\n)|(&#x?[a-f0-9]+;|&[a-z]+;|(?:```+|\\~\\~\\~+|(?:--+|==+)(?=\\s*$)|(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S*))|–|—|\"|'|=|\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)|<|>|\\(|\\)|\\[|\\]|__?|([*~`])\\3?\\b|(?:\\b|\\b\\B|\\B)([*~`])\\4?)|\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&]+(?=__?\\b)|\\\\./gim,\n      sequence`(${markdown.WHITESPACE})|(${markdown.ENTITIES}|(?:${markdown.FENCES}|(?:${markdown.RULES})(?=\\s*$)|(?:${\n        markdown.BLOCKS\n      })(?=\\s+\\S*))|${markdown.TYPOGRAPHS}|${markdown.TAGS}|${markdown.BRACKETS}|${markdown.INLINES})|${\n        markdown.FRAGMENTS\n      }|${markdown.ESCAPES}${'/gim'}`,\n    );\n\n    const mode = {\n      syntax,\n      comments: Closures.from('<!--…-->'),\n      quotes: [],\n      closures: Closures.from(html.closures, markdown.CLOSURES),\n      operators: html.operators,\n      matcher: matcher,\n      spans: Closures.from('``…`` `…`'),\n      matchers: {comment: /(\\n)|(-->)/g},\n    };\n\n    const open = (parent, state, grouper) => {\n      const {source, index: start} = state;\n      const fence = parent.text;\n      const fencing = previousTextFrom(parent, '\\n');\n      const indenting = fencing.slice(fencing.indexOf('\\n') + 1, -fence.length) || '';\n      let end = source.indexOf(`\\n${fencing}`, start);\n      const INDENT = (indenting && indenter(indenting)) || /^/m;\n      const CLOSER = new RegExp(raw`^${INDENT.source.slice(1) || ''}${fence}`, 'mg');\n\n      CLOSER.lastIndex = start;\n      let closerMatch = CLOSER.exec(source);\n      if (closerMatch && closerMatch.index >= start) {\n        end = closerMatch.index;\n      } else {\n        const FENCE = new RegExp(raw`^[\\>\\|\\s]*${fence}`, 'mg');\n        FENCE.lastIndex = start;\n        const fenceMatch = FENCE.exec(source);\n        if (fenceMatch && fenceMatch.index >= start) {\n          end = fenceMatch.index;\n        } else return;\n      }\n\n      if (end > start) {\n        let offset = start;\n        let text, head, lines;\n\n        const body = source.slice(start, end) || '';\n        const tokens = [];\n        tokens.end = end;\n        if (!EMBEDDED) {\n          text = body;\n          tokens.push({text, type: 'code', offset, parent});\n          offset += body.length;\n        } else {\n          [head, ...lines] = body.split(/\\r?(\\n)\\r?/g);\n          if (head) {\n            tokens.push({text: head, type: 'comment', offset, parent}), (offset += head.length);\n          }\n          for (const line of lines) {\n            if (line === '\\n') {\n              text = line;\n              tokens.push({text, type: 'whitespace', offset, parent}), (offset += text.length);\n            } else {\n              const [indent] = INDENT.exec(line) || '';\n              const inset = (indent && indent.length) || 0;\n              if (inset) {\n                for (const text of indent.split(/(\\s+)/g)) {\n                  if (!text) continue;\n                  const type = (text.trim() && 'sequence') || 'whitespace';\n                  tokens.push({text, type, offset, parent});\n                  offset += text.length;\n                }\n                text = line.slice(inset) || '';\n              } else {\n                text = line;\n              }\n              if (text) {\n                tokens.push({text, type: 'code', offset, parent}), (offset += text.length);\n              }\n            }\n          }\n        }\n\n        if (tokens.length) {\n          const last = tokens[tokens.length - 1];\n          if (!last.text) tokens.pop();\n          return tokens;\n        }\n      }\n    };\n\n    {\n      const quotes = html.closures.get('<').quotes;\n      for (const opener of ['\\`\\`\\`', '\\~\\~\\~']) {\n        const FenceClosure = mode.closures.get(opener);\n        if (FenceClosure) {\n          FenceClosure.matcher = new RegExp(\n            raw`/(\\s*\\n)|(${opener}(?=\\s|$)|^(?:[\\s>|]*\\s)?\\s*)|.*$`,\n            'gm',\n          );\n          FenceClosure.quotes = quotes;\n          FenceClosure.open = open;\n        }\n      }\n    }\n\n    return mode;\n  },\n  {\n    defaults: {get: () => ({...markdown.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    markdown.DEFAULTS = {syntax: 'markdown', aliases: ['md'], requires: ['html']};\n  }\n\n  markdown.BLOCK = '```…``` ~~~…~~~';\n  markdown.INLINE = '[…] (…) *…* **…** _…_ __…__ ~…~ ~~…~~';\n  markdown.CLOSURES = `${markdown.BLOCK} ${markdown.INLINE}`;\n  markdown.WHITESPACE = /^\\s+|\\s+$|\\n+/;\n  markdown.ESCAPES = /\\\\./;\n  markdown.ENTITIES = /&#x?[a-f0-9]+;|&[a-z]+;/;\n  markdown.FENCES = /(?:\\x60{3,}|\\x7E{3,})(?=\\b| |$)/;\n  markdown.RULES = /(?:[\\-]{2,}|[=]{2,})(?=\\s*$)/;\n  markdown.BLOCKS = /(?:\\#{1,6}|\\-|\\b\\d+\\.|\\b[a-z]\\.|\\b[ivx]+\\.)(?=\\s+\\S)/;\n  markdown.TYPOGRAPHS = /\\B[–—](?=\\ )|\"|'|=/;\n  markdown.TAGS = /\\/>|<%|%>|<!--|-->|<[\\/\\!]?(?=[a-z]+\\:?[a-z\\-]*[a-z]|[a-z]+)/;\n  markdown.BRACKETS = /<|>|\\(|\\)|\\[|\\]/;\n  markdown.INLINES = /\\b([*~_])(?:\\3\\b(?=[^\\n]*[^\\n\\s\\\\]\\3\\3)|\\b(?=[^\\n]*[^\\n\\s\\\\]\\3))|(?:\\b|\\b\\B|\\B)([*~_])\\4?/;\n  markdown.SPANS = /(``?(?![`\\n]))[^\\n]*?[^\\\\`\\n]\\5/;\n  markdown.INDICIES = /\\b(?:[\\da-zA-Z]+\\.)+[\\da-zA-Z]+\\.?/;\n  markdown.DECIMAL = /[+\\-]?\\d+(?:,\\d{3})*(?:\\.\\d+)?|[+\\-]?\\d*\\.\\d+/;\n  markdown.EXPONENTIAL = /\\d+[eE]\\-?\\d+|\\d+\\.\\d+[eE]\\-?\\d+/;\n  markdown.FRAGMENTS = /\\b[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]*[^\\n\\s\\[\\]\\(\\)\\<\\>&_`\"]\\b|[^\\n\\s\\[\\]\\(\\)\\<\\>&`\"]+(?=__?\\b)/;\n}\n","import {Closures, Symbols, identifier, sequence, all, raw, patterns, entities} from '../helpers.js';\n\nexport const javascript = Object.defineProperties(\n  ({syntax} = defaults) => ({\n    syntax,\n    comments: Closures.from(javascript.COMMENTS),\n    quotes: Symbols.from(javascript.QUOTES),\n    closures: Closures.from(javascript.CLOSURES),\n    spans: {'`': Closures.from(javascript.SPANS['`'])},\n    keywords: Symbols.from(javascript.KEYWORDS),\n    assigners: Symbols.from(javascript.ASSIGNERS),\n    combinators: Symbols.from(javascript.COMBINATORS),\n    nonbreakers: Symbols.from(javascript.NONBREAKERS),\n    operators: Symbols.from(javascript.OPERATORS),\n    breakers: Symbols.from(javascript.BREAKERS),\n    patterns: {\n      ...patterns,\n      maybeIdentifier: identifier(entities.es.IdentifierStart, entities.es.IdentifierPart),\n      segments: {\n        regexp: /^\\/[^\\n\\/\\*][^\\n]*\\//,\n      },\n    },\n    matcher: sequence`([\\s\\n]+)|(${all(\n      javascript.REGEXPS,\n      javascript.COMMENTS,\n      javascript.QUOTES,\n      javascript.CLOSURES,\n      ...javascript.PUNCTUATORS,\n    )})`,\n    matchers: {\n      \"'\": /(\\n)|(')|(\\\\.)/g,\n      '\"': /(\\n)|(\")|(\\\\.)/g,\n      '`': /(\\n)|(`|\\$\\{)|(\\\\.)/g,\n      quote: /(\\n)|(`|\"|'|\\$\\{)|(\\\\.)/g,\n      comment: /(\\n)|(\\*\\/|\\b(?:[a-z]+\\:\\/\\/|\\w[\\w\\+\\.]*\\w@[a-z]+)\\S+|@[a-z]+)/gi,\n    },\n  }),\n  {\n    defaults: {get: () => ({...javascript.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    javascript.DEFAULTS = {syntax: 'javascript', aliases: ['javascript', 'es', 'js', 'ecmascript']};\n  }\n  javascript.REGEXPS = /\\/(?=[^\\*\\/\\n][^\\n]*\\/(?:[a-z]+\\b)?(?:[ \\t]+[^\\n\\s\\(\\[\\{\\w]|[\\.\\[;,]|[ \\t]*[\\)\\]\\}\\;\\,\\n]|\\n|$))(?:[^\\\\\\/\\n\\t\\[]+|\\\\\\S|\\[(?:\\\\\\S|[^\\\\\\n\\t\\]]+)+?\\])+?\\/[a-z]*/g;\n\n  javascript.COMMENTS = /\\/\\/|\\/\\*|\\*\\/|^\\#\\!.*\\n/g;\n  javascript.COMMENTS['(closures)'] = '//…\\n /*…*/';\n\n  javascript.QUOTES = /`|\"|'/g;\n  javascript.QUOTES['(symbols)'] = `' \" \\``;\n\n  javascript.CLOSURES = /\\{|\\}|\\(|\\)|\\[|\\]/g;\n  javascript.CLOSURES['(closures)'] = '{…} (…) […]';\n\n  javascript.SPANS = {'`': {['(closures)']: '${…}'}};\n\n  javascript.KEYWORDS = {\n    ['(symbols)']:\n      // abstract enum interface package namespace declare type module\n      'arguments as async await break case catch class export const continue debugger default delete do else export extends finally for from function get if import in instanceof let new of return set static super switch this throw try typeof var void while with yield',\n  };\n\n  javascript.PUNCTUATORS = [\n    /,|;|\\.\\.\\.|\\.|\\:|\\?|=>/,\n    /\\+\\+|\\+=|\\+|--|-=|-|\\*\\*=|\\*\\*|\\*=|\\*|\\/=|\\//,\n    /&&|&=|&|\\|\\||\\|=|\\||\\%=|\\%|\\^=|\\^|~=|~/,\n    /<<=|<<|<=|<|>>>=|>>>|>>=|>>|>=|>/,\n    /!==|!=|!|===|==|=/,\n  ];\n\n  javascript.ASSIGNERS = {['(symbols)']: '= += -= *= /= **= %= &= |= <<= >>= >>>= ^= ~='};\n\n  javascript.COMBINATORS = {['(symbols)']: '=== == + - * / ** % & && | || ! !== > < >= <= => >> << >>> ^ ~'};\n  javascript.NONBREAKERS = {['(symbols)']: '.'};\n  javascript.OPERATORS = {['(symbols)']: '++ -- ... ? :'};\n  javascript.BREAKERS = {['(symbols)']: ', ;'};\n}\n","import {javascript} from './javascript-mode.js';\nimport {Symbols, sequence, raw, all} from '../helpers.js';\n\nexport const mjs = Object.defineProperties(\n  ({syntax} = mjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import export default'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.MJS,\n    matchers: {quote: matchers.quote, closure: javascript.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...mjs.DEFAULTS})},\n  },\n);\n\nexport const cjs = Object.defineProperties(\n  ({syntax} = cjs.defaults, {javascript: {quotes, closures, spans, matchers}}) => ({\n    syntax,\n    keywords: Symbols.from('import module exports require'),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.CJS,\n    matchers: {quote: matchers.quote, closure: javascript.CLOSURE},\n  }),\n  {\n    defaults: {get: () => ({...cjs.DEFAULTS})},\n  },\n);\n\nexport const esx = Object.defineProperties(\n  ({syntax} = esx.defaults, {javascript: {quotes, closures, spans, matchers}, mjs, cjs}) => ({\n    syntax,\n    keywords: Symbols.from(mjs.keywords, cjs.keywords),\n    quotes,\n    closures,\n    spans,\n    matcher: javascript.ESX,\n    matchers: {quote: matchers.quote, closure: javascript.ESX},\n  }),\n  {\n    defaults: {get: () => ({...esx.DEFAULTS})},\n  },\n);\n\nDefinitions: {\n  Defaults: {\n    const requires = [javascript.defaults.syntax];\n\n    mjs.DEFAULTS = {syntax: 'mjs', aliases: ['esm'], requires};\n    cjs.DEFAULTS = {syntax: 'cjs', requires};\n    esx.DEFAULTS = {syntax: 'esx', requires: [...requires, 'cjs', 'mjs']};\n  }\n\n  const {REGEXPS, CLOSURES} = javascript;\n\n  // TODO: Undo $ matching once fixed\n  const QUOTES = /`|\"(?:[^\\\\\"]+|\\\\.)*(?:\"|$)|'(?:[^\\\\']+|\\\\.)*(?:'|$)/g;\n  const COMMENTS = /\\/\\/.*(?:\\n|$)|\\/\\*[^]*?(?:\\*\\/|$)|^\\#\\!.*\\n/g;\n  const STATEMENTS = all(QUOTES, CLOSURES, REGEXPS, COMMENTS);\n  const BLOCKLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`;\n  const TOPLEVEL = sequence`([\\s\\n]+)|(${STATEMENTS})`;\n  javascript.CLOSURE = sequence`(\\n+)|(${STATEMENTS})`;\n  javascript.MJS = sequence`${TOPLEVEL}|\\bexport\\b|\\bimport\\b`;\n  javascript.CJS = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bmodule.exports\\b|\\brequire\\b|\\bimport(?=\\(|\\.)`;\n  javascript.ESX = sequence`${BLOCKLEVEL}|\\bexports\\b|\\bimport\\b|\\bmodule.exports\\b|\\brequire\\b`;\n}\n","export * from './tokenizer.js';\n\nimport {Parser} from './tokenizer.js';\nimport {modes} from './extensions/extensions.js';\n\nconst parser = new Parser();\nfor (const id in modes) parser.register(modes[id]);\n\nexport {modes};\n\nexport default parser;\n","const {assign, defineProperty} = Object;\n\nexport const document = void null;\n\nexport class Node {\n  get children() {\n    return defineProperty(this, 'children', {value: new Set()}).children;\n  }\n  get childElementCount() {\n    return (this.hasOwnProperty('children') && this.children.size) || 0;\n  }\n  get textContent() {\n    return (\n      (this.hasOwnProperty('children') && this.children.size && [...this.children].join('')) || ''\n    );\n  }\n  set textContent(text) {\n    this.hasOwnProperty('children') && this.children.size && this.children.clear();\n    text && this.children.add(new String(text));\n  }\n  appendChild(element) {\n    return element && this.children.add(element), element;\n  }\n  append(...elements) {\n    if (elements.length) for (const element of elements) element && this.children.add(element);\n  }\n  removeChild(element) {\n    element &&\n      this.hasOwnProperty('children') &&\n      this.children.size &&\n      this.children.delete(element);\n    return element;\n  }\n  remove(...elements) {\n    if (elements.length && this.hasOwnProperty('children') && this.children.size)\n      for (const element of elements) element && this.children.delete(element);\n  }\n}\n\nexport class Element extends Node {\n  get innerHTML() {\n    return this.textContent;\n  }\n  set innerHTML(text) {\n    this.textContent = text;\n  }\n  get outerHTML() {\n    const {className, tag, innerHTML} = this;\n    return `<${tag}${(className && ` class=\"${className}\"`) || ''}>${innerHTML || ''}</${tag}>`;\n  }\n  toString() {\n    return this.outerHTML;\n  }\n  toJSON() {\n    return this.toString();\n  }\n}\n\nexport class DocumentFragment extends Node {\n  toString() {\n    return this.textContent;\n  }\n  toJSON() {\n    return (this.childElementCount && [...this.children]) || [];\n  }\n  [Symbol.iterator]() {\n    return ((this.childElementCount && this.children) || '')[Symbol.iterator]();\n  }\n}\n\nexport class Text extends String {\n  toString() {\n    return encodeEntities(super.toString());\n  }\n}\n\nexport const createElement = (tag, properties, ...children) => {\n  const element = assign(new Element(), {\n    tag,\n    className: (properties && properties.className) || '',\n    properties,\n  });\n  children.length && defineProperty(element, 'children', {value: new Set(children)});\n  return element;\n};\n\nexport const createText = (content = '') => new Text(content);\nexport const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\nexport const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/gim, encodeEntity);\nexport const createFragment = () => new DocumentFragment();\n","export const {document, Element, Node, Text, DocumentFragment} =\n  'object' === typeof self && (self || 0).window === self && self;\n\nexport const {createElement, createText, createFragment} = {\n  createElement: (tag, properties, ...children) => {\n    const element = document.createElement(tag);\n    properties && Object.assign(element, properties);\n    if (!children.length) return element;\n    if (element.append) {\n      while (children.length > 500) element.append(...children.splice(0, 500));\n      children.length && element.append(...children);\n    } else if (element.appendChild) {\n      for (const child of children) element.appendChild(child);\n    }\n    return element;\n  },\n\n  createText: (content = '') => document.createTextNode(content),\n\n  createFragment: () => document.createDocumentFragment(),\n};\n","import * as pseudo from './lib/pseudo.js';\nimport * as dom from './lib/native.js';\nexport {encodeEntity, encodeEntities} from './lib/pseudo.js';\n\n// TEST: Trace for ESM testing\ntypeof process === 'object' && console.info('[ESM]: %o', import.meta.url);\n\nexport const native = dom.document && dom;\nexport const {createElement, createText, createFragment} = native || pseudo;\nexport {pseudo};\n","﻿//@ts-check\n/// <reference lib=\"esnext.asynciterable\" />\n\nconst VOID = Symbol('[[Void]]');\n\n/**\n * @template T\n * @typedef {Promise<T> | T} async\n */\n\n/**\n * @template T\n * @typedef {{next(): async<IteratorResult<async<T>>>}} iterator\n */\n\n/**\n * @template T\n * @typedef {iterator<T> | {[Symbol.iterator](): iterator<T>}  | {[Symbol.asyncIterator](): iterator<T>}} iterable\n */\n\n/**\n * @template T, U\n * @param {iterable<T>} iterable\n * @param {(value: T) => U} ƒ\n */\nexport async function each(iterable, ƒ) {\n  const iterator =\n    (iterable && ('next' in iterable && typeof iterable.next === 'function' && iterable)) ||\n    ((Symbol.asyncIterator in iterable && iterable[Symbol.asyncIterator]()) ||\n      (Symbol.iterator in iterable && iterable[Symbol.iterator]()));\n  try {\n    if (iterator || typeof iterator.next === 'function') {\n      let result, done;\n      while (!done && (result = await iterator.next())) {\n        await ƒ(await result.value);\n        done = result.done;\n      }\n    }\n  } finally {\n    iterator &&\n      iterable !== iterator &&\n      'return' in iterator &&\n      typeof iterator.return === 'function' &&\n      iterator.return();\n  }\n}\n\n// export async function next(iterator, previous, received, done) {\n//   let result, value;\n//   !previous || (await previous);\n//   const next = done ? 'return' : 'next';\n//   !(iterator && next in iterator && typeof iterator[next] === 'function') ||\n//     !((result = received === VOID ? iterator[next]() : iterator[next](received)) && (result = await result)) ||\n//     ('done' in result && (done = !!(await result.done)), 'value' in result && (value = await result.value));\n//   return {value, done: !!done};\n// }\n\n// export const AsyncIterator = (() => {\n//   const Done = Symbol('[[Done]]');\n//   const Result = Symbol('[[Result]]');\n//   const Iterator = Symbol('[[Iterator]]');\n//   const DONE = Object.freeze(Object.seal({done: true, value: undefined}));\n//   const VOID = Symbol('[[Void]]');\n//   const EMPTY = [];\n//   const reject = async reason => ({value: Promise.reject(reason), done: true});\n//   const next = async (iterator, previous, received, done) => {\n//     let result, value;\n//     !previous || (await previous);\n//     const next = done ? 'return' : 'next';\n//     !(iterator && next in iterator && typeof iterator[next] === 'function') ||\n//       !((result = received === VOID ? iterator[next]() : iterator[next](received)) && (result = await result)) ||\n//       ('done' in result && (done = !!(await result.done)), 'value' in result && (value = await result.value));\n//     return {value, done: !!done};\n//   };\n\n//   /**\n//    * @template T\n//    * @implements {AsyncIterableIterator<T>}\n//    */\n//   class AsyncIterator {\n//     /** @param {IterableIterator<T> | AsyncIterableIterator<T>} [iterator] */\n//     constructor(iterator) {\n//       Object.defineProperty(this, Iterator, {\n//         value:\n//           (iterator &&\n//             (iterator[Iterator] ||\n//               (Symbol.iterator in iterator && iterator[Symbol.iterator]()) ||\n//               (Symbol.asyncIterator in iterator && iterator[Symbol.asyncIterator]()))) ||\n//           EMPTY[Symbol.iterator](),\n//       });\n//     }\n\n//     [Symbol.asyncIterator]() {\n//       return this;\n//     }\n\n//     /** @param {T} [value] @returns {Promise<IteratorResult<T>>} */\n//     async next(value) {\n//       let result;\n//       return this[Done]\n//         ? this[Result] || DONE\n//         : ((this[Done] = (await (result = this[Result] = next(\n//             this[Iterator],\n//             this[Result],\n//             arguments.length ? value : VOID,\n//           ))).done),\n//           result);\n//     }\n\n//     /**\n//      * @param {any} [value]\n//      * @returns {Promise<IteratorResult>}\n//      */\n//     async return(value) {\n//       return this[Done]\n//         ? this[Result] || DONE\n//         : (this[Result] = next(this[Iterator], null, arguments.length ? value : VOID, (this[Done] = true)));\n//     }\n\n//     /**\n//      * @param {any} error\n//      * @returns {Promise<IteratorResult>}\n//      */\n//     async throw(error) {\n//       return this[Done] ? this[Result] || DONE : ((this[Done] = true), (this[Result] = reject(error)));\n//     }\n//   }\n\n//   return AsyncIterator;\n// })();\n\n// const x = new AsyncIterator([1]);\n// const y = x[Symbol.asyncIterator]();\n\n// export const async = {\n//   each: async (iterable, ƒ) => {\n\n//   }\n// };\n\n//  * @param {AsyncIterableIterator<T> | AsyncIterator<T>} iterable\n","import * as dom from '../node_modules/pseudom/pseudom.js';\nexport {encodeEntity, encodeEntities} from '../node_modules/pseudom/pseudom.js';\nimport {each} from './resync.js';\n\n/// OPTIONS\n/** The tag name of the element to use for rendering a token. */\nconst SPAN = 'span';\n\n/** The class name of the element to use for rendering a token. */\nconst CLASS = 'markup';\n\n/** Uses lightweight proxy objects that can be serialized into HTML text */\nconst HTML_MODE = true;\n/// INTERFACE\n\nexport const renderers = {};\n\nexport function* renderer(tokens, tokenRenderers = renderers) {\n  for (const token of tokens) {\n    const {type = 'text', text, punctuator, breaks} = token;\n    const tokenRenderer =\n      (punctuator && (tokenRenderers[punctuator] || tokenRenderers.operator)) ||\n      (type && tokenRenderers[type]) ||\n      (text && tokenRenderers.text);\n    const element = tokenRenderer && tokenRenderer(text, token);\n    element && (yield element);\n  }\n}\n\nexport async function render(tokens, fragment) {\n  let logs, template, first, elements;\n  try {\n    fragment || (fragment = Fragment());\n    logs = fragment.logs || (fragment.logs = []);\n    elements = renderer(tokens);\n    if ((first = await elements.next()) && 'value' in first) {\n      template = Template();\n      if (!native && template && 'textContent' in fragment) {\n        logs.push(`render method = 'text' in template`);\n        const body = [first.value];\n        first.done || (await each(elements, element => body.push(element)));\n        template.innerHTML = body.join('');\n        fragment.appendChild(template.content);\n      } else if ('push' in fragment) {\n        logs.push(`render method = 'push' in fragment`);\n        fragment.push(first.value);\n        first.done || (await each(elements, element => fragment.push(element)));\n      } else if ('append' in fragment) {\n        logs.push(`render method = 'append' in fragment`);\n        fragment.append(first.value);\n        first.done || (await each(elements, element => fragment.append(element)));\n      }\n    }\n    return fragment;\n  } finally {\n    template && (template.innerHTML = '');\n    template = fragment = logs = elements = first = null;\n  }\n}\n\nexport const supported = !!dom.native;\nexport const native = !HTML_MODE && supported;\nconst implementation = native ? dom.native : dom.pseudo;\nexport const {createElement: Element, createText: Text, createFragment: Fragment} = implementation;\nexport const Template = template =>\n  !supported || Template.supported === false\n    ? false\n    : Template.supported === true\n    ? document.createElement('template')\n    : (Template.supported = !!(\n        (template = document.createElement('template')) && 'HTMLTemplateElement' === (template.constructor || '').name\n      )) && template;\n\n/// RENDERERS\nconst factory = (tag, properties) => (content, token) => {\n  if (!content) return;\n  typeof content !== 'string' || (content = Text(content));\n  const element = Element(tag, properties, content);\n  element && token && (token.hint && (element.className += ` ${token.hint}`));\n  return element;\n};\n\nObject.assign(renderers, {\n  whitespace: Text,\n  text: factory(SPAN, {className: CLASS}),\n\n  variable: factory('var', {className: `${CLASS} variable`}),\n  keyword: factory(SPAN, {className: `${CLASS} keyword`}),\n  identifier: factory(SPAN, {className: `${CLASS} identifier`}),\n  operator: factory(SPAN, {className: `${CLASS} punctuator operator`}),\n  assigner: factory(SPAN, {className: `${CLASS} punctuator operator assigner`}),\n  combinator: factory(SPAN, {className: `${CLASS} punctuator operator combinator`}),\n  punctuation: factory(SPAN, {className: `${CLASS} punctuator punctuation`}),\n  quote: factory(SPAN, {className: `${CLASS} punctuator quote`}),\n  breaker: factory(SPAN, {className: `${CLASS} punctuator breaker`}),\n  opener: factory(SPAN, {className: `${CLASS} punctuator opener`}),\n  closer: factory(SPAN, {className: `${CLASS} punctuator closer`}),\n  span: factory(SPAN, {className: `${CLASS} punctuator span`}),\n  sequence: factory(SPAN, {className: `${CLASS} sequence`}),\n  literal: factory(SPAN, {className: `${CLASS} literal`}),\n  indent: factory(SPAN, {className: `${CLASS} sequence indent`}),\n  comment: factory(SPAN, {className: `${CLASS} comment`}),\n  code: factory(SPAN, {className: `${CLASS}`}),\n});\n","import parser from '../extended.js';\nimport * as dom from '../extensions/dom.js';\n\nexport {encodeEntity, encodeEntities} from '../extensions/dom.js';\n\nconst versions = [parser];\nlet lastVersion;\n\nexport const tokenize = (source, options = {}) => {\n  const version = versions[options.version - 1] || versions[0];\n  options.tokenize = (version || parser).tokenize;\n  try {\n    return version.tokenize(source, {options});\n  } finally {\n    !version || lastVersion === (lastVersion = version);\n    // || console.info('Markup Version %O', version);\n  }\n};\n\nexport const render = async (source, options) => dom.render(tokenize(source, options), options && options.fragment);\n\nexport const warmup = (source, options) => {\n  const key = (options && JSON.stringify(options)) || '';\n  let cache = (warmup.cache || (warmup.cache = new Map())).get(key);\n  cache || warmup.cache.set(key, (cache = new Set()));\n  if (cache.has(source)) return;\n  for (const item of tokenize(source, options));\n  cache.add(source);\n};\n","export * from '@smotaal/tokenizer/browser/markup.js';\nexport * from './entities.js';\n// import {entities} from '@smotaal/tokenizer/extensions/common/patterns.js';\n\n// import {raw} from './helpers.js';\n\n// export const {\n// \tUnicodeIdentifier,\n// \tMarkdownIdentityPrefixer,\n// \tMarkdownIdentityJoiner,\n// \tMarkdownIdentityWord,\n// \tMarkdownIdentity,\n// } = (({\n// \tIdentifierStart,\n// \tIdentifierPart,\n// \tUnicodeIdentifierStart = IdentifierStart.slice(2),\n// \tUnicodeIdentifierPart = IdentifierPart.slice(2),\n// \tUnicodeIdentifier = raw`[${UnicodeIdentifierStart}][${UnicodeIdentifierPart}]*`,\n// \tMarkdownWordPrefixes = raw`$@`,\n// \tMarkdownWordPrefix = raw`[${MarkdownWordPrefixes}]?`,\n// \tMarkdownWord = raw`${MarkdownWordPrefix}${UnicodeIdentifier}`,\n// \tMarkdownWordJoiners = raw` \\\\\\/:_\\-\\xA0\\u2000-\\u200B\\u202F\\u2060`,\n// \tMarkdownWordJoiner = raw`[${MarkdownWordJoiners}]+`,\n// \tMarkdownIdentity = raw`(?:\\s|\\n|^)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*(?=\\b[\\s\\n]|$))`,\n// }) => ({\n// \tUnicodeIdentifier: new RegExp(UnicodeIdentifier, 'u'),\n// \tMarkdownIdentityPrefixer: new RegExp(raw`^[${MarkdownWordPrefixes}]?`, 'u'),\n// \tMarkdownIdentityJoiner: new RegExp(raw`[${MarkdownWordJoiners}]+`, 'ug'),\n// \tMarkdownIdentityWord: new RegExp(MarkdownWord, 'u'),\n// \tMarkdownIdentity: new RegExp(MarkdownIdentity, 'u'),\n// \t// MarkdownIdentitySeparators: new RegExp(raw`[${MarkdownWordPrefixes}${MarkdownWordJoiners}]+`, 'ug')\n// }))(entities.es);\n"],"names":["document","Element","Node","Text","DocumentFragment","createElement","createText","createFragment","dom.document","native","dom.native","dom.pseudo","render","dom.render"],"mappings":"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"}