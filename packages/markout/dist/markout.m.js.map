{"version":3,"file":"markout.m.js","sources":["../lib/entities.js","../lib/markout.js"],"sourcesContent":["﻿// import {entities} from '../../../markup/dist/tokenizer/extensions/helpers.mjs';\nimport {entities} from '../../../markup/dist/tokenizer/tokenizer.browser.mjs';\n// import {entities} from './markup.js';\n\nexport const {\n\tUnicodeIdentifier,\n\tMarkdownIdentityPrefixer,\n\tMarkdownIdentityJoiner,\n\tMarkdownIdentityWord,\n\tMarkdownIdentity,\n} = (({\n\traw = String.raw,\n\tIdentifierStart,\n\tIdentifierPart,\n\tUnicodeIdentifierStart = IdentifierStart.slice(2),\n\tUnicodeIdentifierPart = IdentifierPart.slice(2),\n\tUnicodeIdentifier = raw`[${UnicodeIdentifierStart}][${UnicodeIdentifierPart}]*`,\n\tMarkdownWordPrefixes = raw`$@`,\n\tMarkdownWordPrefix = raw`[${MarkdownWordPrefixes}]?`,\n\tMarkdownWord = raw`${MarkdownWordPrefix}${UnicodeIdentifier}`,\n\tMarkdownWordJoiners = raw` \\\\\\/:_\\-\\xA0\\u2000-\\u200B\\u202F\\u2060`,\n\tMarkdownWordJoiner = raw`[${MarkdownWordJoiners}]+`,\n\tMarkdownIdentity = raw`(?:\\s|\\n|^)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*(?=\\b[\\s\\n]|$))`,\n}) => ({\n\tUnicodeIdentifier: new RegExp(UnicodeIdentifier, 'u'),\n\tMarkdownIdentityPrefixer: new RegExp(raw`^[${MarkdownWordPrefixes}]?`, 'u'),\n\tMarkdownIdentityJoiner: new RegExp(raw`[${MarkdownWordJoiners}]+`, 'ug'),\n\tMarkdownIdentityWord: new RegExp(MarkdownWord, 'u'),\n\tMarkdownIdentity: new RegExp(MarkdownIdentity, 'u'),\n\t// MarkdownIdentitySeparators: new RegExp(raw`[${MarkdownWordPrefixes}${MarkdownWordJoiners}]+`, 'ug')\n}))(entities.es);\n","﻿export * from './entities.js';\n\n// import * as markup from './markup.js';\nimport {tokenize as tokenizeMarkup, encodeEntities} from '../../../markup/dist/tokenizer/tokenizer.browser.mjs';\n\nexport const SourceType = 'source-type';\nexport const MarkupSyntax = 'markup-syntax';\n\nconst punctuators = ((\n\trepeats = {['*']: 2, ['`']: 3, ['#']: 6},\n\tentities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n\taliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n\tblocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n\tspans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n\ttags = ['<', '>', '<!--', '-->', '<%', '%>', '</', '/>'],\n) => {\n\tconst {keys} = Object;\n\tconst symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n\tfor (const symbol of symbols) {\n\t\tlet n = repeats[symbol] || 1;\n\t\tconst entity = entities[symbol];\n\t\tlet block = blocks[symbol];\n\t\tlet span = spans[symbol];\n\t\tconst tag = block || span;\n\t\tconst map = (block && blocks) || (span && spans);\n\t\tfor (let i = 1; n--; i++) {\n\t\t\tconst k = symbol.repeat(i);\n\t\t\tconst b = blocks[k];\n\t\t\tconst s = spans[k];\n\t\t\tconst m = (b && blocks) || (s && spans) || map;\n\t\t\tconst t = (b || s || m[k] || tag).replace('*', i);\n\t\t\tconst e = entities[k] || (entity && entity.repeat(i));\n\t\t\tm[k] = t;\n\t\t\te && (entities[k] = e);\n\t\t\tif (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n\t\t}\n\t}\n\tfor (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n\treturn {entities, blocks, spans, tags: new Set(tags)};\n})();\n\nconst Blocks = /(?:^|\\n)([> \\t]*(?:\\`\\`\\`|\\~\\~\\~))[^]+?(?:\\n+\\1\\n?|$)|([^]+?(?:(?=\\n[> \\t]*(?:\\`\\`\\`|\\~\\~\\~))|$))/g;\n\nconst Paragraphs = /(?=(\\n[> \\t]*)\\b)((?:\\1(?!(?:\\d+|[a-z]|[ivx]+)\\. )[^#<>|\\-~\\s\\n][^\\n]*?(?:\\n[> \\t]*(?=\\n|$))+)+)/g;\n\nconst Lists = /(?=(\\n[> \\t]*)(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. ))((?:\\1(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |   ?)+[^\\n]+(?:\\n[> \\t]*)*(?=\\1|$))+)/g;\n\n// CHANGE: Added (…|) to marker capture\nconst Item = /^([> \\t]*)([-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |)([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|[-*] |\\d+\\. |[a-z]\\. |[ivx]+\\. ).*)*)$/gm;\n\nconst References = /\\!?\\[(\\S.+?\\S)\\](?:\\((\\S[^\\n()\\[\\]]*?\\S)\\)|\\[(\\S[^\\n()\\[\\]]*\\S)\\])/g;\nconst Aliases = /^([> \\t]*)\\[(\\S.+?\\S)\\]:\\s+(\\S+)(?:\\s+\"([^\\n]*)\")(?=\\s*$)/gm;\n\nconst Link = /\\s*(\\S+)(?:\\s+\"([^\\n]*)\")?/;\n\nexport const normalizeReferences = sourceText => {\n\tconst aliases = {};\n\n\tlet match;\n\n\tAliases.lastIndex = -1;\n\n\twhile ((match = Aliases.exec(sourceText))) {\n\t\tconst {0: text, 1: alias, 2: href = '', 3: title, index} = match;\n\t\talias && alias.trim() && (aliases[alias] = {alias, href, title, text, index});\n\t}\n\n\treturn sourceText.replace(References, (m, text, link, alias, index) => {\n\t\tconst reference = (alias && (alias = alias.trim())) || (link && (link = link.trim()));\n\t\tif (reference) {\n\t\t\tlet href, title;\n\t\t\t// console.log(m, {text, link, alias, reference, index});\n\t\t\tif (link) {\n\t\t\t\t[, href = '#', title] = Link.exec(link);\n\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t[, href = '#', title] = aliases[alias];\n\t\t\t}\n\t\t\t// console.log(m, {href, title, text, link, alias, reference, index});\n\t\t\tif (m[0] === '!') {\n\t\t\t\treturn `<img src=\"${href}\"${text || title ? ` title=\"${text || title}\"` : ''} />`;\n\t\t\t} else {\n\t\t\t\t// text = text ? text.replace(/^[#]/, encodeEntity) : encodeEntities(href);\n\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\treturn `<a href=\"${href}\"${title ? ` title=\"${title}\"` : ''}>${text || reference}</a>`;\n\t\t\t}\n\t\t}\n\t\treturn m;\n\t});\n};\n\nclass List extends Array {\n\ttoString(inset = this.inset || '', type = this.type || 'ul', style = this.style, start = this.start) {\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(style && `style=\"list-style: ${style}\"`) || ''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(start && `start=\"${start}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst rows = [`${inset}<${type}${(attributes && ` ${attributes}`) || ''}>`];\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof List) {\n\t\t\t\t\tconst last = rows.length - 1;\n\t\t\t\t\tconst row = rows[last];\n\t\t\t\t\tif (last > 0) {\n\t\t\t\t\t\trows[rows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\trows.push(`${inset}\\t<li>\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of inset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log({insetText, text, inset});\n\t\t\t\t\trows.push(text);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trows.push(`${inset}\\t<li>${`${item}`.trim()}</li>`);\n\t\t\t}\n\t\t}\n\t\trows.push(`${inset}</${type}>`);\n\t\treturn rows.join('\\n');\n\t}\n}\n\nexport const normalizeLists = sourceText =>\n\tsourceText.replace(Lists, (m, feed, body) => {\n\t\tlet match, indent;\n\t\tindent = feed.slice(1);\n\t\tconst top = new List();\n\t\tlet list = top;\n\t\tItem.lastIndex = 0;\n\t\twhile ((match = Item.exec(m))) {\n\t\t\tlet [, inset, marker, line] = match;\n\t\t\tif (!line.trim()) continue;\n\n\t\t\tif (marker) {\n\t\t\t\tlet depth = inset.length;\n\t\t\t\tif (depth > list.depth) {\n\t\t\t\t\tconst parent = list;\n\t\t\t\t\tlist = new List();\n\t\t\t\t\tlist.inset = inset;\n\t\t\t\t\tlist.depth = depth;\n\t\t\t\t\t(list.type = marker === '* ' || marker === '- ' ? 'ul' : 'ol') === 'ol' &&\n\t\t\t\t\t\t(list.start = marker.replace(/\\W/g, ''));\n\t\t\t\t\t(list.parent = parent).push(list);\n\t\t\t\t} else if (depth < list.depth) {\n\t\t\t\t\twhile ((list = list.parent) && depth < list.depth);\n\t\t\t\t} else if (!(inset in list)) {\n\t\t\t\t\t// TODO: Figure out if this was just for top!!!\n\t\t\t\t\tlist.inset = inset;\n\t\t\t\t\tlist.depth = depth;\n\t\t\t\t\t(list.type = marker === '* ' || marker === '- ' ? 'ul' : 'ol') === 'ol' &&\n\t\t\t\t\t\t(list.start = marker.replace(/\\W/g, ''));\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(match);\n\t\t\t\t}\n\n\t\t\t\tif (!list) break;\n\n\t\t\t\t'style' in list ||\n\t\t\t\t\t(list.style =\n\t\t\t\t\t\t(list.type === 'ul' && ((marker[0] === '*' && 'disc') || 'square')) ||\n\t\t\t\t\t\t(marker[0] === '0' && 'decimal-leading-zero') ||\n\t\t\t\t\t\t(marker[0] > 0 && 'decimal') ||\n\t\t\t\t\t\t`${marker === marker.toLowerCase() ? 'lower' : 'upper'}-${\n\t\t\t\t\t\t\t/^[ivx]+\\. $/i.test(marker) ? 'roman' : 'latin'\n\t\t\t\t\t\t}`);\n\n\t\t\t\tline = line.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\tlist.push(line);\n\t\t\t} else {\n\t\t\t\tif (list.length) {\n\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\tlist[index] += `<p>${line}</p>`;\n\t\t\t\t} else {\n\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn top.toString(indent);\n\t});\n\nexport const normalizeParagraphs = sourceText =>\n\tsourceText.replace(Paragraphs, (m, feed, body) => {\n\t\tconst paragraphs = body\n\t\t\t.trim()\n\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t.filter(Boolean);\n\n\t\treturn `${feed}<p>${paragraphs.join(`</p>${feed}<p>${feed}`)}</p>`;\n\t});\n\nexport const normalizeBlocks = sourceText =>\n\tsourceText.replace(Blocks, (m, fence, paragraphs) =>\n\t\tfence ? m : normalizeReferences(normalizeParagraphs(normalizeLists(paragraphs))),\n\t);\n\nconst normalized = new Map();\n\nexport const normalizeString = string => Object.keys({[string]: true})[0];\n\nexport const normalize = sourceText => {\n\tlet normalizedText = normalized.get(sourceText);\n\tnormalizedText !== undefined ||\n\t\tnormalized.set(sourceText, (normalizedText = normalizeString(normalizeBlocks(normalizeString(sourceText)))));\n\treturn normalizedText;\n};\n\nexport const tokenize = sourceText => tokenizeMarkup(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const render = (tokens, renderedHTML = '') => {\n\tlet passthru, block, span, fenced, indent, newlines, comment;\n\n\tconst {blocks, spans, entities, tags} = punctuators;\n\n\tconst {raw} = String;\n\n\tfor (const token of tokens) {\n\t\tif (token && token.text) {\n\t\t\tlet {text, type = 'text', punctuator, breaks, hint, previous} = token;\n\t\t\tlet body = text;\n\n\t\t\tif (passthru) {\n\t\t\t\tif (fenced) {\n\t\t\t\t\tif (fenced === passthru) {\n\t\t\t\t\t\tfenced += text;\n\t\t\t\t\t\tpassthru = `<${block} class=\"markup code\" ${text ? ` ${SourceType}=\"${text}\"` : ''}>`;\n\t\t\t\t\t} else if (punctuator === 'closer' && text === '```') {\n\t\t\t\t\t\t// passthru rendered code\n\t\t\t\t\t\trenderedHTML += `${passthru}</${block}>`;\n\t\t\t\t\t\tindent = fenced = passthru = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// passthru code\n\t\t\t\t\t\tpassthru += body.replace(indent, '');\n\t\t\t\t\t}\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\t// passthru body\n\t\t\t\t\tpassthru += body;\n\t\t\t\t\tif (punctuator === 'closer' || (comment && punctuator === 'comment')) {\n\t\t\t\t\t\t// passthru body rendered\n\t\t\t\t\t\trenderedHTML += passthru;\n\t\t\t\t\t\tpassthru = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tlet tag = 'span';\n\t\t\tconst classes = hint.split(/\\s+/);\n\t\t\tlet before, after;\n\n\t\t\tif (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n\t\t\t\t(type === 'text' && breaks) ||\n\t\t\t\t\t(!text.trim() && (type = 'whitespace')) ||\n\t\t\t\t\t(text in entities && (body = entities[text]));\n\n\t\t\t\tif (punctuator) {\n\t\t\t\t\tpassthru = (((comment = punctuator === 'comment' && text) || tags.has(text)) && text) || '';\n\t\t\t\t\tif (passthru) continue;\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif ((fenced = text === '```' && text)) {\n\t\t\t\t\t\t\tblock = 'pre';\n\t\t\t\t\t\t\tpassthru = fenced;\n\t\t\t\t\t\t\t[indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n\t\t\t\t\t\t\tindent && (indent = new RegExp(raw`^${indent}`, 'mg'));\n\t\t\t\t\t\t\t// punctuator opener fence\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (text in spans) {\n\t\t\t\t\t\t\tbefore = `<${spans[text]}${render.classes(classes)}>`;\n\t\t\t\t\t\t\tclasses.push('opener');\n\t\t\t\t\t\t} else if (text === '<!' || text === '<%') {\n\t\t\t\t\t\t\t// Likely <!doctype …> || Processing instruction\n\t\t\t\t\t\t\tlet next;\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t(next = tokens.next().value) &&\n\t\t\t\t\t\t\t\t(body += next.text) &&\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'opener' && /^</.test(next.text)) ||\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'closer' && />$/.test(next.text))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tpassthru = body;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tif (text === '```') {\n\t\t\t\t\t\t\tblock = blocks['```'] || 'pre';\n\t\t\t\t\t\t} else if (text in spans) {\n\t\t\t\t\t\t\tafter = `</${spans[text]}>`;\n\t\t\t\t\t\t\tclasses.push('closer');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(before || after) && (tag = 'tt');\n\t\t\t\t\tclasses.push(`${punctuator}-token`);\n\t\t\t\t} else {\n\t\t\t\t\tif (breaks) {\n\t\t\t\t\t\t(!block && (tag = 'br')) || ((after = `</${block}>`) && (block = body = ''));\n\t\t\t\t\t} else if (type === 'sequence') {\n\t\t\t\t\t\tif (text[0] === '`') {\n\t\t\t\t\t\t\ttag = 'code';\n\t\t\t\t\t\t\tbody = text.replace(/(``?)(.*)\\1/, '$2');\n\t\t\t\t\t\t\tlet fence = '`'.repeat((text.length - body.length) / 2);\n\t\t\t\t\t\t\tbody = encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n\t\t\t\t\t\t\tfence in entities && (fence = entities[fence]);\n\t\t\t\t\t\t\tclasses.push('fenced-code');\n\t\t\t\t\t\t\tclasses.push('code');\n\t\t\t\t\t\t} else if (text.startsWith('---') && !/[^-]/.test(text)) {\n\t\t\t\t\t\t\ttag = 'hr';\n\t\t\t\t\t\t} else if (!block && (block = blocks[text])) {\n\t\t\t\t\t\t\tlet skip;\n\t\t\t\t\t\t\tlet previous = token;\n\t\t\t\t\t\t\tlet inset = '';\n\t\t\t\t\t\t\twhile ((previous = previous.previous)) {\n\t\t\t\t\t\t\t\tif (previous.breaks) break;\n\t\t\t\t\t\t\t\tinset = `${previous.text}${inset}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!/[^> \\t]/.test(inset)) {\n\t\t\t\t\t\t\t\tbefore = `<${block}${render.classes(classes)}>`;\n\t\t\t\t\t\t\t\ttag = 'tt';\n\t\t\t\t\t\t\t\tclasses.push('opener', `${type}-token`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sequence\n\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (type === 'whitespace') {\n\t\t\t\t\t\t// if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n\t\t\t\t\t\ttag = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debug(`${type}:token`)(type, token);\n\t\t\t\t\t\tclasses.push(`${type}-token`);\n\t\t\t\t\t\tbody = text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tbefore && (renderedHTML += before);\n\t\t\ttag === 'br' || (newlines = 0)\n\t\t\t\t? (newlines++ && (renderedHTML += '\\n')) || (renderedHTML += '<br/>')\n\t\t\t\t: tag === 'hr'\n\t\t\t\t? (renderedHTML += '<hr/>')\n\t\t\t\t: body &&\n\t\t\t\t  (tag ? (renderedHTML += `<${tag}${render.classes(classes)}>${body}</${tag}>`) : (renderedHTML += body));\n\t\t\tafter && (renderedHTML += after);\n\t\t}\n\t}\n\n\treturn renderedHTML;\n};\n\nrender.classes = classes => ((classes = classes.filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\n// export const encodeEntity = entity => `&#${entity.charCodeAt(0)};`;\n// export const encodeEntities = string => string.replace(/[\\u00A0-\\u9999<>\\&]/gim, encodeEntity);\n"],"names":["tokenizeMarkup"],"mappings":"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"}