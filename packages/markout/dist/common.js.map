{"version":3,"file":"common.js","sources":["../../packages/markout/lib/markup.js","../../packages/markout/lib/experimental/composable-list.js","../../packages/markout/lib/experimental/block-normalizer.js","../../packages/modules/segmenter/segmenter.js","../../packages/markout/lib/experimental/markout-segmenter.js","../../packages/markout/lib/experimental/segment-normalizer.js","../../packages/markout/lib/normalizer.js","../../packages/markout/lib/constants.js","../../packages/markout/lib/renderer.js"],"sourcesContent":["export * from '/markup/dist/tokenizer.browser.js';\n\n// export const MarkupSourceTypeAttribute = 'source-type';\n// export const MarkupModeAttribute = 'markup-mode';\n// export const MarkupOptionsAttribute = 'markup-options';\n// export const MarkupSyntaxAttribute = 'markup-syntax';\n","﻿export class ComposableList extends Array {\n\ttoString(\n\t\tlistInset = this.listInset || '',\n\t\tlistType = this.listType || 'ul',\n\t\tlistStyle = this.listStyle,\n\t\tlistStart = this.listStart,\n\t) {\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(listStyle && `style=\"list-style: ${listStyle}\"`) || ''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(listStart && `start=\"${listStart}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof ComposableList) {\n\t\t\t\t\tconst last = listRows.length - 1;\n\t\t\t\t\tconst row = listRows[last];\n\t\t\t\t\tlast > 0\n\t\t\t\t\t\t? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n\t\t\t\t\t\t\t\t`${listInset}\\t\\t`,\n\t\t\t\t\t\t  )}\\n${listInset}\\t</li>`)\n\t\t\t\t\t\t: listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of listInset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\tlistRows.push(text);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [, checkbox, content] = /^\\s*(?:\\[([xX]| )\\] |)(.+?)\\s*$/.exec(item);\n\n\t\t\t\tcontent &&\n\t\t\t\t\tlistRows.push(\n\t\t\t\t\t\tcheckbox\n\t\t\t\t\t\t\t? `${listInset}\\t<label><input type=checkbox ${checkbox === ' ' ? '' : ' checked'}/>${content}</label>`\n\t\t\t\t\t\t\t: `${listInset}\\t<li>${content}</li>`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlistRows.push(`${listInset}</${listType}>`);\n\t\treturn `\\n${listRows.join('\\n')}\\n`;\n\t}\n}\n\nComposableList.SQUARE = /^[-](?=\\s|$)/;\nComposableList.DISC = /^[*](?=\\s|$)/;\nComposableList.DECIMAL = /^0*\\d+\\./;\nComposableList.LATIN = /^[a-z]\\./i;\nComposableList.ROMAN = /^[ivx]+\\./i;\nComposableList.ORDERED = /^(?:0+[1-9]\\d*|\\d+|[ivx]+|[a-z])(?=\\. |$)/i;\nComposableList.UNORDERED = /^[-*](?= |$)/i;\n\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)|(\\d+)|([ivx]+)|([a-z]))(?=\\. )|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n\tconst category =\n\t\tComposableList.ORDERED_STYLE.key[\n\t\t\tComposableList.ORDERED_STYLE.exec(marker)\n\t\t\t\t.slice(1)\n\t\t\t\t.findIndex(Boolean)\n\t\t];\n\treturn (\n\t\t(category !== undefined &&\n\t\t\t(category === 'latin' || category === 'roman'\n\t\t\t\t? `${\n\t\t\t\t\t\tvariant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n\t\t\t\t  }-${category}`\n\t\t\t\t: category === 'decimal'\n\t\t\t\t? variant !== 'leading-zero'\n\t\t\t\t\t? 'decimal'\n\t\t\t\t\t: 'decimal-leading-zero'\n\t\t\t\t: variant !== 'decimal'\n\t\t\t\t? 'decimal-leading-zero'\n\t\t\t\t: 'decimal')) ||\n\t\tfallback\n\t);\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n\texpected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n\t['square']: ComposableList.SQUARE,\n\t['disc']: ComposableList.DISC,\n\t['decimal']: ComposableList.DECIMAL,\n\t['decimal-leading-zero']: ComposableList.DECIMAL,\n\t['roman']: ComposableList.ROMAN,\n\t['lower-roman']: ComposableList.ROMAN,\n\t['upper-roman']: ComposableList.ROMAN,\n\t['latic']: ComposableList.LATIN,\n\t['lower-latic']: ComposableList.LATIN,\n\t['upper-latic']: ComposableList.LATIN,\n\t['ul']: ComposableList.UNORDERED,\n\t['ol']: ComposableList.ORDERED,\n};\n","﻿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\n\nconst {\n\t/** Attempts to overcome **__** */\n\n\t'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nconst NormalizableBlocks = /(?:^|\\n)([> \\t]*(?:\\`\\`\\`|\\~\\~\\~))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)|([^]+?(?:(?=\\n[> \\t]*(?:\\`\\`\\`|\\~\\~\\~))|$))/g;\nconst NormalizableParagraphs = /^((?:[ \\t]*\\n([> \\t]*))+)((?:(?!(?:\\d+\\. |[a-z]\\. |[ivx]+\\. |[-*] ))[^\\-#>|~\\n].*(?:\\n[> \\t]*$)+|$)+)/gm;\nconst RewritableParagraphs = /^([ \\t]*[^\\-\\*#>\\n].*?)(\\b.*[^:\\n\\s>]+|\\b)[ \\t]*\\n[ \\t>]*(?=(\\b|\\[.*?\\][^:\\n]?|[^#`\\[\\n]))/gm;\nconst NormalizableLists = /(?=(\\n[> \\t]*)(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. ))((?:\\1(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |   ?)+[^\\n]+(?:\\n[> \\t]*)*(?=\\1|$))+)/g;\nconst NormalizableListItem = /^([> \\t]*)([-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |)([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|[-*] |\\d+\\. |[a-z]\\. |[ivx]+\\. ).*)*)$/gm;\nconst NormalizableReferences = /\\!?\\[(\\S.+?\\S)\\](?:\\((\\S[^\\n()\\[\\]]*?\\S)\\)|\\[(\\S[^\\n()\\[\\]]*\\S)\\])/g;\nconst RewritableAliases = /^([> \\t]*)\\[(\\S.+?\\S)\\]:\\s+(\\S+)(?:\\s+\"([^\\n]*)\"|\\s+'([^\\n]*)'|)(?=\\s*$)/gm;\nconst NormalizableLink = /\\s*((?:\\s?[^'\"\\(\\)\\]\\[\\s\\n]+)*)(?:\\s+[\"']([^\\n]*)[\"']|)/;\n\nexport class MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeBlocks(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n\t\tconst source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\tsources.push(source);\n\n\t\tBlocks: {\n\t\t\tconst body = [];\n\t\t\tconst {\n\t\t\t\tsourceText,\n\t\t\t\t[BLOCKS]: sourceBlocks,\n\t\t\t\t[BLOCKS]: {\n\t\t\t\t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {fenced: fenced = (matchedBlocks.fenced = []), unfenced: unfenced = (matchedBlocks.unfenced = [])},\n\t\t\t\t},\n\t\t\t\t[ALIASES]: sourceAliases,\n\t\t\t\t[ALIASES]: {\n\t\t\t\t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t\t},\n\t\t\t} = source;\n\t\t\tlet match = (NormalizableBlocks.lastIndex = null);\n\n\t\t\tconst replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t\tconst match = {text, indent, alias, href, title, index};\n\n\t\t\t\t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t\treturn alias && alias.trim()\n\t\t\t\t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t\t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\">${title || ''}</a>`)\n\t\t\t\t\t: (unaliased.push(match), text);\n\t\t\t};\n\n\t\t\twhile ((match = NormalizableBlocks.exec(sourceText))) {\n\t\t\t\tmatchedBlocks.push(([match.text, match.fence, match.unfenced] = match));\n\t\t\t\tif (match.fence) {\n\t\t\t\t\tfenced.push(match);\n\t\t\t\t} else {\n\t\t\t\t\tunfenced.push(match);\n\t\t\t\t\tmatch.text = match.text.replace(RewritableAliases, replaceAlias);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNormalization: {\n\t\t\tconst {[BLOCKS]: sourceBlocks} = source;\n\t\t\tfor (const {text, fence, unfenced} of sourceBlocks[MATCHES]) {\n\t\t\t\tsourceBlocks.push(\n\t\t\t\t\tfence\n\t\t\t\t\t\t? text\n\t\t\t\t\t\t: this.normalizeParagraphs(\n\t\t\t\t\t\t\t\tthis.normalizeBreaks(this.normalizeLists(this.normalizeReferences(text, state))),\n\t\t\t\t\t\t  ),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsource.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\treturn source.normalizedText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeReferences(sourceText, state = {}) {\n\t\tconst debugging = import.meta['debug:markout:anchor-normalization'];\n\t\tconst {aliases = (state.aliases = {})} = state;\n\n\t\treturn sourceText.replace(NormalizableReferences, (m, text, link, alias, index) => {\n\t\t\tconst reference = (alias && (alias = alias.trim())) || (link && (link = link.trim()));\n\n\t\t\tif (reference) {\n\t\t\t\tlet href, title;\n\t\t\t\t// debugging && console.log(m, {text, link, alias, reference, index});\n\t\t\t\tif (link) {\n\t\t\t\t\t[, href = '#', title] = NormalizableLink.exec(link);\n\t\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t\t({href = '#', title} = aliases[alias]);\n\t\t\t\t}\n\t\t\t\tdebugging && console.log(m, {href, title, text, link, alias, reference, index});\n\t\t\t\tif (m[0] === '!') {\n\t\t\t\t\treturn ` <img src=\"${href}\"${text || title ? ` title=\"${text || title}\"` : ''} /> `;\n\t\t\t\t} else {\n\t\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\t\treturn ` <a href=\"${href}\"${title ? ` title=\"${title}\"` : ''}>${text || reference}</a>`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t});\n\t}\n\n\tnormalizeBlockquotes(sourceText) {\n\t\t// TODO: Normalize block quotes\n\t\treturn sourceText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t */\n\tnormalizeLists(sourceText) {\n\t\treturn sourceText.replace(NormalizableLists, (m, feed, body) => {\n\t\t\tlet match, indent;\n\t\t\tindent = feed.slice(1);\n\t\t\tlet top = new ComposableList();\n\t\t\tlet list = top;\n\t\t\tconst lists = [top];\n\t\t\tNormalizableListItem.lastIndex = 0;\n\t\t\twhile ((match = NormalizableListItem.exec(m))) {\n\t\t\t\tlet [, matchedInset, matchedMarker, matchedLine] = match;\n\t\t\t\tlet like;\n\t\t\t\tif (!matchedLine.trim()) continue;\n\n\t\t\t\tif (matchedMarker) {\n\t\t\t\t\tlet depth = matchedInset.length;\n\t\t\t\t\tif (depth > list.listDepth) {\n\t\t\t\t\t\tconst parent = list;\n\t\t\t\t\t\tlist.push((list = new ComposableList()));\n\t\t\t\t\t\tlist.parent = parent;\n\t\t\t\t\t} else if (depth < list.listDepth) {\n\t\t\t\t\t\twhile ((list = list.parent) && depth < list.listDepth);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t'listStyle' in list &&\n\t\t\t\t\t\t!(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))\n\t\t\t\t\t\t// ((like = ComposableList.markerIsLike(marker, list.listStyle)) === undefined\n\t\t\t\t\t\t// \t? (like = ComposableList.markerIsLike(marker, list.listType))\n\t\t\t\t\t\t// \t: like)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst parent = list.parent;\n\t\t\t\t\t\t((list = new ComposableList()).parent = parent) ? parent.push(list) : lists.push((top = list));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!list) break;\n\n\t\t\t\t\t'listInset' in list ||\n\t\t\t\t\t\t((list.listInset = matchedInset),\n\t\t\t\t\t\t(list.listDepth = depth),\n\t\t\t\t\t\t(list.listType = matchedMarker === '* ' || matchedMarker === '- ' ? 'ul' : 'ol') === 'ol' &&\n\t\t\t\t\t\t\t(list.listStart = matchedMarker.replace(/\\W/g, '')));\n\n\t\t\t\t\t'listStyle' in list ||\n\t\t\t\t\t\t(list.listStyle =\n\t\t\t\t\t\t\t(list.listType === 'ul' && ((matchedMarker === '* ' && 'disc') || 'square')) ||\n\t\t\t\t\t\t\tComposableList.orderedStyleOf(matchedMarker));\n\n\t\t\t\t\tmatchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\t\tlist.push(matchedLine);\n\t\t\t\t} else {\n\t\t\t\t\tif (list.length) {\n\t\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\t\tlist[index] += `<p>${matchedLine}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lists.map(list => list.toString(indent)).join('\\n');\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t */\n\tnormalizeParagraphs(sourceText) {\n\t\treturn (\n\t\t\tsourceText\n\t\t\t\t// .replace(MalformedParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\t\t// \t// console.log('normalizeParagraphs:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\t\t// \treturn `${a}${b}${(MERGED_MARKING && '\\u{23CE}') || ''} `;\n\t\t\t\t// })\n\t\t\t\t.replace(NormalizableParagraphs, (m, feed, inset, body) => {\n\t\t\t\t\tconst paragraphs = body\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t\t\t\t.filter(Boolean);\n\t\t\t\t\timport.meta['debug:markout:paragraph-normalization'] &&\n\t\t\t\t\t\tconsole.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n\t\t\t\t\t// return `${feed}<p>${paragraphs.join(`</p>${feed}<p>${feed}`)}</p>`;\n\t\t\t\t\treturn `${feed}<p>${paragraphs.join(`</p>\\n${inset}<p>`)}</p>\\n`;\n\t\t\t\t})\n\t\t);\n\t}\n\n\tnormalizeBreaks(sourceText) {\n\t\treturn sourceText.replace(RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\timport.meta['debug:markout:break-normalization'] &&\n\t\t\t\tconsole.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\treturn `${a}${b}${MERGED_MARKING ? '<tt class=\"normalized-break\"> \\u{035C}</tt>' : ' '}`;\n\t\t});\n\t}\n}\n\n// 'listStyle' in list ||\n// \t(list.listStyle =\n// \t\t(list.listType === 'ul' && ((marker[0] === '*' && 'disc') || 'square')) ||\n// \t\t(marker[0] === '0' && 'decimal-leading-zero') ||\n// \t\t(marker[0] > 0 && 'decimal') ||\n// \t\t`${marker === marker.toLowerCase() ? 'lower' : 'upper'}-${\n// \t\t\t/^[ivx]+\\. $/i.test(marker) ? 'roman' : 'latin'\n// \t\t}`);\n","﻿export class Segmenter extends RegExp {\n\t/**\n\t * @param {string | RegExp} pattern\n\t * @param {string} [flags]\n\t * @param {(string|undefined)[]} [types]\n\t */\n\tconstructor(pattern, flags, types) {\n\t\t(pattern &&\n\t\t\tpattern.types &&\n\t\t\tSymbol.iterator in pattern.types &&\n\t\t\t((!types && (types = pattern.types)) || types === pattern.types)) ||\n\t\t\tObject.freeze((types = (types && Symbol.iterator in types && [...types]) || []));\n\t\tconst {LOOKAHEAD = Segmenter.LOOKAHEAD, INSET = Segmenter.INSET, UNKNOWN = Segmenter.UNKNOWN} = new.target;\n\t\tObject.defineProperties(super(pattern, flags), {\n\t\t\ttypes: {value: types, enumerable: true},\n\t\t\tLOOKAHEAD: {value: LOOKAHEAD},\n\t\t\tINSET: {value: INSET},\n\t\t\tUNKNOWN: {value: UNKNOWN},\n\t\t\t// lookaheads: {value: (typeof LOOKAHEAD === 'symbol' && types.indexOf(LOOKAHEAD) + 1) || false},\n\t\t\t// insets: {value: (typeof insets === 'symbol' && types.indexOf(INSET) + 1) || false},\n\t\t});\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t */\n\tmatchType(text, index) {\n\t\treturn index > 0 && text !== undefined && match.types[index - 1] != null;\n\t}\n\n\tcapture(text, index, match) {\n\t\t// let typeOf;\n\t\tif (index === 0 || text === undefined) return;\n\n\t\tconst typeIndex = index - 1;\n\t\tconst type = this.types[typeIndex];\n\n\t\tif (type === INSET) {\n\t\t\tmatch.inset = text;\n\t\t\treturn;\n\t\t} else if (type === LOOKAHEAD) {\n\t\t\tmatch.lookahead = text;\n\t\t\treturn;\n\t\t} else if (type !== UNKNOWN) {\n\t\t\tswitch (typeof type) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tif (match.typeIndex > -1) return;\n\t\t\t\t\tmatch.type = type;\n\t\t\t\t\tmatch.typeIndex = typeIndex;\n\t\t\t\tcase 'symbol':\n\t\t\t\t\tmatch[type] = text;\n\t\t\t\t\treturn;\n\t\t\t\tcase 'function':\n\t\t\t\t\ttype(text, index, match);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t * @returns {typeof match & {slot: number, type: string}}\n\t */\n\texec(source) {\n\t\tconst match = super.exec(source);\n\t\tmatch &&\n\t\t\t((match.typeIndex = -1),\n\t\t\tmatch.forEach(this.capture || Segmenter.prototype.capture, this),\n\t\t\tmatch.typeIndex > -1 || ((match.type = 'unknown'), (match.typeIndex = -1)),\n\t\t\tnull);\n\n\t\treturn match;\n  }\n\n\tstatic define(factory, flags) {\n\t\tconst types = [];\n\t\tconst RegExp = (this && (this.prototype === Segmenter || this.prototype instanceof Segmenter) && this) || Segmenter;\n    const pattern = factory(type => (types.push((type != null || undefined) && type), ''));\n\n    flags = `${(flags == null ? pattern && pattern.flags : flags) || ''}`;\n\n\t\treturn new RegExp(pattern, flags, types);\n\t}\n}\n\nexport const {INSET, UNKNOWN, LOOKAHEAD} = Object.defineProperties(Segmenter, {\n\tINSET: {value: Symbol.for('INSET'), enumerable: true},\n\tUNKNOWN: {value: Symbol.for('UNKNOWN'), enumerable: true},\n\tLOOKAHEAD: {value: Symbol.for('LOOKAHEAD'), enumerable: true},\n});\n","﻿// import dynamicImport from '/browser/dynamic-import.js';\n// import dynamicImport from '/browser/dynamic-import.js';\nimport {sequence} from '/markout/lib/helpers.js';\n// import {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from './segmenter.js';\nimport {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from '../../../modules/segmenter/segmenter.js';\n\n// console.log(import.meta.url);\n\nglobalThis.$mo = async function debug(specifier = '/markout/examples/markdown-testsuite.md') {\n\tconst timestamp = `?${encodeURIComponent(Date.now())}`;\n\t// const {MarkoutSegments} = await import(`/markout/lib/experimental/markout-segmenter.js${timestamp}`);\n\tconst url = new URL(specifier, location);\n\tconst response = await fetch(url);\n\tif (!response.ok) console.warn(Error(`Failed to fetch ${url}`));\n\tconst sourceText = await response.text();\n\t// console.log(dynamicImport);\n\t// const {debugSegmenter} = await dynamicImport('/modules/segmenter/segmenter.debug.js');\n\tconst {debugSegmenter} = await (1, eval)('specifier => import(specifier)')('/modules/segmenter/segmenter.debug.js');\n\tdebugSegmenter(MarkoutSegments, sourceText);\n};\n\nexport const MarkoutSegments = (() => {\n\tconst MarkoutLists = sequence`[-*]|[1-9]+\\d*\\.|[ivx]+\\.|[a-z]\\.`;\n\tconst MarkoutMatter = sequence`---(?=\\n.+)(?:\\n.*)+?\\n---`;\n\tconst MarkoutStub = sequence`<!--[^]*?-->|<!.*?>|<\\?.*?\\?>|<%.*?%>|<(?:\\b|\\/).*(?:\\b|\\/)>.*`;\n\tconst MarkoutStart = sequence`(?!(?:${MarkoutLists}) )(?:[^#${'`'}~<>|\\n\\s]|${'`'}{1,2}(?!${'`'})|~{1, 2}(?!~))`;\n\tconst MarkoutLine = sequence`(?:${MarkoutStart})(?:${MarkoutStub}|.*)*$`;\n\t// const MarkoutDivider = sequence`-(?:[ \\t]*-)+|=(?:=[ \\t]*)+`;\n\tconst MarkoutDivider = sequence`-{2,}|={2,}|\\*{2,}|(?:- ){2,}-|(?:= ){2,}=|(?:\\* ){2,}\\*`;\n\tconst MarkoutATXHeading = sequence`#{1,6}(?= +${MarkoutLine})`;\n\tconst MarkoutTextHeading = sequence`${MarkoutStart}.*\\n(?=\\2\\={3,}\\n|\\2\\-{3,}\\n)`;\n\n\tconst MarkoutSegments = Segmenter.define(\n\t\ttype =>\n\t\t\tsequence`^\n\t\t  (?:\n\t\t    ${type(UNKNOWN)}(${MarkoutMatter}$|[ \\t]*(?:${MarkoutStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${type(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${type('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${type('table')}(?:([|](?=[ :-]).+[|]$)(?:\\n\\2[|].+[|]$)+)|\n\t\t        ${type('heading')}(?:(${MarkoutATXHeading}|${MarkoutTextHeading}).*$)|\n\t\t        ${type('list')}(?:(${MarkoutLists}) +${MarkoutLine}(?:\\n\\2 {2,4}${MarkoutLine})*$)|\n\t\t        ${type('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${type('divider')}(?:(${MarkoutDivider})$)|\n\t\t        ${type('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t        ${type('paragraph')}(?:(${MarkoutLine}(?:\\n\\2 {0,2}${MarkoutLine})*)$)\n\t\t      )|\n\t\t      ${type(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${type(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n\t\t'gmi',\n\t);\n\treturn MarkoutSegments;\n})();\n","﻿import {normalizeString, matchAll} from '/markout/lib/helpers.js';\nimport {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkoutSegments} from './markout-segmenter.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n\t'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeSegments(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n\t\t// for (const segment of matchAll(sourceText, MarkoutSegments)) {}\n\n\t\ttry {\n\t\t\tstate.segments = [...matchAll(sourceText, MarkoutSegments)];\n\n\t\t\treturn this.normalizeBlocks(sourceText, state);\n\t\t} finally {\n\t\t\timport.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n\t\t}\n\n\t\t// const source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\t// sources.push(source);\n\n\t\t// MarkoutBlocks.debug(sourceText);\n\n\t\tBlocks: {\n\t\t\t// const body = [];\n\t\t\t// const {\n\t\t\t// \tsourceText,\n\t\t\t// \t[BLOCKS]: sourceBlocks,\n\t\t\t// \t[BLOCKS]: {\n\t\t\t// \t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t// \t\t[MATCHES]: {fenced: fenced = (matchedBlocks.fenced = []), unfenced: unfenced = (matchedBlocks.unfenced = [])},\n\t\t\t// \t},\n\t\t\t// \t[ALIASES]: sourceAliases,\n\t\t\t// \t[ALIASES]: {\n\t\t\t// \t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t// \t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t// \t},\n\t\t\t// } = source;\n\t\t\t// let match = (NormalizableBlocks.lastIndex = null);\n\t\t\t// const replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t// \tconst match = {text, indent, alias, href, title, index};\n\t\t\t// \t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t// \treturn alias && alias.trim()\n\t\t\t// \t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t// \t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\">${title || ''}</a>`)\n\t\t\t// \t\t: (unaliased.push(match), text);\n\t\t\t// };\n\t\t\t// while ((match = NormalizableBlocks.exec(sourceText))) {\n\t\t\t// \tmatchedBlocks.push(([match.text, match.fence, match.unfenced] = match));\n\t\t\t// \tif (match.fence) {\n\t\t\t// \t\tfenced.push(match);\n\t\t\t// \t} else {\n\t\t\t// \t\tunfenced.push(match);\n\t\t\t// \t\tmatch.text = match.text.replace(RewritableAliases, replaceAlias);\n\t\t\t// \t}\n\t\t\t// }\n\t\t}\n\n\t\tNormalization: {\n\t\t\t// const {[BLOCKS]: sourceBlocks} = source;\n\t\t\t// for (const {text, fence, unfenced} of sourceBlocks[MATCHES]) {\n\t\t\t// \tsourceBlocks.push(\n\t\t\t// \t\tfence\n\t\t\t// \t\t\t? text\n\t\t\t// \t\t\t: this.normalizeParagraphs(\n\t\t\t// \t\t\t\t\tthis.normalizeBreaks(this.normalizeLists(this.normalizeReferences(text, state))),\n\t\t\t// \t\t\t  ),\n\t\t\t// \t);\n\t\t\t// }\n\t\t\t// source.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\t// return source.normalizedText;\n\t}\n}\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'segment-normalization',\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n]);\n","﻿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n\tnormalizeSourceText(sourceText) {\n\t\tconst {normalized = (this.normalized = new Map())} = this;\n\t\tlet normalizedText = normalized.get(sourceText);\n\t\tnormalizedText !== undefined ||\n\t\t\tnormalized.set(\n\t\t\t\tsourceText,\n\t\t\t\t(normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n\t\t\t);\n\t\treturn normalizedText;\n\t}\n}\n","﻿export const SourceTypeAttribute = 'source-type';\nexport const MarkupModeAttribute = 'markup-mode';\nexport const MarkupOptionsAttribute = 'markup-options';\nexport const MarkupSyntaxAttribute = 'markup-syntax';\n","﻿import {MarkoutNormalizer} from './normalizer.js';\nimport {SourceTypeAttribute} from './constants.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t'markout-render-span-restacking': SPAN_RESTACKING = true,\n\t'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n} = import.meta;\n\n// import {tokenize as tokenizeMarkup, encodeEntities} from '../../../markup/dist/tokenizer.browser.js';\nimport {tokenize as tokenizeMarkup, encodeEntities} from './markup.js';\n\nexport const normalize = sourceText => {\n\tconst {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n\treturn normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n\tconst {\n\t\tpunctuators = (render.punctuators = createPunctuators()),\n\t\trenderer = (render.renderer = new MarkoutRenderer({punctuators})),\n\t} = render;\n\treturn renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => tokenizeMarkup(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\n\nclass MarkoutRenderingContext {\n\tconstructor(renderer) {\n\t\t({punctuators: this.punctuators} = this.renderer = renderer);\n\n\t\t[\n\t\t\tthis.passthru,\n\t\t\tthis.block,\n\t\t\tthis.fenced,\n\t\t\tthis.header,\n\t\t\tthis.indent,\n\t\t\tthis.newlines,\n\t\t\tthis.comment,\n\t\t] = this.renderedText = '';\n\n\t\tSPAN_RESTACKING && createSpanStack(this);\n\t}\n}\n\nclass MarkoutRenderer {\n\tconstructor({punctuators = createPunctuators()} = {}) {\n\t\tthis.punctuators = punctuators;\n\t}\n\trenderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n\t\tlet text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, details;\n\t\tcontext.tokens = tokens;\n\n\t\tconst {punctuators} = context;\n\t\tconst {renderClasses} = this;\n\n\t\tfor (const token of context.tokens) {\n\t\t\tif (!token || !(body = token.text)) continue;\n\t\t\t({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\t\t\ttag = classes = before = after = details = undefined;\n\n\t\t\tif (context.passthru || context.fenced) {\n\t\t\t\tif (context.fenced) {\n\t\t\t\t\tif (context.fenced === context.passthru) {\n\t\t\t\t\t\tcontext.header += text;\n\t\t\t\t\t\tlineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n\t\t\t\t\t} else if (punctuator === 'closer' && text === '```') {\n\t\t\t\t\t\tlet sourceType, sourceAttributes;\n\t\t\t\t\t\tif (context.header) {\n\t\t\t\t\t\t\t[, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n\t\t\t\t\t\t\timport.meta['debug:fenced-block-header-rendering'] &&\n\t\t\t\t\t\t\t\tconsole.log('fenced-block-header', {\n\t\t\t\t\t\t\t\t\tfenced: context.fenced,\n\t\t\t\t\t\t\t\t\theader: context.header,\n\t\t\t\t\t\t\t\t\tpassthru: context.passthru,\n\t\t\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\t\t\tsourceAttributes,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// passthru rendered code\n\t\t\t\t\t\tcontext.renderedText += `<${context.block} class=\"markup code\" ${SourceTypeAttribute}=\"${sourceType ||\n\t\t\t\t\t\t\t'markup'}\"${\n\t\t\t\t\t\t\t// sourceParameters ? ` ${SourceParameters}=\"${sourceParameters}\"` : ''\n\t\t\t\t\t\t\t(sourceAttributes && ` ${sourceAttributes}`) || ''\n\t\t\t\t\t\t}>${encodeEntities(context.passthru)}</${context.block}>`;\n\t\t\t\t\t\tcontext.header = context.indent = context.fenced = context.passthru = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// passthru code\n\t\t\t\t\t\tcontext.passthru += body.replace(context.indent, '');\n\t\t\t\t\t}\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\t// passthru body\n\t\t\t\t\tcontext.passthru += body;\n\t\t\t\t\tif (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n\t\t\t\t\t\t// passthru body rendered\n\t\t\t\t\t\tcontext.renderedText += context.passthru;\n\t\t\t\t\t\tcontext.passthru = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttag = 'span';\n\t\t\tclasses = hint.split(/\\s+/);\n\t\t\tbefore, after;\n\n\t\t\tif (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n\t\t\t\t(type === 'text' && lineBreaks) ||\n\t\t\t\t\t(!text.trim() && (type = 'whitespace')) ||\n\t\t\t\t\t(text in punctuators.entities && (body = punctuators.entities[text]));\n\n\t\t\t\tif (punctuator) {\n\t\t\t\t\tcontext.passthru =\n\t\t\t\t\t\t(((context.comment = punctuator === 'comment' && text) || punctuators.tags.has(text)) && text) || '';\n\t\t\t\t\tif (context.passthru) continue;\n\t\t\t\t\t// SPAN_RESTACKING && punctuator === 'opener' && context.stack[text] >= 0 && (punctuator = 'closer');\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif ((context.fenced = text === '```' && text)) {\n\t\t\t\t\t\t\tcontext.block = 'pre';\n\t\t\t\t\t\t\tcontext.passthru = context.fenced;\n\t\t\t\t\t\t\t[context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n\t\t\t\t\t\t\tcontext.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n\t\t\t\t\t\t\tcontext.header = '';\n\t\t\t\t\t\t\t// punctuator opener fence\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (text in punctuators.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tbefore || ((before = `<${punctuators.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n\t\t\t\t\t\t} else if (text === '<!' || text === '<%') {\n\t\t\t\t\t\t\t// Likely <!doctype …> || Processing instruction\n\t\t\t\t\t\t\tlet next;\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t(next = context.tokens.next().value) &&\n\t\t\t\t\t\t\t\t(body += next.text) &&\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'opener' && /^</.test(next.text)) ||\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'closer' && />$/.test(next.text))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontext.passthru = body;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tif (text === '```') {\n\t\t\t\t\t\t\tcontext.block = punctuators.blocks['```'] || 'pre';\n\t\t\t\t\t\t} else if (text in punctuators.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tafter || ((after = `</${punctuators.spans[text]}>`), classes.push('closer'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(before || after) && (tag = 'tt');\n\t\t\t\t\tclasses.push(`${punctuator}-token`);\n\t\t\t\t} else {\n\t\t\t\t\tif (lineBreaks) {\n\t\t\t\t\t\t(!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n\t\t\t\t\t} else if (type === 'sequence') {\n\t\t\t\t\t\tif (text[0] === '`') {\n\t\t\t\t\t\t\ttag = 'code';\n\t\t\t\t\t\t\tbody = text.replace(/(``?)(.*)\\1/, '$2');\n\t\t\t\t\t\t\tlet fence = '`'.repeat((text.length - body.length) / 2);\n\t\t\t\t\t\t\tbody = encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n\t\t\t\t\t\t\tfence in punctuators.entities && (fence = punctuators.entities[fence]);\n\t\t\t\t\t\t\tclasses.push('fenced-code');\n\t\t\t\t\t\t\tclasses.push('code');\n\t\t\t\t\t\t} else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n\t\t\t\t\t\t\ttag = 'hr';\n\t\t\t\t\t\t} else if (!context.block && (context.block = punctuators.blocks[text])) {\n\t\t\t\t\t\t\tlet skip;\n\t\t\t\t\t\t\tlet previous = token;\n\t\t\t\t\t\t\tlet inset = '';\n\t\t\t\t\t\t\twhile ((previous = previous.previous)) {\n\t\t\t\t\t\t\t\tif (previous.lineBreaks) break;\n\t\t\t\t\t\t\t\tinset = `${previous.text}${inset}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!/[^> \\t]/.test(inset)) {\n\t\t\t\t\t\t\t\tbefore = `<${context.block}${renderClasses(classes)}>`;\n\t\t\t\t\t\t\t\ttag = 'tt';\n\t\t\t\t\t\t\t\tclasses.push('opener', `${type}-token`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sequence\n\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (type === 'whitespace') {\n\t\t\t\t\t\t// if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n\t\t\t\t\t\ttag = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debug(`${type}:token`)(type, token);\n\t\t\t\t\t\tclasses.push(`${type}-token`);\n\t\t\t\t\t\tbody = text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdetails =\n\t\t\t\ttag &&\n\t\t\t\t[\n\t\t\t\t\tpunctuator && `punctuator=\"${punctuator}\"`,\n\t\t\t\t\ttype && `token-type=\"${type}\"`,\n\t\t\t\t\thint && `token-hint=\"${hint}\"`,\n\t\t\t\t\tlineBreaks && `line-breaks=\"${lineBreaks}\"`,\n\t\t\t\t].join(' ');\n\n\t\t\tbefore && (context.renderedText += before);\n\t\t\ttag === 'br' || (context.newlines = 0)\n\t\t\t\t? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.newlines++ && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.renderedText += '<br/>')\n\t\t\t\t: tag === 'hr'\n\t\t\t\t? (context.renderedText += '<hr/>')\n\t\t\t\t: body &&\n\t\t\t\t  (tag\n\t\t\t\t\t\t? (context.renderedText += `<${tag} ${details}${renderClasses(classes)}>${body}</${tag}>`)\n\t\t\t\t\t\t: (context.renderedText += body));\n\t\t\tafter && (context.renderedText += after);\n\t\t}\n\n\t\treturn context.renderedText;\n\t\t// return (context.output = new MarkoutOutput(context));\n\t}\n\n\trenderClasses(classes) {\n\t\treturn ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\t}\n}\n\nclass MarkoutOutput extends String {\n\tconstructor(context) {\n\t\tsuper(context.renderedText).context = context;\n\t}\n}\n\n// render.classes = classes => ((classes = classes.filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\n/// Features\n\nconst createPunctuators = (\n\trepeats = {['*']: 2, ['`']: 3, ['#']: 6},\n\tentities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n\taliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n\tblocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n\tspans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n\ttags = ['<', '>', '<!--', '-->', '<%', '%>', '</', '/>'],\n) => {\n\tconst {keys} = Object;\n\tconst symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n\tfor (const symbol of symbols) {\n\t\tlet n = repeats[symbol] || 1;\n\t\tconst entity = entities[symbol];\n\t\tlet block = blocks[symbol];\n\t\tlet span = spans[symbol];\n\t\tconst tag = block || span;\n\t\tconst map = (block && blocks) || (span && spans);\n\t\tfor (let i = 1; n--; i++) {\n\t\t\tconst k = symbol.repeat(i);\n\t\t\tconst b = blocks[k];\n\t\t\tconst s = spans[k];\n\t\t\tconst m = (b && blocks) || (s && spans) || map;\n\t\t\tconst t = (b || s || m[k] || tag).replace('*', i);\n\t\t\tconst e = entities[k] || (entity && entity.repeat(i));\n\t\t\tm[k] = t;\n\t\t\te && (entities[k] = e);\n\t\t\tif (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n\t\t}\n\t}\n\tfor (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n\treturn {entities, blocks, spans, tags: new Set(tags)};\n};\n\nconst createSpanStack = context => {\n\tconst {\n\t\tpunctuators: {spans},\n\t\trenderer,\n\t} = context;\n\tconst stack = [];\n\tstack.open = (text, body, classes) => {\n\t\tconst {[text]: lastIndex, length: index} = stack;\n\t\tif (lastIndex < 0) return (stack[text] = undefined); // ie continue\n\t\tif (lastIndex >= 0) return stack.close(text, body, classes);\n\t\tconst span = spans[text];\n\t\tconst before = `<${span}${renderer.renderClasses(classes)}>`;\n\t\tstack[text] = index;\n\t\tstack.push({text, body, span, index});\n\t\treturn classes.push('opener'), before;\n\t};\n\tstack.close = (text, body, classes) => {\n\t\tconst span = spans[text];\n\t\tconst {[text]: index, length} = stack;\n\t\tif (index === length - 1) {\n\t\t\tindex >= 0 && (stack.pop(), (stack[text] = undefined));\n\t\t\tconst after = `</${span}>`;\n\t\t\treturn classes.push('closer'), after;\n\t\t} else if (index >= 0) {\n\t\t\tclasses.push('closer', `closer-token`);\n\t\t\tconst details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n\t\t\tconst closing = stack.splice(index, length).reverse();\n\t\t\tfor (const {span, text, body} of closing) {\n\t\t\t\tcontext.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n\t\t\t\tstack[text] < index || (stack[text] = -1);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.renderedText += text;\n\t\t}\n\t};\n\tcontext.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/////\n\n// import {sequence} from '../../../../markup/packages/tokenizer/examples/browser/helpers.js';\n// import {matchAll, sequence} from '/markout/lib/helpers.js';\n// import {MarkoutBlocks} from './experimental/normalizer.js';\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n\t'fenced-block-header-rendering',\n]);\n"],"names":["ALIASES","tokenizeMarkup"],"mappings":"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"}