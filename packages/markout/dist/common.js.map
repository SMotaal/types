{"version":3,"file":"common.js","sources":["../../markup/packages/matcher/lib/matcher.js","../../markup/packages/matcher/lib/helpers.js","../../packages/markout/lib/experimental/helpers.js","../../packages/markout/lib/experimental/expressions.js","../../packages/markout/lib/experimental/composable-list.js","../../packages/markout/lib/experimental/block-normalizer.js","../../markup/packages/matcher/lib/segment-matcher.js","../../packages/markout/lib/experimental/markout-segmenter.js","../../packages/markout/lib/experimental/segment-normalizer.js","../../packages/markout/lib/normalizer.js","../../packages/markout/lib/helpers.js","../../packages/markout/lib/content/flags.js","../../packages/markout/lib/content/content.js","../../packages/markout/lib/content/markup.js","../../packages/markout/lib/content.js","../../packages/markout/lib/renderer.js"],"sourcesContent":["﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {MatcherState} from './state.js';\n\n/** Matcher for composable matching */\nexport class Matcher extends RegExp {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    this.state = state;\n    this.exec = this.exec;\n    ({DELIMITER: this.DELIMITER = Matcher.DELIMITER, UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN} = new.target);\n  }\n\n  /**\n   * @param {string} source\n   */\n  exec(source) {\n    /** @type {MatcherExecArray} */\n    let match;\n\n    // @ts-ignore\n    match = super.exec(source);\n\n    // @ts-ignore\n    if (match === null) return null;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n\n    return match;\n  }\n\n  /**\n   * @param {MatcherPatternFactory} factory\n   * @param {MatcherFlags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags, iterative, sourceFlags;\n    flags = '';\n    for (const source of sources) {\n      sourceFlags =\n        (!!source &&\n          (typeof source === 'string'\n            ? source\n            : typeof source === 'object' &&\n              typeof source.flags !== 'string' &&\n              typeof source.source === 'string' &&\n              source.flags)) ||\n        undefined;\n      if (!sourceFlags) continue;\n      for (const flag of sourceFlags)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        (typeof value !== 'symbol' && `${value}`)) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n\n  static get matchAll() {\n    /**\n     * @template {RegExp} T\n     * @type {(string: MatcherText, matcher: T) => MatcherIterator<T> }\n     */\n    // //@ts-ignore\n    // const matchAll = (string, matcher) => new MatcherState(string, matcher);\n    //@ts-ignore\n    const matchAll = (() =>\n      Function.call.bind(\n        // String.prototype.matchAll || // TODO: Uncomment eventually\n        {\n          /**\n           * @this {string}\n           * @param {RegExp | string} pattern\n           */\n          *matchAll() {\n            const matcher =\n              arguments[0] &&\n              (arguments[0] instanceof RegExp\n                ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                : RegExp(arguments[0], 'g'));\n            const string = String(this);\n\n            if (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n            for (\n              let match, lastIndex = -1;\n              lastIndex <\n              ((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n              yield match, matcher.lastIndex = lastIndex\n            );\n          },\n        }.matchAll,\n      ))();\n\n    Object.defineProperty(Matcher, 'matchAll', {value: Object.freeze(matchAll), enumerable: true, writable: false});\n\n    return matchAll;\n  }\n}\n\n// Well-known identities for meaningful debugging which are\n//   Strings but could possible be changed to Symbols\n//\n//   TODO: Revisit Matcher.UNKOWN\n//\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  DELIMITER = (Matcher.DELIMITER = 'DELIMITER'),\n  /** Identity for unknown captures */\n  UNKNOWN = (Matcher.UNKNOWN = 'UNKNOWN'),\n} = Matcher;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nexport const {\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  join,\n  sequence,\n  matchAll,\n} = Matcher;\n","﻿//@ts-check\n\nexport const {atoms, range} = (() => {\n\tconst {freeze} = Object;\n\n\t/** @template {string} T @param {...T} strings */\n\tconst atoms = (...strings) => freeze(strings); // .filter(atoms.filter).sort()\n\n\tatoms.filter = string => typeof string === 'string' && string.length;\n\n\t/** @param {string} string @param {string} [delimiter] */\n\tatoms.split = (string, delimiter = '') => freeze(string.split(delimiter));\n\t/**\n\t * Splits a string into case-distinct subsets as applicable.\n\t *\n\t * NOTE: A non-case-senstive string yields the single\n\t *       subset instance for all its cases. A fully cased\n\t *       string yields separate upper and lower case subsets\n\t *       and a single subset for both initial and any cases.\n\t *\n\t * @param {string} string @param {string} [delimiter]\n\t */\n\tatoms.split.cases = (string, delimiter = '') => {\n\t\t/** Ordered array of every unique original cased atom in the original string */\n\t\tconst initialCase = freeze(atoms.union(...atoms.split(string, delimiter)));\n\n\t\tconst lowerCaseString = string.toLowerCase();\n\t\tconst upperCaseString = string.toUpperCase();\n\n\t\tif (lowerCaseString === upperCaseString) return [initialCase, initialCase, initialCase, initialCase];\n\n\t\t/** Ordered array of every unique original and transformed cased atom in the original string */\n\t\tconst everyCase = freeze(\n\t\t\tatoms.union(...atoms.split(`${string}${delimiter}${lowerCaseString}${delimiter}${upperCaseString}`, delimiter)),\n\t\t);\n\n\t\t/** Ordered array of every unique lower cased atom in the original string */\n\t\tconst lowerCase = freeze(atoms.union(...atoms.split(lowerCaseString, delimiter)));\n\n\t\t/** Ordered array of every unique upper cased atom in the original string */\n\t\tconst upperCase = freeze(atoms.union(...atoms.split(upperCaseString, delimiter)));\n\n\t\treturn everyCase.length === initialCase.length\n\t\t\t? [initialCase, lowerCase, upperCase, initialCase]\n\t\t\t: [everyCase, lowerCase, upperCase, initialCase];\n\t};\n\n\t/** @template {string} T @param {...T} atoms @returns T[] */\n\tatoms.union = (...atoms) => [...new Set(atoms)];\n\n\t/** @template {string} T @param {...T} atoms @returns {string} */\n\tconst range = (...atoms) => `[${atoms.map(range.escape).join('')}]`;\n\trange.escape = (atom, index) =>\n\t\tatom === ']' ? '\\\\]' : atom === '\\\\' ? '\\\\\\\\' : atom === '-' && index !== 0 ? '\\\\-' : atom;\n\n\treturn {freeze, atoms, range};\n})();\n\n/** @param {string} inset */\nexport const countInsetQuotes = inset => {\n\t/** @type {number} */\n\tlet quotes, position;\n\tposition = -1;\n\tquotes = 0;\n\twhile (position++ < (position = inset.indexOf('>', position))) quotes++;\n\treturn quotes;\n};\n\n\n// /** @param {string} string */\n// const upper = string => string.toUpperCase();\n// /** @param {string} string */\n// const lower = string => string.toLowerCase();\n","﻿//@ts-check\n\nimport {Matcher} from '/markup/packages/matcher/matcher.js';\n\nimport {atoms, range} from './helpers.js';\n\n/** Arrays of isolated characters */\nexport const ranges = {};\n\n/** Strings forms of partial recursive expressions */\nexport const sequences = {};\n\n/** Recursive expressions intended to search for qualified substring */\nexport const matchers = {};\n\n/** Isolated expressions intended to test a qualified string */\nexport const patterns = {};\n\n/** Strings forms of partial isolated expressions */\nexport const partials = {};\n\n{\n\tconst {sequence, escape, join} = Matcher;\n\n\tInsets: {\n\t\tranges.Inseter = atoms.split('\\t >'); // 0=tab 1=space 2=quote\n\t\tpartials.Inset = range(...ranges.Inseter);\n\t}\n\n\tFences: {\n\t\t// NOTE: Ambiguities when testing if `~` is meant for\n\t\t//\t\t\t fencing or strikethrough here make it harder\n\t\t//\t\t\t to retain intent and traceablility.\n\t\tranges.FenceMarks = atoms.split('`'); // 0=grave 1=tilde\n\t\tpartials.BlockFence = join(...ranges.FenceMarks.map(fence => escape(fence.repeat(3))));\n\t}\n\n\tLists: {\n\t\tranges.ListMarkers = atoms.split('-*'); // 0=square 1=disc\n\t\t[ranges.CheckMarks, ranges.LowerCheckMarks, ranges.UpperCheckMarks] = atoms.split.cases(' x-'); // 0=unchecked 1=checked 2=indeterminate\n\t\tranges.NumberingSeparators = atoms.split('.)');\n\t\tranges.ArabicNumbers = atoms.split('0123456789');\n\t\t// NOTE: Ambiguities when testing if `i.` is roman or\n\t\t//       latin require temporary restrictions in favor\n\t\t//       of the more popular latin form.\n\t\t//\n\t\t//       Only the subset of ['i', 'v', 'x', 'l'] is\n\t\t//       used which excludes ['c', 'd', 'm'].\n\t\t[ranges.RomanNumerals, ranges.LowerRomanNumerals, ranges.UpperRomanNumerals] = atoms.split.cases('ivxl');\n\t\t[ranges.LatinLetters, ranges.LowerLatinLetters, ranges.UpperLatinLetters] = atoms.split.cases(\n\t\t\t'abcdefghijklmnopqrstuvwxyz',\n\t\t);\n\n\t\t// Unordered lists are broken into two distinct classes:\n\t\t//\n\t\t//   NOTE: Markers are not semantically interchangeable\n\t\t//\n\t\t//   1. Matching Square character (ie `-` per popular notation):\n\t\tpartials.SquareMark = escape(ranges.ListMarkers[0]);\n\t\t//\n\t\t//   2. Matching Disc character (ie `*` per lesser popular notation):\n\t\tpartials.DiscMark = escape(ranges.ListMarkers[1]);\n\t\t//\n\t\t//   Unordered mark is the range of Square/Disc characters:\n\t\tpartials.UnorderedMark = range(...ranges.ListMarkers);\n\n\t\tpartials.NumberingSeparator = range(...ranges.NumberingSeparators);\n\n\t\t// Ordered lists are broken into three distinct classes:\n\t\t//\n\t\t//   NOTE: Ordered markers include both numbering and trailing sparator.\n\t\t//\n\t\t//   1. Matching Decimal characters (one or more with leading zeros)\n\t\t//        NOTE: lookahead is necessary to exclude matching just zero(s)\n\t\tpartials.ArabicNumbering = sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n\t\t\t...ranges.ArabicNumbers.slice(1),\n\t\t)})${range(...ranges.ArabicNumbers)}+`;\n\t\t//\n\t\t//      Matching Zero-leading Decimal characters (two or more):\n\t\t//        NOTE: lookahead is necessary to exclude matching just zero(s)\n\t\tpartials.ZeroLeadingArabicNumbering = sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n\t\t\t...ranges.ArabicNumbers.slice(1),\n\t\t)})${range(...ranges.ArabicNumbers)}{2,}`;\n\t\t//\n\t\t//      Matching Decimal marker (with any separator):\n\t\tpartials.ArabicMarker = sequence`${partials.ArabicNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//      Matching Zero-leading Decimal marker (with any separator):\n\t\tpartials.ZeroLeadingArabicMarker = sequence`${partials.ZeroLeadingArabicNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//   2. Matching Latin character (one only)\n\t\tpartials.LatinNumbering = range(...ranges.LatinLetters);\n\t\tpartials.LowerLatinNumbering = range(...ranges.LowerLatinLetters);\n\t\tpartials.UpperLatinNumbering = range(...ranges.UpperLatinLetters);\n\t\t//\n\t\t//      Matching Latin marker (with any separator):\n\t\tpartials.LatinMarker = sequence`${partials.LatinNumbering}${partials.NumberingSeparator}`;\n\t\tpartials.LowerLatinMarker = sequence`${partials.LowerLatinNumbering}${partials.NumberingSeparator}`;\n\t\tpartials.UpperLatinMarker = sequence`${partials.UpperLatinNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//   3. Matching Roman characters (one or more of the premitted subset)\n\t\tpartials.RomanNumbering = sequence`${range(...ranges.RomanNumerals)}+`;\n\t\tpartials.LowerRomanNumbering = sequence`${range(...ranges.LowerRomanNumerals)}+`;\n\t\tpartials.UpperRomanNumbering = sequence`${range(...ranges.UpperRomanNumerals)}+`;\n\t\t//\n\t\t//      Matching Roman marker (also with trailing \"period\" separator)\n\t\tpartials.RomanMarker = sequence`${partials.RomanNumbering}\\.`;\n\t\tpartials.LowerRomanMarker = sequence`${partials.LowerRomanNumbering}\\.`;\n\t\tpartials.UpperRomanMarker = sequence`${partials.UpperRomanNumbering}\\.`;\n\t\t//\n\t\t//   Ordered marker is the union of Decimal/Latin/Roman partials:\n\t\tpartials.OrderedMarker = sequence`${join(partials.ArabicMarker, partials.LatinMarker, partials.RomanMarker)}`;\n\n\t\t// Checklists are extensions of unordered lists:\n\t\t//\n\t\t//   NOTE: Markout adds an additional `[-]` indeterminate state\n\t\t//\n\t\t//   a. Matching Enclosed character (without any brackets)\n\t\tpartials.CheckMark = range(...ranges.CheckMarks);\n\t\t//\n\t\t//   b. Matching Enclosure characters (with enclosing brackets)\n\t\tpartials.Checkbox = sequence`\\[${partials.CheckMark}\\]`;\n\t\t//\n\t\t//   Checklist marker is space-separated Unordered marker and Checkbox:\n\t\tpartials.ChecklistMarker = sequence`${partials.UnorderedMark} ${partials.Checkbox}`;\n\n\t\t// Matching list markers is done in two ways:\n\t\t//\n\t\t//   1. Matching head portion (ie excluding the checkbox)\n\t\tpartials.ListMarkerHead = join(partials.UnorderedMark, partials.OrderedMarker);\n\t\t//\n\t\t//   2. Matching full marker (ie including the checkbox)\n\t\tpartials.ListMarker = sequence`${join(partials.ChecklistMarker, partials.UnorderedMarker, partials.OrderedMarker)}`;\n\n\t\tpatterns.DiscMarker = sequence`^${partials.DiscMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.SquareMarker = sequence`^${partials.SquareMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.UnorderedMarker = sequence`^${partials.UnorderedMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.ArabicMarker = sequence`^${partials.ArabicMarker}(?= |$)`;\n\t\tpatterns.LatinMarker = sequence`^${partials.LatinMarker}(?= |$)`;\n\t\tpatterns.RomanMarker = sequence`^${partials.RomanMarker}(?= |$)`;\n\t\tpatterns.OrderedMarker = sequence`^${partials.OrderedMarker}(?= |$)`;\n\t\tpatterns.ChecklistMarker = sequence`^${partials.ChecklistMarker}(?= |$)`;\n\n\t\t// There are two groups of list marker expressions:\n\t\tsequences.ListMarkerHead = sequence`(?:${partials.ListMarkerHead})(?: )`;\n\t\tsequences.ListMarker = sequence`(?:${join(\n\t\t\tsequence`(?:${partials.ChecklistMarker} )`,\n\t\t\tsequence`(?:${partials.UnorderedMark} )(?!${partials.Checkbox})`,\n\t\t\tsequence`(?:${partials.OrderedMarker} )`,\n\t\t)})`;\n\n\t\tsequences.NormalizableLists = sequence/* regexp */ `\n\t\t\t(?=\\n?^(${partials.Inset}*)(?:${sequences.ListMarker}))\n\t\t\t((?:\\n?\\1\n\t\t\t\t(?:${sequences.ListMarker}|   ?)+\n\t\t\t\t[^\\n]+\n\t\t\t\t(?:\\n${partials.Inset}*)*\n\t\t\t\t(?=\\n\\1|$)\n\t\t\t)+)\n\t\t`;\n\n\t\tsequences.NormalizableListItem = sequence/* regexp */ `\n\t\t\t^\n\t\t\t(${partials.Inset}*)\n\t\t\t((?:${sequences.ListMarkerHead})|)\n\t\t\t([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|${sequences.ListMarker}).*)*)$\n\t\t`;\n\t\tmatchers.NormalizableLists = new RegExp(sequences.NormalizableLists, 'gmu');\n\t\tmatchers.NormalizableListItem = new RegExp(sequences.NormalizableListItem, 'gmu');\n\t}\n\n\t// console.log({sequences, ranges, partials});\n\t// TODO: Document partials and sequences\n\n\tMatchers: {\n\t\tsequences.NormalizableBlocks = sequence/* regexp */ `\n      (?:^|\\n)(${partials.Inset}*(?:${partials.BlockFence}))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)\n      |(?:^|\\n)(${partials.Inset}*)(?:\n\t\t\t\t<style>[^]+?(?:(?:\\n\\2</style>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script type=module>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t)\n      |([^]+?(?:(?=\\n${partials.Inset}*(?:${partials.BlockFence}|<script>|<style>|<script type=module>))|$))\n    `;\n\t\tmatchers.NormalizableBlocks = new RegExp(sequences.NormalizableBlocks, 'g');\n\n\t\tpartials.HTMLTagBody = sequence/* regexp */ `(?:[^${`\"'`}>]+?|\".*?\"|'.*?')`;\n\n\t\tsequences.HTMLTags = sequence/* regexp */ `\n\t\t\t<\\/?[A-Za-z]\\w*${partials.HTMLTagBody}*?>\n\t\t\t|<\\?[^]*?\\?>\n\t\t\t|<!--[^]*?-->\n\t\t\t|<!\\w[^]>\n\t\t`;\n\n\t\tmatchers.HTMLTags = new RegExp(sequences.HTMLTags, 'g');\n\n\t\tsequences.NormalizableParagraphs = sequence/* regexp */ `\n      ^\n      ((?:[ \\t]*\\n(${partials.Inset}*))+)\n      ($|(?:\n\t\t\t\t(?:\n\t\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>\n\t\t\t\t\t|(?!(?:${join(\n\t\t\t\t\t\tsequences.HTMLTags,\n\t\t\t\t\t\t// sequences.ListMarker,\n\t\t\t\t\t)}))\n\t\t\t\t)\n\t\t\t\t[^-#>|~\\n].*\n        (?:\\n${partials.Inset}*$)+\n      )+)\n    `;\n\t\tmatchers.NormalizableParagraphs = new RegExp(sequences.NormalizableParagraphs, 'gmu');\n\n\t\tsequences.RewritableParagraphs = sequence/* regexp */ `\n      ^\n      ([ \\t]*[^\\-\\*#>\\n].*?)\n      (\\b.*[^:\\n\\s>]+|\\b)\n      [ \\t]*\\n[ \\t>]*?\n      (?=(\n\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>[^-#>|~\\n].*\n        |\\b(?!(?:${sequences.HTMLTags}))\n        |${escape('[')}.*?${escape(']')}[^:\\n]?\n        |[^#${'`'}${escape('[')}\\n]\n      ))\n    `;\n\n\t\tmatchers.RewritableParagraphs = new RegExp(sequences.RewritableParagraphs, 'gmu');\n\n\t\tpartials.BlockQuote = sequence/* regexp */ `(?:  ?|\\t)*>(?:  ?>|\\t>)`;\n\n\t\tsequences.NormalizableBlockquotes = sequence/* regexp */ `\n\t\t\t(?:((?:^|\\n)[ \\t]*\\n|^)|\\n)\n\t\t\t(${partials.BlockQuote}*)\n\t\t\t([ \\t]*(?!>).*)\n\t\t\t(?=\n\t\t\t\t(\\n\\2${partials.BlockQuote}*)\n\t\t\t\t|(\\n\\2)\n\t\t\t\t|(\\n${partials.BlockQuote}*)\n\t\t\t\t|(\\n|$)\n\t\t\t)\n\t\t`;\n\n\t\tmatchers.NormalizableBlockquotes = new RegExp(sequences.NormalizableBlockquotes, 'g');\n\n\t\t// We guard against the special case for checklists\n\t\tsequences.NormalizableReferences = sequence/* regexp */ `\n\t\t  (?!${escape('[')}[- xX]${escape(']')} )\n      !?\n      ${escape('[')}(\\S.*?\\S)${escape(']')}\n      (?:\n        ${escape('(')}(\\S[^\\n${escape('()[]')}]*?\\S)${escape(')')}\n        |${escape('[')}(\\S[^\\n${escape('()[]')}]*\\S)${escape(']')}\n      )\n\t\t`;\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.NormalizableReferences = new RegExp(sequences.NormalizableReferences, 'g');\n\n\t\tsequences.RewritableAliases = sequence/* regexp */ `\n      ^\n      (${partials.Inset}*)\n      ${escape('[')}(\\S.*?\\S)${escape(']')}:\\s+\n      (\\S+)(?:\n        \\s+${'\"'}([^\\n]*)${'\"'}\n        |\\s+${\"'\"}([^\\n]*)${\"'\"}\n        |\n      )\\s*$\n\t\t`;\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.RewritableAliases = new RegExp(sequences.RewritableAliases, 'gm');\n\n\t\tsequences.NormalizableLink = sequence/* regexp */ `\n      \\s*((?:\\s?[^${`'\"`}${escape('()[]')}}\\s\\n]+))\n      (?:\\s+[${`'\"`}]([^\\n]*)[${`'\"`}]|)\n\t\t`; // (?:\\s+{([^\\n]*)}|)\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.NormalizableLink = new RegExp(sequences.NormalizableLink);\n\t}\n}\n\nexport const expressions = {ranges, sequences, matchers, patterns, partials};\n","﻿import {patterns, ranges} from './expressions.js';\n\nexport class ComposableList extends Array {\n\tstatic create(properties, ...elements) {\n\t\treturn Object.assign(new ComposableList(...elements), properties);\n\t}\n\n\ttoString(\n\t\tlistInset = this.listInset || '',\n\t\tlistType = this.listType || 'ul',\n\t\tlistStyle = this.listStyle,\n\t\tlistStart = this.listStart,\n\t) {\n\t\tlistStart &&\n\t\t\ttypeof listStart !== 'number' &&\n\t\t\t(listStart = `${\n\t\t\t\tlistStyle === 'lower-latin' || listStyle === 'upper-latin'\n\t\t\t\t\t? ComposableList.parseLatin(listStart)\n\t\t\t\t\t: listStyle === 'lower-roman' || listStyle === 'upper-roman'\n\t\t\t\t\t? ComposableList.parseRoman(listStart)\n\t\t\t\t\t: parseInt(listStart) || ''\n\t\t\t}`);\n\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(listStyle &&\n\t\t\t\t`style=\"list-style: ${listStyle}\"${(listStyle in ListTypes && ` type=\"${ListTypes[listStyle]}\"`) || ''}`) ||\n\t\t\t\t''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(listStart && `start=\"${listStart}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\n\t\t/** @type {import('./block-normalizer.js').MarkoutBlockNormalizer} */\n\t\tconst normalizer = this.normalizer;\n\n\t\t// .split('\\n\\n').map(line => `<p>${line}</p>`).join('')\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof ComposableList) {\n\t\t\t\t\tconst last = listRows.length - 1;\n\t\t\t\t\tconst row = listRows[last];\n\t\t\t\t\tlast > 0\n\t\t\t\t\t\t? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n\t\t\t\t\t\t\t\t`${listInset}\\t\\t`,\n\t\t\t\t\t\t  )}\\n${listInset}\\t</li>`)\n\t\t\t\t\t\t: listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of listInset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\t// if (normalizer) {\n\t\t\t\t\t// \tconsole.log({normalizer, text});\n\t\t\t\t\t// \ttext = normalizer.normalizeParagraphs(`\\n\\n${text}`);\n\t\t\t\t\t// }\n\t\t\t\t\tlistRows.push(text);\n\t\t\t\t\t// listRows.push(text.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b|\\n+))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [, checked, content] = /^\\s*(?:\\[([-xX]| )\\] |)(.+?)\\s*$/.exec(item);\n\n\t\t\t\tcontent &&\n\t\t\t\t\tlistRows.push(\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t? `${listInset}\\t<li type=checkbox ${\n\t\t\t\t\t\t\t\t\tchecked === ' ' ? '' : checked === '-' ? 'indeterminate' : ' checked'\n\t\t\t\t\t\t\t  }> ${\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t// content.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m))\n\t\t\t\t\t\t\t  } </li>`\n\t\t\t\t\t\t\t: `${listInset}\\t<li> ${content} </li>`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlistRows.push(`${listInset}</${listType}>`);\n\t\t// console.log(this, {normalizer, listRows});\n\t\treturn `\\n${listRows.join('\\n')}\\n`;\n\t}\n}\n\nconst ChecklistMarker = new RegExp(patterns.ChecklistMarker);\nconst SquareMarker = new RegExp(patterns.SquareMarker);\nconst DiscMarker = new RegExp(patterns.DiscMarker);\nconst ArabicMarker = new RegExp(patterns.ArabicMarker);\nconst ZeroLeadingArabicMarker = new RegExp(patterns.ZeroLeadingArabicMarker);\nconst LatinMarker = new RegExp(patterns.LatinMarker);\nconst LowerLatinMarker = new RegExp(patterns.LowerLatinMarker);\nconst UpperLatinMarker = new RegExp(patterns.UpperLatinMarker);\nconst RomanMarker = new RegExp(patterns.RomanMarker);\nconst LowerRomanMarker = new RegExp(patterns.LowerRomanMarker);\nconst UpperRomanMarker = new RegExp(patterns.UpperRomanMarker);\nconst OrderedMarker = new RegExp(patterns.OrderedMarker);\nconst UnorderedMarker = new RegExp(patterns.UnorderedMarker);\nconst ListTypes = {\n\t'lower-latin': 'a',\n\t'upper-latin': 'A',\n\t'lower-roman': 'i',\n\t'upper-roman': 'I',\n\tdecimal: '1',\n\t'decimal-leading-zero': '1',\n};\n\nLATIN: {\n\tconst parseLatin = latin => parseLatin.mappings[latin] || NaN;\n\n\tparseLatin.mappings = {};\n\n\t'abcdefghijklmnopqrstuvwxyz'.split('').forEach((latin, index) => {\n\t\tparseLatin.mappings[(parseLatin.mappings[latin] = parseLatin.mappings[latin.toUpperCase] = index + 1)] = latin;\n\t});\n\n\tComposableList.parseLatin = parseLatin;\n}\n\nROMAN: {\n\tconst parseRoman = roman =>\n\t\t/[^ivxlcdm]/i.test((roman = String(roman)))\n\t\t\t? NaN\n\t\t\t: roman\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split('')\n\t\t\t\t\t.reduce(parseRoman.reducer, 0);\n\t// prettier-ignore\n\tparseRoman.mappings = Object.freeze({i: 1, v: 5, x: 10, l: 50, c: 100, d: 500, m: 1000, 1: 'i', 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm'});\n\n\tparseRoman.reducer = (decimal, character, index, characters) =>\n\t\tdecimal +\n\t\t(parseRoman.mappings[character] < parseRoman.mappings[characters[index + 1]]\n\t\t\t? -parseRoman.mappings[character]\n\t\t\t: parseRoman.mappings[character]);\n\n\tComposableList.parseRoman = parseRoman;\n}\n\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)(?=\\. )|(\\d+)(?=\\. )|([ivx]+)(?=\\. )|([a-z])(?=[.)] ))|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n\tconst category =\n\t\tComposableList.ORDERED_STYLE.key[\n\t\t\tComposableList.ORDERED_STYLE.exec(marker)\n\t\t\t\t.slice(1)\n\t\t\t\t.findIndex(Boolean)\n\t\t];\n\treturn (\n\t\t(category !== undefined &&\n\t\t\t(category === 'latin' || category === 'roman'\n\t\t\t\t? `${\n\t\t\t\t\t\tvariant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n\t\t\t\t  }-${category}`\n\t\t\t\t: category === 'decimal'\n\t\t\t\t? variant !== 'leading-zero'\n\t\t\t\t\t? 'decimal'\n\t\t\t\t\t: 'decimal-leading-zero'\n\t\t\t\t: variant !== 'decimal'\n\t\t\t\t? 'decimal-leading-zero'\n\t\t\t\t: 'decimal')) ||\n\t\tfallback\n\t);\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n\texpected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n\t['square']: SquareMarker,\n\t['disc']: DiscMarker,\n\t['decimal']: ArabicMarker,\n\t['decimal-leading-zero']: ZeroLeadingArabicMarker,\n\t['latin']: LatinMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-latin']: LatinMarker,\n\t['upper-latin']: LatinMarker,\n\t['roman']: RomanMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-roman']: RomanMarker,\n\t['upper-roman']: RomanMarker,\n\t['ol']: OrderedMarker,\n\t['ul']: UnorderedMarker,\n\t['checkbox']: ChecklistMarker,\n};\n","﻿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\nimport {matchers} from './expressions.js';\nimport {countInsetQuotes} from './helpers.js';\nimport {escape} from '/markup/packages/matcher/matcher.js';\n\nconst {\n\t/** Attempts to overcome **__** */\n\t'markout-render-comment-stashing': COMMENT_STASHING = false,\n\t'markout-render-paragraph-trimming': PARAGRAPH_TRIMMING = true,\n} = import.meta;\n\nconst generateBlockquotes = (quotesAfter, quotesBefore = 0) => {\n\tlet blockquotes, steps, level;\n\n\tsteps = quotesAfter - (quotesBefore || 0);\n\n\tif (steps < 0) {\n\t\treturn '</p></blockquote>'.repeat(-steps);\n\t} else if (steps > 0) {\n\t\tblockquotes = new Array(steps);\n\t\tfor (level = quotesAfter; steps; blockquotes[steps--] = `<blockquote blockquote-level=${level--}><p>`);\n\t\treturn blockquotes.join('');\n\t} else {\n\t\treturn '';\n\t}\n};\n\nexport class MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeBlocks(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n\t\tconst source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\tsources.push(source);\n\n\t\t// ({body: sourceText, comments: state.comments} = decomment(sourceText));\n\n\t\tBlocks: {\n\t\t\tconst body = [];\n\t\t\tconst {\n\t\t\t\tsourceText,\n\t\t\t\t[BLOCKS]: sourceBlocks,\n\t\t\t\t[BLOCKS]: {\n\t\t\t\t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {\n\t\t\t\t\t\tfenced: fenced = (matchedBlocks.fenced = []),\n\t\t\t\t\t\tembedded: embedded = (matchedBlocks.embedded = []),\n\t\t\t\t\t\tunfenced: unfenced = (matchedBlocks.unfenced = []),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[ALIASES]: sourceAliases,\n\t\t\t\t[ALIASES]: {\n\t\t\t\t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t\t},\n\t\t\t} = source;\n\t\t\tlet match = (matchers.NormalizableBlocks.lastIndex = null);\n\n\t\t\tconst replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t\tconst match = {text, indent, alias, href, title, index};\n\n\t\t\t\t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t\treturn alias && alias.trim()\n\t\t\t\t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t\t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\">${title || ''}</a>`)\n\t\t\t\t\t: (unaliased.push(match), text);\n\t\t\t};\n\n\t\t\twhile ((match = matchers.NormalizableBlocks.exec(sourceText))) {\n\t\t\t\tmatchedBlocks.push(([match.text, match.fence, match.inset, match.unfenced] = match));\n\t\t\t\tif (match.fence) {\n\t\t\t\t\tfenced.push(match);\n\t\t\t\t} else if (match.inset !== undefined) {\n\t\t\t\t\tembedded.push(match);\n\t\t\t\t} else {\n\t\t\t\t\tunfenced.push(match);\n\t\t\t\t\tmatch.text = match.text.replace(matchers.RewritableAliases, replaceAlias);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(matchedBlocks);\n\t\t}\n\n\t\tNormalization: {\n\t\t\t/** @type {{[BLOCKS]: {[MATCHES]: MatchedBlock[]}}} */\n\t\t\tconst {[BLOCKS]: sourceBlocks} = source;\n\t\t\tfor (const matchedBlock of sourceBlocks[MATCHES]) {\n\t\t\t\tsourceBlocks.push(\n\t\t\t\t\tmatchedBlock.fence !== undefined\n\t\t\t\t\t\t? this.normalizeFencing(\n\t\t\t\t\t\t\t\tmatchedBlock.text,\n\t\t\t\t\t\t\t\t// Provides the fence\n\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: matchedBlock.inset !== undefined\n\t\t\t\t\t\t? matchedBlock.text\n\t\t\t\t\t\t: this.normalizeParagraphs(\n\t\t\t\t\t\t\t\tthis.normalizeBreaks(\n\t\t\t\t\t\t\t\t\tthis.normalizeLists(\n\t\t\t\t\t\t\t\t\t\tthis.normalizeBlockquotes(\n\t\t\t\t\t\t\t\t\t\t\tthis.normalizeReferences(matchedBlock.text, state),\n\t\t\t\t\t\t\t\t\t\t\t// Provides the inset\n\t\t\t\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  ),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsource.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\t// source.normalizedText = recomment(source.normalizedText, state.comments);\n\n\t\treturn source.normalizedText;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeFencing(sourceText, matchedBlock) {\n\t\t// const debugging = true;\n\t\tconst inset = sourceText.slice(0, sourceText.indexOf('```'));\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tif (inset.trim() === '') return sourceText;\n\t\tconst quotesBefore = countInsetQuotes(inset);\n\t\tconst Inset = new RegExp(`${escape(inset.trimRight())}(?:  ?|\\t|(?=\\n|$))`, 'g');\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tconst normalized = sourceText.replace(/```\\S*/, `$& blockquote-level=${quotesBefore}`).replace(Inset, '\\n');\n\t\treturn normalized;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeBlockquotes(sourceText, matchedBlock) {\n\t\tconst debugging = false;\n\t\tdebugging === true && (matchedBlock.blockquotes = []);\n\n\t\tmatchers.NormalizableBlockquotes.lastIndex = 0;\n\t\tsourceText = sourceText.replace(\n\t\t\tmatchers.NormalizableBlockquotes,\n\t\t\t(matched, leader, quote, quoted, inquote, requote, dequote, unquote, index, sourceText) => {\n\t\t\t\tlet before, after;\n\t\t\t\tif (quote === undefined) return matched;\n\n\t\t\t\tconst quotesBefore = countInsetQuotes(quote);\n\t\t\t\tconst indent = quote.slice(0, quote.indexOf('>'));\n\t\t\t\tconst quotesAfter =\n\t\t\t\t\tunquote !== undefined\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: requote !== undefined\n\t\t\t\t\t\t? quotesBefore\n\t\t\t\t\t\t: inquote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(inquote)\n\t\t\t\t\t\t: dequote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(dequote)\n\t\t\t\t\t\t: quotesBefore;\n\n\t\t\t\tbefore = leader !== undefined ? `${leader}${indent}${generateBlockquotes(quotesBefore, 0)}` : `\\n${indent}`;\n\n\t\t\t\tafter = generateBlockquotes(quotesAfter, quotesBefore);\n\n\t\t\t\tconst replaced = `${before}${quoted.trimLeft()}${after ? `\\n${indent}${after}` : ''}`;\n\n\t\t\t\tdebugging === true &&\n\t\t\t\t\tmatchedBlock.blockquotes.push({\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tindent,\n\t\t\t\t\t\tquotesBefore,\n\t\t\t\t\t\tquotesAfter,\n\t\t\t\t\t\tmatched: [matched, leader, quote, quoted, inquote, requote, dequote, unquote],\n\t\t\t\t\t});\n\t\t\t\treturn replaced;\n\t\t\t},\n\t\t);\n\n\t\t// TODO: Normalize block quotes\n\t\tdebugging === true && matchedBlock.blockquotes.length > 0 && console.table(matchedBlock.blockquotes);\n\n\t\treturn sourceText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeReferences(sourceText, state = {}) {\n\t\tconst debugging = import.meta['debug:markout:anchor-normalization'];\n\t\tconst {aliases = (state.aliases = {})} = state;\n\n\t\treturn sourceText.replace(matchers.NormalizableReferences, (m, text, link, alias, index) => {\n\t\t\tconst reference = (alias && (alias = alias.trim())) || (link && (link = link.trim()));\n\n\t\t\tif (reference) {\n\t\t\t\tlet href, title, match;\n\t\t\t\t// debugging && console.log(m, {text, link, alias, reference, index});\n\t\t\t\tif (link) {\n\t\t\t\t\t[, href, title] = match = matchers.NormalizableLink.exec(link);\n\t\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t\t({href, title} = match = aliases[alias]);\n\t\t\t\t}\n\n\t\t\t\t// console.log('reference — %O ', {m, text, link, alias, match});\n\n\t\t\t\tif (m[0] === '!') {\n\t\t\t\t\treturn ` <img${href ? ` src=\"${encodeURI(href)}\"` : ''}${\n\t\t\t\t\t\ttext || title ? ` title=\"${text || title}\"` : ''\n\t\t\t\t\t} />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\t\treturn ` <a${href ? ` href=\"${href}\"` : ''}${title ? ` title=\"${title}\"` : ''}>${text || reference}</a>`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeLists(sourceText) {\n\t\tconst listProperties = {normalizer: this};\n\t\treturn sourceText.replace(matchers.NormalizableLists, (m, feed, body) => {\n\t\t\tlet match, indent;\n\t\t\tindent = feed.slice(1);\n\t\t\tlet top = ComposableList.create(listProperties);\n\t\t\tlet list = top;\n\t\t\tconst lists = [top];\n\t\t\tmatchers.NormalizableListItem.lastIndex = 0;\n\t\t\twhile ((match = matchers.NormalizableListItem.exec(m))) {\n\t\t\t\tlet [text, matchedInset, matchedMarker, matchedLine] = match;\n\t\t\t\tlet like;\n\t\t\t\tif (!matchedLine.trim()) continue;\n\n\t\t\t\t// console.log(text, {matchedInset, matchedMarker, matchedLine});\n\n\t\t\t\tif (matchedMarker) {\n\t\t\t\t\tlet depth = matchedInset.length;\n\t\t\t\t\tif (depth > list.listDepth) {\n\t\t\t\t\t\tconst parent = list;\n\t\t\t\t\t\tlist.push((list = ComposableList.create(listProperties)));\n\t\t\t\t\t\tlist.parent = parent;\n\t\t\t\t\t} else if (depth < list.listDepth) {\n\t\t\t\t\t\twhile ((list = list.parent) && depth < list.listDepth);\n\t\t\t\t\t} else if ('listStyle' in list && !(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))) {\n\t\t\t\t\t\tconst parent = list.parent;\n\t\t\t\t\t\t((list = ComposableList.create(listProperties)).parent = parent)\n\t\t\t\t\t\t\t? parent.push(list)\n\t\t\t\t\t\t\t: lists.push((top = list));\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(text, [matchedMarker, list.listStyle, like]);\n\n\t\t\t\t\tif (!list) break;\n\n\t\t\t\t\t'listInset' in list ||\n\t\t\t\t\t\t((list.listInset = matchedInset),\n\t\t\t\t\t\t(list.listDepth = depth),\n\t\t\t\t\t\t(list.listType =\n\t\t\t\t\t\t\tmatchedMarker[0] === '*' || matchedMarker[0] === '-'\n\t\t\t\t\t\t\t\t? 'ul'\n\t\t\t\t\t\t\t\t: ((list.listStart = matchedMarker.replace(/\\W/g, '')), 'ol')));\n\n\t\t\t\t\t'listStyle' in list ||\n\t\t\t\t\t\t(list.listStyle =\n\t\t\t\t\t\t\t(list.listType === 'ul' && ((matchedMarker[0] === '*' && 'disc') || 'square')) ||\n\t\t\t\t\t\t\tComposableList.orderedStyleOf(matchedMarker));\n\n\t\t\t\t\tmatchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\t\tlist.push(matchedMarker[2] === '[' ? `${matchedMarker.slice(2)}${matchedLine}` : matchedLine);\n\t\t\t\t} else {\n\t\t\t\t\tif (list.length) {\n\t\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\t\tlist[index] += `<p>${matchedLine}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lists.map(list => list.toString(indent)).join('\\n');\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeParagraphs(sourceText) {\n\t\tsourceText = sourceText.replace(matchers.NormalizableParagraphs, (m, feed, inset, body) => {\n\t\t\tlet paragraphs, comments;\n\n\t\t\tCOMMENT_STASHING && ({body, comments} = decomment(body));\n\n\t\t\tparagraphs = body\n\t\t\t\t.trim()\n\t\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t\t.filter(isNotBlank);\n\n\t\t\timport.meta['debug:markout:paragraph-normalization'] &&\n\t\t\t\tconsole.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n\t\t\tbody = `${feed}<p> ${paragraphs.join(` </p>\\n${inset}<p> `)} </p>\\n`;\n\n\t\t\tCOMMENT_STASHING && (body = recomment(body, comments));\n\n\t\t\treturn body;\n\t\t});\n\n\t\tPARAGRAPH_TRIMMING && (sourceText = sourceText.replace(/<p>[\\s\\n]*<\\/p>/g, ''));\n\n\t\treturn sourceText;\n\t}\n\n\tnormalizeBreaks(sourceText) {\n\t\treturn sourceText.replace(matchers.RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\timport.meta['debug:markout:break-normalization'] &&\n\t\t\t\tconsole.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\treturn `${a}${b} `;\n\t\t});\n\t}\n}\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nconst decomment = body => {\n\tconst comments = [];\n\tbody = body.replace(/<!--[^]+-->/g, comment => `<!--${comments.push(comment)}!-->`);\n\treturn {body, comments};\n};\n\nconst recomment = (body, comments) => {\n\treturn body.replace(\n\t\tnew RegExp(`<!--(${comments.map((comment, i) => comments.length - i).join('|')})!-->`, 'g'),\n\t\t(comment, index) => comments[index] || '<!---->',\n\t);\n};\n\nconst isNotBlank = text => typeof text === 'string' && !(text === '' || text.trim() === '');\n\n/** @template {string} T @typedef {Partial<Record<T, string>>} MatchedRecord */\n/** @typedef {MatchedRecord<'text'|'fence'|'inset'|'unfenced'>} MatchedBlockRecord */\n/** @typedef {RegExpExecArray & MatchedBlockRecord} MatchedBlock */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\nexport {DELIMITER, UNKNOWN} from './matcher.js';\n\n/** Segmenter for sub-match captures */\nexport class SegmentMatcher extends Matcher {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags, entities, state);\n    this.capture = this.capture;\n  }\n  /**\n   * @template {MatcherMatch} T\n   * @param {string} text\n   * @param {number} capture\n   * @param {T} match\n   * @returns {T}\n   */\n  capture(text, capture, match) {\n    if (capture === 0) return void (match.capture = {});\n    if (text === undefined) return;\n    const index = capture - 1;\n    const {\n      entities: {[index]: entity},\n      state,\n    } = this;\n    typeof entity === 'function'\n      ? ((match.entity = index), entity(text, capture, match, state))\n      : entity == null ||\n        // entity === INSET ||\n        // entity === LOOKAHEAD ||\n        // entity === Matcher.DELIMITER ||\n        // entity === Matcher.UNKNOWN ||\n        (match.entity !== undefined || ((match.identity = entity), (match.entity = index)),\n        (match.capture[entity] = text));\n  }\n\n  /**\n   * @param {string} source\n   */\n  exec(source) {\n    /** @type {MatcherExecArray} */\n    let match;\n\n    // @ts-ignore\n    match = super.exec(source);\n\n    // @ts-ignore\n    if (match === null) return null;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    match &&\n      (match.forEach(this.capture || SegmentMatcher.prototype.capture, this),\n      match.identity || (match.capture[this.UNKNOWN || Matcher.UNKNOWN] = match[0]));\n\n    return match;\n  }\n}\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  INSET = (SegmentMatcher.INSET = 'INSET'),\n  /** Identity for unknown captures */\n  LOOKAHEAD = (SegmentMatcher.LOOKAHEAD = 'LOOKAHEAD'),\n} = SegmentMatcher;\n","﻿// import dynamicImport from '/browser/dynamic-import.js';\n// import {sequence} from '/markout/lib/helpers.js';\nimport {SegmentMatcher, INSET, LOOKAHEAD, UNKNOWN} from '/markup/packages/matcher/lib/segment-matcher.js';\n\n// console.log(import.meta.url);\n\nglobalThis.$mo = async function debug(specifier = '/markout/examples/markdown-testsuite.md') {\n\tconst timestamp = `?${encodeURIComponent(Date.now())}`;\n\tconst url = new URL(specifier, location);\n\tconst response = await fetch(url);\n\tif (!response.ok) console.warn(Error(`Failed to fetch ${url}`));\n\tconst sourceText = await response.text();\n\t// console.log(dynamicImport);\n\tconst {debugMatcher, debugSegmenter = debugMatcher} = await (1, eval)('specifier => import(specifier)')(\n\t\t'/markup/packages/matcher/lib/debug.js',\n\t);\n\tdebugSegmenter(MarkoutSegments, sourceText);\n};\n\nexport const MarkoutSegments = (() => {\n\tconst MarkoutLists = SegmentMatcher.sequence/* regexp */ `[-*]|[1-9]+\\d*\\.|[ivx]+\\.|[a-z]\\.`;\n\tconst MarkoutMatter = SegmentMatcher.sequence/* regexp */ `---(?=\\n.+)(?:\\n.*)+?\\n---`;\n\tconst MarkoutStub = SegmentMatcher.sequence/* regexp */ `<!--[^]*?-->|<!.*?>|<\\?.*?\\?>|<%.*?%>|<(?:\\b|\\/).*(?:\\b|\\/)>.*`;\n\tconst MarkoutStart = SegmentMatcher.sequence/* regexp */ `(?!(?:${MarkoutLists}) )(?:[^#${'`'}~<>|\\n\\s]|${'`'}{1,2}(?!${'`'})|~{1, 2}(?!~))`;\n\tconst MarkoutLine = SegmentMatcher.sequence/* regexp */ `(?:${MarkoutStart})(?:${MarkoutStub}|.*)*$`;\n\t// const MarkoutDivider = SegmentMatcher.sequence/* regexp */`-(?:[ \\t]*-)+|=(?:=[ \\t]*)+`;\n\tconst MarkoutDivider = SegmentMatcher.sequence/* regexp */ `-{2,}|={2,}|\\*{2,}|(?:- ){2,}-|(?:= ){2,}=|(?:\\* ){2,}\\*`;\n\tconst MarkoutATXHeading = SegmentMatcher.sequence/* regexp */ `#{1,6}(?= +${MarkoutLine})`;\n\tconst MarkoutTextHeading = SegmentMatcher.sequence/* regexp */ `${MarkoutStart}.*\\n(?=\\2\\={3,}\\n|\\2\\-{3,}\\n)`;\n\n\tconst MarkoutSegments = SegmentMatcher.define(\n\t\tentity => SegmentMatcher.sequence/* regexp */ `^\n\t\t  (?:\n\t\t    ${entity(UNKNOWN)}(${MarkoutMatter}$|[ \\t]*(?:${MarkoutStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${entity(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${entity('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${entity('table')}(?:([|](?=[ :-]).+[|]$)(?:\\n\\2[|].+[|]$)+)|\n\t\t        ${entity('heading')}(?:(${MarkoutATXHeading}|${MarkoutTextHeading}).*$)|\n\t\t        ${entity('list')}(?:(${MarkoutLists}) +${MarkoutLine}(?:\\n\\2 {2,4}${MarkoutLine})*$)|\n\t\t        ${entity('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${entity('divider')}(?:(${MarkoutDivider})$)|\n\t\t        ${entity('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t        ${entity('paragraph')}(?:(${MarkoutLine}(?:\\n\\2 {0,2}${MarkoutLine})*)$)\n\t\t      )|\n\t\t      ${entity(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${entity(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n\t\t'gmi',\n\t);\n\treturn MarkoutSegments;\n})();\n","﻿import {normalizeString, matchAll} from '/markout/lib/helpers.js';\nimport {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkoutSegments} from './markout-segmenter.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n\t'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeSegments(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\t\ttry {\n\t\t\t// TODO: Implement Markout's Matcher-based segment normalization\n\t\t\t// for (const segment of matchAll(sourceText, MarkoutSegments)) {}\n\t\t\t// state.segments = [...matchAll(sourceText, MarkoutSegments)];\n\n\t\t\treturn this.normalizeBlocks(sourceText, state);\n\t\t} finally {\n\t\t\timport.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n\t\t}\n\t}\n}\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'segment-normalization',\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n]);\n","﻿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n\tnormalizeSourceText(sourceText) {\n\t\tconst {normalized = (this.normalized = new Map())} = this;\n\t\tlet normalizedText = normalized.get(sourceText);\n\t\tnormalizedText !== undefined ||\n\t\t\tnormalized.set(\n\t\t\t\tsourceText,\n\t\t\t\t(normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n\t\t\t);\n\t\treturn normalizedText;\n\t}\n}\n","﻿//@ts-check\n\n/** @template T @param {T} pairs @returns {Readonly<T>} */\nexport const Enum = pairs => Object.freeze(Object.setPrototypeOf(Enum.reflect({...pairs}), null));\n\n/** @template T @param {T} pairs @returns {T & {[K in PropertyKey & T[keyof T]]?: PropertyKey}} */\nEnum.reflect = pairs => {\n\t// /** @type {Record<PropertyKey & T[keyof T], PropertyDescriptor>} */\n\t/** @type {{[K in PropertyKey & T[keyof T]]?: {value: K}}} */\n\tconst descriptors = {};\n\tfor (const [key, value] of Object.entries(pairs))\n\t\tif (typeof value === 'string' || typeof value === 'number' || typeof value === 'symbol')\n\t\t\tdescriptors[value] = {value: key, enumerable: false};\n\tObject.defineProperties(pairs, descriptors);\n\n\treturn pairs;\n};\n\n/**\n * @param {string} context\n * @param {object} meta\n * @param {(string | boolean)[]} [flags]\n */\nexport const debugging = (context, meta, flags) =>\n\t!(meta && context && flags) ||\n\ttypeof meta.url !== 'string' ||\n\ttypeof context !== 'string' ||\n\ttypeof flags !== 'object' ||\n\t(Array.isArray(flags) && flags.includes(false)) ||\n\tObject.entries(flags).reduce(\n\t\tArray.isArray(flags)\n\t\t\t? (meta, [, flag]) => (typeof flag === 'string' && (meta[`debug:${context}:${flag}`] = true), meta)\n\t\t\t: (meta, [flag, value = meta[flag]]) => (\n\t\t\t\t\ttypeof flag === 'string' && (meta[`debug:${context}:${flag}`] = value), meta\n\t\t\t  ),\n\t\tmeta,\n\t\t// meta[`debug:${context}`] || (meta[`debug:${context}`] = {}),\n\t);\n\n// const {\n// \tfromEntries = (reducer => (...entries) => entries.reduce(reducer, {}))(\n// \t\t(entries, [key, value]) => ((entries[key] = value), entries),\n// \t),\n// } = Object;\n\n/** @type {(text: string, matcher: RegExp | string) => IterableIterator<RegExpExecArray>} */\nexport const matchAll = Function.call.bind(\n\tString.prototype.matchAll ||\n\t\t{\n\t\t\t/**\n\t\t\t * @this {string}\n\t\t\t * @param {RegExp | string} pattern\n\t\t\t */\n\t\t\t*matchAll() {\n\t\t\t\tconst matcher = arguments[0] && (arguments[0] instanceof RegExp ? arguments[0] : RegExp(arguments[0], 'g'));\n\t\t\t\tconst string = String(this);\n\t\t\t\tfor (\n\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\tlastIndex <\n\t\t\t\t\t// (((arguments[0].lastIndex = lastIndex > -1 ? lastIndex : null), (match = next()))\n\t\t\t\t\t(((matcher.lastIndex = lastIndex > -1 ? lastIndex + 1 : null), (match = matcher.exec(string)))\n\t\t\t\t\t\t? (lastIndex = matcher.lastIndex)\n\t\t\t\t\t\t: lastIndex);\n\t\t\t\t\tyield match\n\t\t\t\t);\n\t\t\t},\n\t\t}.matchAll,\n);\n\n// export const sequence = (...args) =>\n// \tReflect.apply(String.raw, null, args.map((v = '') => v)).replace(/^\\s+|\\n\\s*|\\s+$/g, '');\n\n// sequence.escape = RegExp.escape\n// \t? (escape => source => escape(source))(RegExp.escape)\n// \t: source => /[\\\\^$*+?.()|[\\]{}]/g[Symbol.replace](source, '\\\\$&');\n\n/**\n * @param {string} sourceText\n */\nexport const normalizeString = string => Object.keys({[string]: true})[0];\n\n// export const typeed = (type, index) => index !== 0 && type != null;\n\n// export class RenderableList extends Array {\n// \ttoString(inset = this.inset || '', type = this.type || 'ul', style = this.style, start = this.start) {\n// \t\tconst attributes = `${\n// \t\t\t// TODO: Explore using type attribute instead\n// \t\t\t(style && `style=\"list-style: ${style}\"`) || ''\n// \t\t} ${\n// \t\t\t// TODO: Check if guard against invalid start is needed\n// \t\t\t(start && `start=\"${start}\"`) || ''\n// \t\t}`.trim();\n\n// \t\tconst rows = [`${inset}<${type}${(attributes && ` ${attributes}`) || ''}>`];\n// \t\tfor (const item of this) {\n// \t\t\tif (item && typeof item === 'object') {\n// \t\t\t\tif (item instanceof RenderableList) {\n// \t\t\t\t\tconst last = rows.length - 1;\n// \t\t\t\t\tconst row = rows[last];\n// \t\t\t\t\tlast > 0\n// \t\t\t\t\t\t? (rows[rows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`)\n// \t\t\t\t\t\t: rows.push(`${inset}\\t<li>\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`);\n// \t\t\t\t} else {\n// \t\t\t\t\tconst insetText = `${item}`;\n// \t\t\t\t\tlet text = insetText;\n// \t\t\t\t\tfor (const character of inset) {\n// \t\t\t\t\t\tif (!text.startsWith(character)) break;\n// \t\t\t\t\t\ttext = text.slice(1);\n// \t\t\t\t\t}\n// \t\t\t\t\trows.push(text);\n// \t\t\t\t}\n// \t\t\t} else {\n// \t\t\t\trows.push(`${inset}\\t<li>${`${item}`.trim()}</li>`);\n// \t\t\t}\n// \t\t}\n// \t\trows.push(`${inset}</${type}>`);\n// \t\treturn `\\n${rows.join('\\n')}\\n`;\n// \t}\n// }\n","﻿export const DOM_MUTATIONS = undefined;\nexport const BREAK_NORMALIZATION = undefined;\nexport const HEADING_NORMALIZATION = true;\nexport const PARAGRAPH_NORMALIZATION = true;\nexport const BLOCK_PARAGRAPH_NORMALIZATION = true;\nexport const CHECKLIST_NORMALIZATION = true;\nexport const BLOCKQUOTE_NORMALIZATION = true;\nexport const BLOCKQUOTE_HEADING_NORMALIZATION = true;\nexport const TOKEN_FLATTENING = true;\nexport const DECLARATIVE_STYLING = true;\nexport const SOURCE_TEXT_RENDERING = true;\nexport const ASSET_REMAPPING = true;\nexport const ASSET_INITIALIZATION = true;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as flags from './flags.js';\n\n/** @type {import('./types').content} */\nexport const content = {};\n\nObject.setPrototypeOf(content, null);\n\ncontent.matchers = {};\ncontent.symbols = {};\ncontent.defaults = {};\ncontent.defaults.flags = flags;\ncontent.flags = flags;\nObject.freeze(Object.setPrototypeOf(content.defaults, null));\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Enum} from '../helpers.js';\nimport {content} from './content.js';\nimport * as markup from '../markup.js';\n\nexport const MarkupAttributeMap = Enum({\n\tSourceType: 'source-type',\n\tMarkupMode: 'markup-mode',\n\tMarkupSyntax: 'markup-syntax',\n});\n\n/**\n * @param {Partial<{element: HTMLElement, sourceType: string, sourceText: String}>} options\n * @returns {Promise<HTMLElement>}\n */\nexport const renderSourceText = async options => {\n\tlet element, sourceType, sourceText, state;\n\n\tif (\n\t\t!options ||\n\t\ttypeof options !== 'object' ||\n\t\t(({element, sourceType, sourceText, ...options} = options),\n\t\t!(element\n\t\t\t? !element.hasAttribute(content.MarkupAttributeMap.MarkupSyntax) &&\n\t\t\t  (sourceType ||\n\t\t\t\t\t(sourceType =\n\t\t\t\t\t\telement.getAttribute(content.MarkupAttributeMap.MarkupMode) ||\n\t\t\t\t\t\telement.getAttribute(content.MarkupAttributeMap.SourceType)),\n\t\t\t  sourceText || (sourceText = element.textContent || ''))\n\t\t\t: sourceText))\n\t)\n\t\treturn void console.warn('Aborted: renderSourceText(%o => %o)', options, {element, sourceType, sourceText});\n\n\telement != null\n\t\t? element.removeAttribute(content.MarkupAttributeMap.SourceType)\n\t\t: ((element = document.createElement('pre')).className = 'markup code');\n\n\tstate = element['(markup)'] = {\n\t\telement,\n\t\tsourceText,\n\t\tsourceType,\n\t\tfragment: document.createDocumentFragment(),\n\t\tparsingGoal:\n\t\t\t(/^(js|javascript|es|ecmascript)$/i.test(sourceType) &&\n\t\t\t\t(element.matches('[script=module], [module]') ? 'module' : element.matches('[script]') ? 'script' : 'code')) ||\n\t\t\tundefined,\n\t};\n\n\t// TODO: Implement proper out-of-band handling for js versus es modes\n\tstate.parsingGoal === 'module' && (state.sourceType = sourceType = 'es');\n\n\telement.setAttribute(content.MarkupAttributeMap.MarkupSyntax, state.sourceType);\n\telement.textContent = '';\n\telement.sourceText = sourceText;\n\tawait markup.render(sourceText, state);\n\telement.appendChild(state.fragment);\n\n\treturn element;\n};\n\ncontent.MarkupAttributeMap = MarkupAttributeMap;\ncontent.renderSourceText = renderSourceText;\n","﻿// import './content/assets.js';\nimport './content/markup.js';\nimport {content} from './content/content.js';\n\nexport {content} from './content/content.js';\nexport const {AssetTypeMap, MarkupAttributeMap} = content;\n\n// import {Enum} from './helpers.js';\n\n// export const AssetTypeMap = Enum({\n// \tIMG: 'images',\n// \tVIDEO: 'videos',\n// \tSOURCE: 'sources',\n// });\n\n// export const MarkupAttributeMap = Enum({\n// \tSourceType: 'source-type',\n// \tMarkupMode: 'markup-mode',\n// \tMarkupSyntax: 'markup-syntax',\n// });\n\n// {\n// \tcontent.matchers = {};\n// \tcontent.symbols = {};\n// \tcontent.defaults = {};\n\n// \tcontent.defaults.flags = {\n// \t\tDOM_MUTATIONS: undefined,\n// \t\tBREAK_NORMALIZATION: undefined,\n// \t\tHEADING_NORMALIZATION: true,\n// \t\tPARAGRAPH_NORMALIZATION: true,\n// \t\tBLOCK_PARAGRAPH_NORMALIZATION: true,\n// \t\tCHECKLIST_NORMALIZATION: true,\n// \t\tBLOCKQUOTE_NORMALIZATION: true,\n// \t\tBLOCKQUOTE_HEADING_NORMALIZATION: true,\n// \t\tTOKEN_FLATTENING: true,\n// \t\tDECLARATIVE_STYLING: true,\n// \t\tSOURCE_TEXT_RENDERING: true,\n// \t\tASSET_REMAPPING: true,\n// \t\tASSET_INITIALIZATION: true,\n// \t};\n\n// \tObject.freeze(content.defaults.flags);\n// \tObject.freeze(content.defaults);\n\n// \tcontent.AssetTypeMap = AssetTypeMap;\n// \tcontent.MarkupAttributeMap = MarkupAttributeMap;\n// }\n","﻿import {MarkoutNormalizer} from './normalizer.js';\nimport {MarkupAttributeMap} from './content.js';\n\n// import {tokenize as tokenizeMarkup, encodeEntities, encodeEntity} from './markup.js';\nimport * as markup from './markup.js';\n\n/** @type {any} */\nconst {\n\t// Attempts to overcome **__**\n\t'markout-render-span-restacking': SPAN_RESTACKING = true,\n\t'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n\t// Patched regression from changing markdown.FRAGMENTS\n\t//   to /[^\\\\\\n\\s\\[\\]\\(\\)\\<\\>&`\"*~_]+?/ which has been reversed\n\t'markout-render-patch-stray-brace': STRAY_BRACE = false,\n\t'markout-render-url-expansion': URL_EXPANSION = true,\n} = import.meta;\n\nexport const normalize = sourceText => {\n\tconst {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n\treturn normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n\tconst {\n\t\tlookups = (render.lookups = createLookups()),\n\t\trenderer = (render.renderer = new MarkoutRenderer({lookups})),\n\t} = render;\n\treturn renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => markup.tokenize(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const encodeEscapedEntities = ((Escapes, replace) => text => text.replace(Escapes, replace))(\n\t/\\\\([*^~`_])(\\1|)/g,\n\t(m, e, e2) => (e2 ? markup.encodeEntity(e).repeat(2) : markup.encodeEntity(e)),\n);\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\nconst URLPrefix = /^(?:https?:|HTTPS?:)\\/\\/\\S+$|^(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})(?:\\/\\S*|)$/u;\nconst URLString = /^\\s*(?:(?:https?:|HTTPS?:)\\/\\/\\S+|(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})\\/\\S*)\\s*$/u;\nconst URLScheme = /^https?:|HTTPS?:/;\n//\nconst SPAN = 'span';\n\nclass MarkoutRenderingContext {\n\tconstructor(renderer) {\n\t\t({lookups: this.lookups} = this.renderer = renderer);\n\n\t\t[\n\t\t\tthis.passthru,\n\t\t\tthis.block,\n\t\t\tthis.fenced,\n\t\t\tthis.header,\n\t\t\tthis.indent,\n\t\t\tthis.newlines,\n\t\t\tthis.comment,\n\t\t] = this.renderedText = '';\n\n\t\tSPAN_RESTACKING && createSpanStack(this);\n\t}\n}\n\nclass MarkoutRenderer {\n\tconstructor({lookups = createLookups()} = {}) {\n\t\tthis.lookups = lookups;\n\t}\n\n\trenderBlockTokens(token, context) {\n\t\tlet before, tag, body, previous, inset;\n\t\tprevious = token;\n\t\tinset = '';\n\t\tconst {classes, block} = context;\n\t\twhile ((previous = previous.previous)) {\n\t\t\tif (previous.lineBreaks) break;\n\t\t\tinset = `${previous.text}${inset}`;\n\t\t}\n\t\tif (!/[^> \\t]/.test(inset)) {\n\t\t\tbefore = `<${block}${this.renderClasses(classes)}>`;\n\t\t\ttag = 'tt';\n\t\t\tclasses.push('opener', `${token.type}-token`);\n\t\t} else {\n\t\t\tbody = token.text;\n\t\t}\n\t\treturn {before, tag, body};\n\t}\n\n\t// renderCommentToken(token, context) {}\n\n\trenderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n\t\tlet text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta;\n\t\tcontext.tokens = tokens;\n\n\t\tconst {lookups} = context;\n\t\tconst {renderClasses} = this;\n\n\t\t// context.openTags = 0;\n\t\tcontext.openTags = [];\n\t\tcontext.closeTags = [];\n\n\t\tfor (const token of context.tokens) {\n\t\t\tif (!token || !(body = token.text)) continue;\n\t\t\t({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\n\t\t\t// Sub type 'text' to 'whitespace'\n\t\t\t// TODO: Sub type 'text' to 'break' (ie !!lineBreaks)\n\t\t\ttype !== 'text' || lineBreaks || text.trim() || (type = 'whitespace');\n\n\t\t\ttag = classes = before = after = meta = undefined;\n\n\t\t\tif (context.passthru || context.fenced) {\n\t\t\t\tif (context.fenced) {\n\t\t\t\t\tif (context.fenced === context.passthru) {\n\t\t\t\t\t\tcontext.header += text;\n\t\t\t\t\t\tlineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n\t\t\t\t\t} else if (punctuator === 'closer' && text === '```') {\n\t\t\t\t\t\tlet sourceType, sourceAttributes;\n\t\t\t\t\t\tif (context.header) {\n\t\t\t\t\t\t\t[, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n\t\t\t\t\t\t\timport.meta['debug:fenced-block-header-rendering'] &&\n\t\t\t\t\t\t\t\tconsole.log('fenced-block-header', {\n\t\t\t\t\t\t\t\t\tfenced: context.fenced,\n\t\t\t\t\t\t\t\t\theader: context.header,\n\t\t\t\t\t\t\t\t\tpassthru: context.passthru,\n\t\t\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\t\t\tsourceAttributes,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsourceAttributes = `${sourceAttributes ? `${sourceAttributes} ` : ''}data-markout-fence=\"${\n\t\t\t\t\t\t\t\tcontext.fenced\n\t\t\t\t\t\t\t}\" data-markout-header=\"${markup.encodeEntities(context.header)}\" tab-index=-1`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsourceAttributes = `data-markout-fence=\"${context.fenced}\"`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// passthru rendered code\n\t\t\t\t\t\tcontext.renderedText += `<${context.block} class=\"markup code\" ${\n\t\t\t\t\t\t\tMarkupAttributeMap.SourceType\n\t\t\t\t\t\t}=\"${sourceType || 'markup'}\"${(sourceAttributes && ` ${sourceAttributes}`) || ''}>${markup.encodeEntities(\n\t\t\t\t\t\t\tcontext.passthru,\n\t\t\t\t\t\t)}</${context.block}>`;\n\t\t\t\t\t\tcontext.header = context.indent = context.fenced = context.passthru = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// passthru code\n\t\t\t\t\t\tcontext.passthru += body.replace(context.indent, '');\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t} else if (context.url) {\n\t\t\t\t\tif (type === 'text') {\n\t\t\t\t\t\tcontext.passthru += text;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (URLString.test(context.passthru)) {\n\t\t\t\t\t\t[before, context.url, after] = context.passthru.split(/(\\S+)/);\n\t\t\t\t\t\tcontext.renderedText += `${before}<span href=\"${encodeURI(\n\t\t\t\t\t\t\tURLScheme.test(context.url) ? context.url : `https://${context.url}`,\n\t\t\t\t\t\t)}\">${context.url}</span>${after}`;\n\t\t\t\t\t\tbefore = after = undefined;\n\t\t\t\t\t\t// console.log(context.passthru, token);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tcontext.renderedText += context.passthru;\n\t\t\t\t\t}\n\t\t\t\t\tcontext.url = context.passthru = '';\n\t\t\t\t} else {\n\t\t\t\t\t// Construct open and close tags\n\t\t\t\t\tif (context.currentTag) {\n\t\t\t\t\t\t// if (\n\t\t\t\t\t\t// \tpunctuator === 'closer' &&\n\t\t\t\t\t\t// \t(body === '>' || body === '/>') &&\n\t\t\t\t\t\t// \tcontext.currentTag !== undefined &&\n\t\t\t\t\t\t// \tcontext.currentTag.opener !== undefined\n\t\t\t\t\t\t// ) {\n\t\t\t\t\t\t// \tdebugTagOpenerPassthru(token, context, {\n\t\t\t\t\t\t// \t\tscope: {text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta},\n\t\t\t\t\t\t// \t});\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t// Construct body\n\t\t\t\t\t\tcontext.passthru += body;\n\n\t\t\t\t\t\tif (context.currentTag.nodeName === '') {\n\t\t\t\t\t\t\tif (type === 'text' || text === '-' || text === ':') {\n\t\t\t\t\t\t\t\tcontext.currentTag.construct += text;\n\t\t\t\t\t\t\t} else if (context.currentTag.construct === '') {\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName = ' ';\n\t\t\t\t\t\t\t\tcontext.currentTag.construct = text;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName = context.currentTag.construct;\n\t\t\t\t\t\t\t\t// Substitute element name from lookup\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName in lookups.elements &&\n\t\t\t\t\t\t\t\t\t(context.passthru = context.passthru.replace(\n\t\t\t\t\t\t\t\t\t\tcontext.currentTag.nodeName,\n\t\t\t\t\t\t\t\t\t\t(context.currentTag.nodeName = lookups.elements[context.currentTag.nodeName]),\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.currentTag.construct = text;\n\t\t\t\t\t\t\t// console.log(text, {...context});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// console.log(text, {...context});\n\t\t\t\t\t\t// Construct body\n\t\t\t\t\t\tcontext.passthru += body;\n\t\t\t\t\t}\n\t\t\t\t\tif (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n\t\t\t\t\t\t// passthru body rendered\n\t\t\t\t\t\tcontext.renderedText += context.passthru;\n\t\t\t\t\t\tcontext.passthru = '';\n\t\t\t\t\t}\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttag = SPAN;\n\t\t\tclasses = context.classes = hint.split(/\\s+/);\n\t\t\tbefore, after;\n\n\t\t\tif (hint.includes('-in-markdown')) {\n\t\t\t\tcontext.renderedText += token.text;\n\t\t\t\tcontinue;\n\t\t\t} else if (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n\t\t\t\ttype !== 'text' || lineBreaks || (text in lookups.entities && (body = lookups.entities[text]));\n\n\t\t\t\tif (punctuator) {\n\t\t\t\t\tcontext.passthru =\n\t\t\t\t\t\t(((context.comment = punctuator === 'comment' && text) || lookups.tags.has(text)) && text) || '';\n\t\t\t\t\t// Opener\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif (text === '<') {\n\t\t\t\t\t\t\tcontext.openTags.push(\n\t\t\t\t\t\t\t\t(context.currentTag = {opener: token, delimiter: text, construct: '', nodeName: ''}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (text === '</') {\n\t\t\t\t\t\t\tcontext.closeTags.push(\n\t\t\t\t\t\t\t\t(context.currentTag = {closer: token, delimiter: text, construct: '', nodeName: ''}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tcontext.currentTag = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (context.passthru) continue;\n\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif ((context.fenced = text === '```' && text)) {\n\t\t\t\t\t\t\tcontext.block = 'pre';\n\t\t\t\t\t\t\tcontext.passthru = context.fenced;\n\t\t\t\t\t\t\t[context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n\t\t\t\t\t\t\tcontext.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n\t\t\t\t\t\t\tcontext.header = '';\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (text in lookups.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tbefore || ((before = `<${lookups.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n\t\t\t\t\t\t} else if (text === '<!' || text === '<?') {\n\t\t\t\t\t\t\tlet next;\n\t\t\t\t\t\t\tconst closer = text === '<!' ? /-->$/ : /\\?>$/;\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t(next = context.tokens.next().value) &&\n\t\t\t\t\t\t\t\t(body += next.text) &&\n\t\t\t\t\t\t\t\t(next.punctuator !== 'closer' && !closer.test(next.text))\n\t\t\t\t\t\t\t\t// (next.punctuator === 'opener' && /^</.test(next.text)) ||\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontext.passthru = body;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tif (text === '```') {\n\t\t\t\t\t\t\tcontext.block = lookups.blocks['```'] || 'pre';\n\t\t\t\t\t\t} else if (text in lookups.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tafter || ((after = `</${lookups.spans[text]}>`), classes.push('closer'));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (SPAN_RESTACKING && text in lookups.spans) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(context.stack[text] >= 0\n\t\t\t\t\t\t\t\t? (after = context.stack.close(text, body, classes))\n\t\t\t\t\t\t\t\t: (before = context.stack.open(text, body, classes))) === undefined\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (!context.block && (context.block = lookups.blocks[text])) {\n\t\t\t\t\t\t({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n\t\t\t\t\t}\n\t\t\t\t\t(before || after) && (tag = 'tt');\n\t\t\t\t\tclasses.push(`${punctuator}-token`);\n\t\t\t\t} else {\n\t\t\t\t\tif (\n\t\t\t\t\t\tURL_EXPANSION &&\n\t\t\t\t\t\ttype === 'text' &&\n\t\t\t\t\t\ttag === SPAN &&\n\t\t\t\t\t\tbefore === after &&\n\t\t\t\t\t\tbefore === undefined &&\n\t\t\t\t\t\tURLPrefix.test(text)\n\t\t\t\t\t) {\n\t\t\t\t\t\tcontext.passthru = context.url = text;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t// before = `<a href=\"${text.trim()}\">`;\n\t\t\t\t\t\t// after = `</a>`;\n\t\t\t\t\t\t// console.log(text, {tag, before, after}, token);\n\t\t\t\t\t}\n\t\t\t\t\tif (lineBreaks) {\n\t\t\t\t\t\t(!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n\t\t\t\t\t} else if (type === 'sequence') {\n\t\t\t\t\t\tif (text[0] === '`') {\n\t\t\t\t\t\t\ttag = 'code';\n\t\t\t\t\t\t\tbody = text.replace(/(``?)(.*)\\1/, '$2');\n\t\t\t\t\t\t\tlet fence = '`'.repeat((text.length - body.length) / 2);\n\t\t\t\t\t\t\tbody = markup.encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n\t\t\t\t\t\t\tfence in lookups.entities && (fence = lookups.entities[fence]);\n\t\t\t\t\t\t\tclasses.push('fenced-code');\n\t\t\t\t\t\t\tclasses.push('code');\n\t\t\t\t\t\t} else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n\t\t\t\t\t\t\ttag = 'hr';\n\t\t\t\t\t\t} else if (!context.block && (context.block = lookups.blocks[text])) {\n\t\t\t\t\t\t\t({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sequence\n\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (type === 'whitespace') {\n\t\t\t\t\t\t// if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n\t\t\t\t\t\ttag = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debug(`${type}:token`)(type, token);\n\t\t\t\t\t\tclasses.push(`${type}-token`);\n\t\t\t\t\t\tbody = text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeta =\n\t\t\t\ttag &&\n\t\t\t\t[\n\t\t\t\t\tpunctuator && `punctuator=\"${escape(punctuator)}\"`,\n\t\t\t\t\ttype && `token-type=\"${escape(type)}\"`,\n\t\t\t\t\thint && `token-hint=\"${escape(hint)}\"`,\n\t\t\t\t\tlineBreaks && `line-breaks=\"${escape(lineBreaks)}\"`,\n\t\t\t\t].join(' ');\n\n\t\t\ttag === 'span' && (body = encodeEscapedEntities(body));\n\n\t\t\tbefore && (context.renderedText += before);\n\t\t\ttag === 'br' || (context.newlines = 0)\n\t\t\t\t? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.newlines++ && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.renderedText += '<br/>')\n\t\t\t\t: tag === 'hr'\n\t\t\t\t? (context.renderedText += '<hr/>')\n\t\t\t\t: body &&\n\t\t\t\t  (tag\n\t\t\t\t\t\t? (context.renderedText += `<${tag} ${meta}${renderClasses(classes)}>${body}</${tag}>`)\n\t\t\t\t\t\t: (context.renderedText += body));\n\t\t\tafter && (context.renderedText += after);\n\t\t}\n\n\t\tif (STRAY_BRACE && context.renderedText.endsWith(`>}</span>`)) {\n\t\t\tcontext.renderedText = context.renderedText.slice(0, context.renderedText.lastIndexOf('<span'));\n\t\t}\n\n\t\treturn context.renderedText;\n\t}\n\n\trenderClasses(classes) {\n\t\treturn ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\t}\n}\n\nconst debugTagOpenerPassthru = (token, context, details) => {\n\tconsole.log(\n\t\t'\"%c%s%c%s%c%s%c\" — %o',\n\t\t'color: LightSlateGrey;',\n\t\tcontext.renderedText.length > 20 ? `…${context.renderedText.slice(-20)}` : context.renderedText,\n\t\t'color: DarkSlateBlue;',\n\t\tcontext.passthru,\n\t\t'color: DarkSlateBlue; font-weight: 400;',\n\t\t(details && details.scope && details.scope.body) || token.text,\n\t\t'',\n\t\t{\n\t\t\ttoken: {...token},\n\t\t\tcontext: {...context},\n\t\t\t...details,\n\t\t},\n\t);\n};\n\nclass MarkoutOutput extends String {\n\tconstructor(context) {\n\t\tsuper(context.renderedText).context = context;\n\t}\n}\n\n/// Features\n\nconst createLookups = (\n\trepeats = {['*']: 2, ['`']: 3, ['#']: 6},\n\tentities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n\taliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n\tblocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n\tspans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n\ttags = ['<', '>', '<!--', '-->', '<?', '?>', '</', '/>'],\n\telements = {'markout-details': 'details'},\n) => {\n\tconst {keys} = Object;\n\tconst symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n\tfor (const symbol of symbols) {\n\t\tlet n = repeats[symbol] || 1;\n\t\tconst entity = entities[symbol];\n\t\tlet block = blocks[symbol];\n\t\tlet span = spans[symbol];\n\t\tconst tag = block || span;\n\t\tconst map = (block && blocks) || (span && spans);\n\t\tfor (let i = 1; n--; i++) {\n\t\t\tconst k = symbol.repeat(i);\n\t\t\tconst b = blocks[k];\n\t\t\tconst s = spans[k];\n\t\t\tconst m = (b && blocks) || (s && spans) || map;\n\t\t\tconst t = (b || s || m[k] || tag).replace('*', i);\n\t\t\tconst e = entities[k] || (entity && entity.repeat(i));\n\t\t\tm[k] = t;\n\t\t\te && (entities[k] = e);\n\t\t\tif (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n\t\t}\n\t}\n\tfor (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n\tconst escapes = {};\n\n\tfor (const symbol of '* ^ ~ `'.split(' ')) {\n\t\tescapes[`\\\\${symbol}`] = `&#x${symbol.charAt(0).toString(16)};`;\n\t}\n\n\treturn {entities, blocks, spans, tags: new Set(tags), elements};\n};\n\nconst createSpanStack = context => {\n\tconst {\n\t\tlookups: {spans},\n\t\trenderer,\n\t} = context;\n\tconst stack = [];\n\tstack.open = (text, body, classes) => {\n\t\tconst {[text]: lastIndex, length: index} = stack;\n\t\tif (lastIndex < 0) return (stack[text] = undefined); // ie continue\n\t\tif (lastIndex >= 0) return stack.close(text, body, classes);\n\t\tconst span = spans[text];\n\t\tconst before = `<${span}${renderer.renderClasses(classes)}>`;\n\t\tstack[text] = index;\n\t\tstack.push({text, body, span, index});\n\t\treturn classes.push('opener'), before;\n\t};\n\tstack.close = (text, body, classes) => {\n\t\tconst span = spans[text];\n\t\tconst {[text]: index, length} = stack;\n\t\tif (index === length - 1) {\n\t\t\tindex >= 0 && (stack.pop(), (stack[text] = undefined));\n\t\t\tconst after = `</${span}>`;\n\t\t\treturn classes.push('closer'), after;\n\t\t} else if (index >= 0) {\n\t\t\tclasses.push('closer', `closer-token`);\n\t\t\tconst details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n\t\t\tconst closing = stack.splice(index, length).reverse();\n\t\t\tfor (const {span, text, body} of closing) {\n\t\t\t\tcontext.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n\t\t\t\tstack[text] < index || (stack[text] = -1);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.renderedText += text;\n\t\t}\n\t};\n\tcontext.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n\t'fenced-block-header-rendering',\n]);\n"],"names":["escape","ALIASES","matchAll","markup.render","MarkupAttributeMap","markup.tokenize","markup.encodeEntity","markup.encodeEntities"],"mappings":"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"}