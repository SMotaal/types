{"version":3,"file":"common.js","sources":["../../packages/markout/lib/markup.js","../../packages/markout/lib/experimental/composable-list.js","../../modules/matcher/matcher.js","../../packages/markout/lib/experimental/expressions.js","../../packages/markout/lib/experimental/block-normalizer.js","../../packages/modules/segmenter/segmenter.js","../../packages/markout/lib/experimental/markout-segmenter.js","../../packages/markout/lib/experimental/segment-normalizer.js","../../packages/markout/lib/normalizer.js","../../packages/markout/lib/entities.js","../../packages/markout/lib/styling.js","../../packages/markout/lib/content.js","../../packages/markout/lib/renderer.js"],"sourcesContent":["export * from '/markup/dist/tokenizer.browser.js';\n\n// export const MarkupSourceTypeAttribute = 'source-type';\n// export const MarkupModeAttribute = 'markup-mode';\n// export const MarkupOptionsAttribute = 'markup-options';\n// export const MarkupSyntaxAttribute = 'markup-syntax';\n","﻿export class ComposableList extends Array {\n\ttoString(\n\t\tlistInset = this.listInset || '',\n\t\tlistType = this.listType || 'ul',\n\t\tlistStyle = this.listStyle,\n\t\tlistStart = this.listStart,\n\t) {\n\t\tlistStart &&\n\t\t\ttypeof listStart !== 'number' &&\n\t\t\t(listStart = `${\n\t\t\t\tlistStyle === 'lower-latin' || listStyle === 'upper-latin'\n\t\t\t\t\t? ComposableList.parseLatin(listStart)\n\t\t\t\t\t: listStyle === 'lower-roman' || listStyle === 'upper-roman'\n\t\t\t\t\t? ComposableList.parseRoman(listStart)\n\t\t\t\t\t: parseInt(listStart) || ''\n\t\t\t}`);\n\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(listStyle && `style=\"list-style: ${listStyle}\"`) || ''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(listStart && `start=\"${listStart}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof ComposableList) {\n\t\t\t\t\tconst last = listRows.length - 1;\n\t\t\t\t\tconst row = listRows[last];\n\t\t\t\t\tlast > 0\n\t\t\t\t\t\t? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n\t\t\t\t\t\t\t\t`${listInset}\\t\\t`,\n\t\t\t\t\t\t  )}\\n${listInset}\\t</li>`)\n\t\t\t\t\t\t: listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of listInset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\tlistRows.push(text);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [, checked, content] = /^\\s*(?:\\[([-xX]| )\\] |)(.+?)\\s*$/.exec(item);\n\n\t\t\t\tcontent &&\n\t\t\t\t\tlistRows.push(\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t? `${listInset}\\t<li type=checkbox ${\n\t\t\t\t\t\t\t\t\tchecked === ' ' ? '' : checked === '-' ? 'indeterminate' : ' checked'\n\t\t\t\t\t\t\t  }>${content}</li>`\n\t\t\t\t\t\t\t: `${listInset}\\t<li>${content}</li>`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlistRows.push(`${listInset}</${listType}>`);\n\t\treturn `\\n${listRows.join('\\n')}\\n`;\n\t}\n}\n\nComposableList.CHECKBOX = /^[-] \\[[ xX]\\](?=\\s|$)/;\nComposableList.SQUARE = /^[-](?! \\[[ xX]\\])(?=\\s|$)/;\nComposableList.DISC = /^[*](?=\\s|$)/;\nComposableList.DECIMAL = /^0*\\d+\\./;\n\nLATIN: {\n\tconst parseLatin = latin => parseLatin.mappings[latin] || NaN;\n\n\tparseLatin.mappings = {};\n\n\t'abcdefghijklmnopqrstuvwxyz'.split('').forEach((latin, index) => {\n\t\tparseLatin.mappings[(parseLatin.mappings[latin] = parseLatin.mappings[latin.toUpperCase] = index + 1)] = latin;\n\t});\n\n\tComposableList.parseLatin = parseLatin;\n\tComposableList.LATIN = /^[a-z]+\\./i;\n}\n\nROMAN: {\n\tconst parseRoman = roman =>\n\t\t/[^ivxlcdm]/i.test((roman = String(roman)))\n\t\t\t? NaN\n\t\t\t: roman\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split('')\n\t\t\t\t\t.reduce(parseRoman.reducer, 0);\n\t// prettier-ignore\n\tparseRoman.mappings = Object.freeze({i: 1, v: 5, x: 10, l: 50, c: 100, d: 500, m: 1000, 1: 'i', 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm'});\n\n\tparseRoman.reducer = (decimal, character, index, characters) =>\n\t\tdecimal +\n\t\t(parseRoman.mappings[character] < parseRoman.mappings[characters[index + 1]]\n\t\t\t? -parseRoman.mappings[character]\n\t\t\t: parseRoman.mappings[character]);\n\n\tComposableList.parseRoman = parseRoman;\n\tComposableList.ROMAN = /^[ivxlcdm]+\\./i;\n}\n\nComposableList.UNORDERED = /^[-*](?= |$)/i;\nComposableList.ORDERED = /^(?:0+[1-9]\\d*|\\d+|[ivx]+|[a-z])(?=\\. |$)|^[a-z](?=\\) |$)/i;\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)(?=\\. )|(\\d+)(?=\\. )|([ivx]+)(?=\\. )|([a-z])(?=[.)] ))|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n\tconst category =\n\t\tComposableList.ORDERED_STYLE.key[\n\t\t\tComposableList.ORDERED_STYLE.exec(marker)\n\t\t\t\t.slice(1)\n\t\t\t\t.findIndex(Boolean)\n\t\t];\n\treturn (\n\t\t(category !== undefined &&\n\t\t\t(category === 'latin' || category === 'roman'\n\t\t\t\t? `${\n\t\t\t\t\t\tvariant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n\t\t\t\t  }-${category}`\n\t\t\t\t: category === 'decimal'\n\t\t\t\t? variant !== 'leading-zero'\n\t\t\t\t\t? 'decimal'\n\t\t\t\t\t: 'decimal-leading-zero'\n\t\t\t\t: variant !== 'decimal'\n\t\t\t\t? 'decimal-leading-zero'\n\t\t\t\t: 'decimal')) ||\n\t\tfallback\n\t);\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n\texpected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n\t['checkbox']: ComposableList.CHECKBOX,\n\t['square']: ComposableList.SQUARE,\n\t['disc']: ComposableList.DISC,\n\t['decimal']: ComposableList.DECIMAL,\n\t['decimal-leading-zero']: ComposableList.DECIMAL,\n\t['roman']: ComposableList.ROMAN,\n\t['lower-roman']: ComposableList.ROMAN,\n\t['upper-roman']: ComposableList.ROMAN,\n\t['latin']: ComposableList.LATIN,\n\t['lower-latin']: ComposableList.LATIN,\n\t['upper-latin']: ComposableList.LATIN,\n\t['ul']: ComposableList.UNORDERED,\n\t['ol']: ComposableList.ORDERED,\n};\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n\t/**\n\t * @template T\n\t * @param {Matcher.Pattern} pattern\n\t * @param {Matcher.Flags} [flags]\n\t * @param {Matcher.Entities} [entities]\n\t * @param {T} [state]\n\t */\n\tconstructor(pattern, flags, entities, state) {\n\t\t// trace.push([new.target, [...arguments]]);\n\t\t//@ts-ignore\n\t\tsuper(pattern, flags);\n\t\t// Object.assign(this, RegExp.prototype, new.target.prototype);\n\t\t(pattern &&\n\t\t\tpattern.entities &&\n\t\t\tSymbol.iterator in pattern.entities &&\n\t\t\t((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n\t\t\tObject.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n\t\t/** @type {MatcherEntities} */\n\t\tthis.entities = entities;\n\t\t/** @type {T} */\n\t\tthis.state = state;\n\t\tthis.capture = this.capture;\n\t\tthis.exec = this.exec;\n\t\t// this.test = this.test;\n\t\t({\n\t\t\t// LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n\t\t\t// INSET: this.INSET = Matcher.INSET,\n\t\t\t// OUTSET: this.OUTSET = Matcher.OUTSET,\n\t\t\tDELIMITER: this.DELIMITER = Matcher.DELIMITER,\n\t\t\tUNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n\t\t} = new.target);\n\t}\n\n\t/**\n\t * @template {MatcherMatchResult} T\n\t * @param {string} text\n\t * @param {number} capture\n\t * @param {T} match\n\t * @returns {T}\n\t */\n\tcapture(text, capture, match) {\n\t\tif (capture === 0) return void (match.capture = {});\n\t\tif (text === undefined) return;\n\t\tconst index = capture - 1;\n\t\tconst {\n\t\t\tentities: {[index]: entity},\n\t\t\tstate,\n\t\t} = this;\n\t\ttypeof entity === 'function'\n\t\t\t? ((match.entity = index), entity(text, capture, match, state))\n\t\t\t: entity == null || //entity === INSET ||\n\t\t\t  // entity === OUTSET ||\n\t\t\t  // entity === DELIMITER ||\n\t\t\t  // entity === LOOKAHEAD ||\n\t\t\t  // entity === UNKNOWN ||\n\t\t\t  (match.entity !== undefined || ((match.identity = entity), (match.entity = index)),\n\t\t\t  (match.capture[entity] = text));\n\t}\n\n\t/**\n\t * @param {string} source\n\t * @returns {MatcherMatchResult}\n\t */\n\texec(source) {\n\t\t// const tracing = trace.length;\n\t\t// trace.push([this.exec, [...arguments]]);\n\t\t/** @type {MatcherMatchArray} */\n\t\tconst match = super.exec(source);\n\t\t// console.log(trace.slice(tracing, trace.length));\n\t\tmatch &&\n\t\t\t(match.forEach(this.capture || Matcher.prototype.capture, (match.matcher = this)),\n\t\t\tmatch.identity || (match.capture[this.UNKNOWN || Matcher.UNKNOWN] = match[0]));\n\n\t\t// @ts-ignore\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {Matcher.PatternFactory} factory\n\t * @param {Matcher.Flags} [flags]\n\t * @param {PropertyDescriptorMap} [properties]\n\t */\n\tstatic define(factory, flags, properties) {\n\t\t/** @type {MatcherEntities} */\n\t\tconst entities = [];\n\t\tentities.flags = '';\n\t\t// const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n\t\tconst pattern = factory(entity => {\n\t\t\tif (entity !== null && entity instanceof Matcher) {\n\t\t\t\tentities.push(...entity.entities);\n\n\t\t\t\t!entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n\t\t\t\treturn entity.source;\n\t\t\t} else {\n\t\t\t\tentities.push(((entity != null || undefined) && entity) || undefined);\n\t\t\t}\n\t\t});\n\t\tflags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n\t\tconst matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n\t\t\tMatcher)(pattern, flags, entities);\n\n\t\tproperties && Object.defineProperties(matcher, properties);\n\n\t\treturn matcher;\n\t}\n\n\tstatic flags(...sources) {\n\t\tlet flags = '',\n\t\t\titerative;\n\t\tfor (const source of sources) {\n\t\t\tif (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n\t\t\tfor (const flag of source.flags || source)\n\t\t\t\t(flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n\t\t}\n\t\t// console.log('%o: ', flags, ...sources);\n\t\treturn flags;\n\t}\n\n\tstatic get sequence() {\n\t\tconst {raw} = String;\n\t\tconst {replace} = Symbol;\n\t\t/**\n\t\t * @param {TemplateStringsArray} template\n\t\t * @param  {...any} spans\n\t\t * @returns {string}\n\t\t */\n\t\tconst sequence = (template, ...spans) =>\n\t\t\tsequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n\t\t/**\n\t\t * @param {any} value\n\t\t * @returns {string}\n\t\t */\n\t\tsequence.span = value =>\n\t\t\t(value &&\n\t\t\t\t// TODO: Don't coerce to string here?\n\t\t\t\t(typeof value !== 'symbol' && `${value}`)) ||\n\t\t\t'';\n\n\t\tsequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n\t\tObject.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n\t\treturn sequence;\n\t}\n\n\tstatic get join() {\n\t\tconst {sequence} = this;\n\n\t\tconst join = (...values) =>\n\t\t\tvalues\n\t\t\t\t.map(sequence.span)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join('|');\n\n\t\tObject.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n\t\treturn join;\n\t}\n}\n\nexport const {\n\t// INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n\t// OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n\tDELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n\tUNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n\t// LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n\tescape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n\t\tconst {replace} = Symbol;\n\t\treturn source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n\t})())),\n\tsequence,\n\tmatchAll = (Matcher.matchAll =\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n\t\t */\n\t\t//@ts-ignore\n\t\t(() =>\n\t\t\tFunction.call.bind(\n\t\t\t\t// String.prototype.matchAll || // TODO: Uncomment eventually\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {string}\n\t\t\t\t\t * @param {RegExp | string} pattern\n\t\t\t\t\t */\n\t\t\t\t\t*matchAll() {\n\t\t\t\t\t\tconst matcher =\n\t\t\t\t\t\t\targuments[0] &&\n\t\t\t\t\t\t\t(arguments[0] instanceof RegExp\n\t\t\t\t\t\t\t\t? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n\t\t\t\t\t\t\t\t: RegExp(arguments[0], 'g'));\n\t\t\t\t\t\tconst string = String(this);\n\n\t\t\t\t\t\tif (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\t\t\tlastIndex <\n\t\t\t\t\t\t\t((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n\t\t\t\t\t\t\tyield match, matcher.lastIndex = lastIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}.matchAll,\n\t\t\t))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿import {Matcher} from '/modules/matcher/matcher.js';\n\nexport const sequences = {};\nexport const matchers = {};\n\n{\n\tconst {sequence, escape, join} = Matcher;\n\n\tconst FENCE = sequence`${'`'.repeat(3)}|${escape('~').repeat(3)}`;\n\tconst INSET = sequence`[> \\t]*`;\n\t// const LIST = sequence`- ${escape('[')}[ xX]${escape(']')}(?: |$)|[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. `;\n\t// const LIST = sequence`[-*] (?=${escape('[')}[ xX]${escape(']')} |)|[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. `;\n\tconst LIST = sequence`[-*](?: |$)|[1-9]+\\d*\\.(?: |$)|[a-z][.)](?: |$)|[ivx]+\\.(?: |$)`;\n\n\tsequences.NormalizableBlocks = sequence/* fsharp */ `\n    (?:^|\\n)(${INSET}(?:${FENCE}))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)\n    |([^]+?(?:(?=\\n${INSET}(?:${FENCE}))|$))\n  `;\n\tmatchers.NormalizableBlocks = new RegExp(sequences.NormalizableBlocks, 'g');\n\n\tsequences.NormalizableParagraphs = sequence/* fsharp */ `\n    ^\n    ((?:[ \\t]*\\n(${INSET}))+)\n    ($|(?:\n      (?!(?:${LIST}))\n      [^\\-#>|~\\n].*\n      (?:\\n${INSET}$)+\n    )+)\n  `;\n\tmatchers.NormalizableParagraphs = new RegExp(sequences.NormalizableParagraphs, 'gm');\n\n\tsequences.RewritableParagraphs = sequence/* fsharp */ `\n    ^\n    ([ \\t]*[^\\-\\*#>\\n].*?)\n    (\\b.*[^:\\n\\s>]+|\\b)\n    [ \\t]*\\n[ \\t>]*\n    (?=(\n      \\b\n      |${escape('[')}.*?${escape(']')}[^:\\n]?\n      |[^#${'`'}${escape('[')}\\n]\n    ))\n  `;\n\n\tmatchers.RewritableParagraphs = new RegExp(sequences.RewritableParagraphs, 'gm');\n\n\tsequences.NormalizableLists = sequence/* fsharp */ `\n    (?=(\\n${INSET})(?:${LIST}))\n    ((?:\\1\n      (?:${LIST}|   ?)+\n      [^\\n]+\n      (?:\\n${INSET})*\n      (?=\\1|$)\n    )+)\n  `;\n\tmatchers.NormalizableLists = new RegExp(sequences.NormalizableLists, 'g');\n\n\tsequences.NormalizableListItem = sequence/* fsharp */ `\n    ^\n    (${INSET})\n    (${LIST}|)\n    ([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|${LIST}).*)*)$\n  `;\n\tmatchers.NormalizableListItem = new RegExp(sequences.NormalizableListItem, 'gm');\n\n\tsequences.NormalizableReferences = sequence/* fsharp */ `\n    \\!?\n    ${escape('[')}(\\S.*?\\S)${escape(']')}\n    (?:\n      ${escape('(')}(\\S[^\\n${escape('()[]')}]*?\\S)${escape(')')}\n      |${escape('[')}(\\S[^\\n${escape('()[]')}]*\\S)${escape(']')}\n    )\n  `;\n\tmatchers.NormalizableReferences = new RegExp(sequences.NormalizableReferences, 'gm');\n\n\tsequences.RewritableAliases = sequence/* fsharp */ `\n    ^\n    (${INSET})\n    ${escape('[')}(\\S.*?\\S)${escape(']')}:\\s+\n    (\\S+)(?:\n      \\s+${'\"'}([^\\n]*)${'\"'}\n      |\\s+${\"'\"}([^\\n]*)${\"'\"}\n      |\n    )(?=\\s*$)\n  `;\n\tmatchers.RewritableAliases = new RegExp(sequences.RewritableAliases, 'gm');\n\n\tsequences.NormalizableLink = sequence/* fsharp */ `\n    \\s*(\n      (?:\\s?[^${`'\"`}${escape('()[]')}}\\s\\n]+)*\n    )\n    (?:\\s+[${`'\"`}]([^\\n]*)[${`'\"`}]|)\n  `;\n\tmatchers.NormalizableLink = new RegExp(sequences.NormalizableLink);\n}\n","﻿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\nimport {matchers} from './expressions.js';\n\nconst {\n\t/** Attempts to overcome **__** */\n\n\t'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nconst {\n\tNormalizableBlocks,\n\tNormalizableParagraphs,\n\tRewritableParagraphs,\n\tNormalizableLists,\n\tNormalizableListItem,\n\tNormalizableReferences,\n\tRewritableAliases,\n\tNormalizableLink,\n} = matchers;\n\nexport class MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeBlocks(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n\t\tconst source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\tsources.push(source);\n\n\t\tBlocks: {\n\t\t\tconst body = [];\n\t\t\tconst {\n\t\t\t\tsourceText,\n\t\t\t\t[BLOCKS]: sourceBlocks,\n\t\t\t\t[BLOCKS]: {\n\t\t\t\t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {fenced: fenced = (matchedBlocks.fenced = []), unfenced: unfenced = (matchedBlocks.unfenced = [])},\n\t\t\t\t},\n\t\t\t\t[ALIASES]: sourceAliases,\n\t\t\t\t[ALIASES]: {\n\t\t\t\t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t\t},\n\t\t\t} = source;\n\t\t\tlet match = (NormalizableBlocks.lastIndex = null);\n\n\t\t\tconst replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t\tconst match = {text, indent, alias, href, title, index};\n\n\t\t\t\t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t\treturn alias && alias.trim()\n\t\t\t\t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t\t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\">${title || ''}</a>`)\n\t\t\t\t\t: (unaliased.push(match), text);\n\t\t\t};\n\n\t\t\twhile ((match = NormalizableBlocks.exec(sourceText))) {\n\t\t\t\tmatchedBlocks.push(([match.text, match.fence, match.unfenced] = match));\n\t\t\t\tif (match.fence) {\n\t\t\t\t\tfenced.push(match);\n\t\t\t\t} else {\n\t\t\t\t\tunfenced.push(match);\n\t\t\t\t\tmatch.text = match.text.replace(RewritableAliases, replaceAlias);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tNormalization: {\n\t\t\tconst {[BLOCKS]: sourceBlocks} = source;\n\t\t\tfor (const {text, fence, unfenced} of sourceBlocks[MATCHES]) {\n\t\t\t\tsourceBlocks.push(\n\t\t\t\t\tfence\n\t\t\t\t\t\t? text\n\t\t\t\t\t\t: this.normalizeParagraphs(\n\t\t\t\t\t\t\t\tthis.normalizeBreaks(this.normalizeLists(this.normalizeReferences(text, state))),\n\t\t\t\t\t\t  ),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsource.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\treturn source.normalizedText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeReferences(sourceText, state = {}) {\n\t\tconst debugging = import.meta['debug:markout:anchor-normalization'];\n\t\tconst {aliases = (state.aliases = {})} = state;\n\n\t\treturn sourceText.replace(NormalizableReferences, (m, text, link, alias, index) => {\n\t\t\tconst reference = (alias && (alias = alias.trim())) || (link && (link = link.trim()));\n\n\t\t\tif (reference) {\n\t\t\t\tlet href, title;\n\t\t\t\t// debugging && console.log(m, {text, link, alias, reference, index});\n\t\t\t\tif (link) {\n\t\t\t\t\t[, href = '#', title] = NormalizableLink.exec(link);\n\t\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t\t({href = '#', title} = aliases[alias]);\n\t\t\t\t}\n\t\t\t\t// debugging && console.log(m, {href, title, text, link, alias, reference, index});\n\t\t\t\tif (m[0] === '!') {\n\t\t\t\t\treturn ` <img src=\"${href}\"${text || title ? ` title=\"${text || title}\"` : ''} /> `;\n\t\t\t\t} else {\n\t\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\t\treturn ` <a href=\"${href}\"${title ? ` title=\"${title}\"` : ''}>${text || reference}</a>`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t});\n\t}\n\n\tnormalizeBlockquotes(sourceText) {\n\t\t// TODO: Normalize block quotes\n\t\treturn sourceText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t */\n\tnormalizeLists(sourceText) {\n\t\treturn sourceText.replace(NormalizableLists, (m, feed, body) => {\n\t\t\tlet match, indent;\n\t\t\tindent = feed.slice(1);\n\t\t\tlet top = new ComposableList();\n\t\t\tlet list = top;\n\t\t\tconst lists = [top];\n\t\t\tNormalizableListItem.lastIndex = 0;\n\t\t\twhile ((match = NormalizableListItem.exec(m))) {\n\t\t\t\tlet [text, matchedInset, matchedMarker, matchedLine] = match;\n\t\t\t\tlet like;\n\t\t\t\tif (!matchedLine.trim()) continue;\n\n\t\t\t\t// console.log(text, {matchedInset, matchedMarker, matchedLine});\n\n\t\t\t\tif (matchedMarker) {\n\t\t\t\t\tlet depth = matchedInset.length;\n\t\t\t\t\tif (depth > list.listDepth) {\n\t\t\t\t\t\tconst parent = list;\n\t\t\t\t\t\tlist.push((list = new ComposableList()));\n\t\t\t\t\t\tlist.parent = parent;\n\t\t\t\t\t} else if (depth < list.listDepth) {\n\t\t\t\t\t\twhile ((list = list.parent) && depth < list.listDepth);\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t'listStyle' in list &&\n\t\t\t\t\t\t!(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))\n\t\t\t\t\t\t// ((like = ComposableList.markerIsLike(marker, list.listStyle)) === undefined\n\t\t\t\t\t\t// \t? (like = ComposableList.markerIsLike(marker, list.listType))\n\t\t\t\t\t\t// \t: like)\n\t\t\t\t\t) {\n\t\t\t\t\t\tconst parent = list.parent;\n\t\t\t\t\t\t((list = new ComposableList()).parent = parent) ? parent.push(list) : lists.push((top = list));\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(text, [matchedMarker, list.listStyle, like]);\n\n\t\t\t\t\tif (!list) break;\n\n\t\t\t\t\t'listInset' in list ||\n\t\t\t\t\t\t((list.listInset = matchedInset),\n\t\t\t\t\t\t(list.listDepth = depth),\n\t\t\t\t\t\t(list.listType =\n\t\t\t\t\t\t\tmatchedMarker[0] === '* ' || matchedMarker[0] === '-'\n\t\t\t\t\t\t\t\t? 'ul'\n\t\t\t\t\t\t\t\t: ((list.listStart = matchedMarker.replace(/\\W/g, '')), 'ol')));\n\n\t\t\t\t\t'listStyle' in list ||\n\t\t\t\t\t\t(list.listStyle =\n\t\t\t\t\t\t\t(list.listType === 'ul' && ((matchedMarker[0] === '* ' && 'disc') || 'square')) ||\n\t\t\t\t\t\t\tComposableList.orderedStyleOf(matchedMarker));\n\n\t\t\t\t\tmatchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\t\tlist.push(matchedMarker[2] === '[' ? `${matchedMarker.slice(2)}${matchedLine}` : matchedLine);\n\t\t\t\t} else {\n\t\t\t\t\tif (list.length) {\n\t\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\t\tlist[index] += `<p>${matchedLine}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lists.map(list => list.toString(indent)).join('\\n');\n\t\t});\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t */\n\tnormalizeParagraphs(sourceText) {\n\t\treturn (\n\t\t\tsourceText\n\t\t\t\t// .replace(MalformedParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\t\t// \t// console.log('normalizeParagraphs:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\t\t// \treturn `${a}${b}${(MERGED_MARKING && '\\u{23CE}') || ''} `;\n\t\t\t\t// })\n\t\t\t\t.replace(NormalizableParagraphs, (m, feed, inset, body) => {\n\t\t\t\t\tconst paragraphs = body\n\t\t\t\t\t\t.trim()\n\t\t\t\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t\t\t\t.filter(Boolean);\n\t\t\t\t\timport.meta['debug:markout:paragraph-normalization'] &&\n\t\t\t\t\t\tconsole.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n\t\t\t\t\t// return `${feed}<p>${paragraphs.join(`</p>${feed}<p>${feed}`)}</p>`;\n\t\t\t\t\treturn `${feed}<p>${paragraphs.join(`</p>\\n${inset}<p>`)}</p>\\n`;\n\t\t\t\t})\n\t\t);\n\t}\n\n\tnormalizeBreaks(sourceText) {\n\t\treturn sourceText.replace(RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\timport.meta['debug:markout:break-normalization'] &&\n\t\t\t\tconsole.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\treturn `${a}${b}${MERGED_MARKING ? '<tt class=\"normalized-break\"> \\u{035C}</tt>' : ' '}`;\n\t\t});\n\t}\n}\n\n// 'listStyle' in list ||\n// \t(list.listStyle =\n// \t\t(list.listType === 'ul' && ((marker[0] === '*' && 'disc') || 'square')) ||\n// \t\t(marker[0] === '0' && 'decimal-leading-zero') ||\n// \t\t(marker[0] > 0 && 'decimal') ||\n// \t\t`${marker === marker.toLowerCase() ? 'lower' : 'upper'}-${\n// \t\t\t/^[ivx]+\\. $/i.test(marker) ? 'roman' : 'latin'\n// \t\t}`);\n\n// const {\n// \tNormalizableBlocks = /(?:^|\\n)([> \\t]*(?:\\`\\`\\`|\\~\\~\\~))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)|([^]+?(?:(?=\\n[> \\t]*(?:\\`\\`\\`|\\~\\~\\~))|$))/g,\n// \tNormalizableParagraphs = /^((?:[ \\t]*\\n([> \\t]*))+)((?:(?!(?:\\d+\\. |[a-z]\\. |[ivx]+\\. |[-*] ))[^\\-#>|~\\n].*(?:\\n[> \\t]*$)+|$)+)/gm,\n// \tRewritableParagraphs = /^([ \\t]*[^\\-\\*#>\\n].*?)(\\b.*[^:\\n\\s>]+|\\b)[ \\t]*\\n[ \\t>]*(?=(\\b|\\[.*?\\][^:\\n]?|[^#`\\[\\n]))/gm,\n// \tNormalizableLists = /(?=(\\n[> \\t]*)(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. ))((?:\\1(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |   ?)+[^\\n]+(?:\\n[> \\t]*)*(?=\\1|$))+)/g,\n// \tNormalizableListItem = /^([> \\t]*)([-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |)([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|[-*] |\\d+\\. |[a-z]\\. |[ivx]+\\. ).*)*)$/gm,\n// \tNormalizableReferences = /\\!?\\[(\\S.+?\\S)\\](?:\\((\\S[^\\n()\\[\\]]*?\\S)\\)|\\[(\\S[^\\n()\\[\\]]*\\S)\\])/g,\n// \tRewritableAliases = /^([> \\t]*)\\[(\\S.+?\\S)\\]:\\s+(\\S+)(?:\\s+\"([^\\n]*)\"|\\s+'([^\\n]*)'|)(?=\\s*$)/gm,\n// \tNormalizableLink = /\\s*((?:\\s?[^'\"\\(\\)\\]\\[\\s\\n]+)*)(?:\\s+[\"']([^\\n]*)[\"']|)/,\n// } = matchers;\n\n// const NormalizableBlocks = /(?:^|\\n)([> \\t]*(?:\\`\\`\\`|\\~\\~\\~))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)|([^]+?(?:(?=\\n[> \\t]*(?:\\`\\`\\`|\\~\\~\\~))|$))/g;\n// const NormalizableParagraphs = /^((?:[ \\t]*\\n([> \\t]*))+)((?:(?!(?:\\d+\\. |[a-z]\\. |[ivx]+\\. |[-*] ))[^\\-#>|~\\n].*(?:\\n[> \\t]*$)+|$)+)/gm;\n// const RewritableParagraphs = /^([ \\t]*[^\\-\\*#>\\n].*?)(\\b.*[^:\\n\\s>]+|\\b)[ \\t]*\\n[ \\t>]*(?=(\\b|\\[.*?\\][^:\\n]?|[^#`\\[\\n]))/gm;\n// const NormalizableLists = /(?=(\\n[> \\t]*)(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. ))((?:\\1(?:[-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |   ?)+[^\\n]+(?:\\n[> \\t]*)*(?=\\1|$))+)/g;\n// const NormalizableListItem = /^([> \\t]*)([-*] |[1-9]+\\d*\\. |[a-z]\\. |[ivx]+\\. |)([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|[-*] |\\d+\\. |[a-z]\\. |[ivx]+\\. ).*)*)$/gm;\n// const NormalizableReferences = /\\!?\\[(\\S.+?\\S)\\](?:\\((\\S[^\\n()\\[\\]]*?\\S)\\)|\\[(\\S[^\\n()\\[\\]]*\\S)\\])/g;\n// const RewritableAliases = /^([> \\t]*)\\[(\\S.+?\\S)\\]:\\s+(\\S+)(?:\\s+\"([^\\n]*)\"|\\s+'([^\\n]*)'|)(?=\\s*$)/gm;\n// const NormalizableLink = /\\s*((?:\\s?[^'\"\\(\\)\\]\\[\\s\\n]+)*)(?:\\s+[\"']([^\\n]*)[\"']|)/;\n","﻿export class Segmenter extends RegExp {\n\t/**\n\t * @param {string | RegExp} pattern\n\t * @param {string} [flags]\n\t * @param {(string|undefined)[]} [types]\n\t */\n\tconstructor(pattern, flags, types) {\n\t\t(pattern &&\n\t\t\tpattern.types &&\n\t\t\tSymbol.iterator in pattern.types &&\n\t\t\t((!types && (types = pattern.types)) || types === pattern.types)) ||\n\t\t\tObject.freeze((types = (types && Symbol.iterator in types && [...types]) || []));\n\t\tconst {LOOKAHEAD = Segmenter.LOOKAHEAD, INSET = Segmenter.INSET, UNKNOWN = Segmenter.UNKNOWN} = new.target;\n\t\tObject.defineProperties(super(pattern, flags), {\n\t\t\ttypes: {value: types, enumerable: true},\n\t\t\tLOOKAHEAD: {value: LOOKAHEAD},\n\t\t\tINSET: {value: INSET},\n\t\t\tUNKNOWN: {value: UNKNOWN},\n\t\t\t// lookaheads: {value: (typeof LOOKAHEAD === 'symbol' && types.indexOf(LOOKAHEAD) + 1) || false},\n\t\t\t// insets: {value: (typeof insets === 'symbol' && types.indexOf(INSET) + 1) || false},\n\t\t});\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t */\n\tmatchType(text, index) {\n\t\treturn index > 0 && text !== undefined && match.types[index - 1] != null;\n\t}\n\n\tcapture(text, index, match) {\n\t\t// let typeOf;\n\t\tif (index === 0 || text === undefined) return;\n\n\t\tconst typeIndex = index - 1;\n\t\tconst type = this.types[typeIndex];\n\n\t\tif (type === INSET) {\n\t\t\tmatch.inset = text;\n\t\t\treturn;\n\t\t} else if (type === LOOKAHEAD) {\n\t\t\tmatch.lookahead = text;\n\t\t\treturn;\n\t\t} else if (type !== UNKNOWN) {\n\t\t\tswitch (typeof type) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tif (match.typeIndex > -1) return;\n\t\t\t\t\tmatch.type = type;\n\t\t\t\t\tmatch.typeIndex = typeIndex;\n\t\t\t\tcase 'symbol':\n\t\t\t\t\tmatch[type] = text;\n\t\t\t\t\treturn;\n\t\t\t\tcase 'function':\n\t\t\t\t\ttype(text, index, match);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t * @returns {typeof match & {slot: number, type: string}}\n\t */\n\texec(source) {\n\t\tconst match = super.exec(source);\n\t\tmatch &&\n\t\t\t((match.typeIndex = -1),\n\t\t\tmatch.forEach(this.capture || Segmenter.prototype.capture, this),\n\t\t\tmatch.typeIndex > -1 || ((match.type = 'unknown'), (match.typeIndex = -1)),\n\t\t\tnull);\n\n\t\treturn match;\n  }\n\n\tstatic define(factory, flags) {\n\t\tconst types = [];\n\t\tconst RegExp = (this && (this.prototype === Segmenter || this.prototype instanceof Segmenter) && this) || Segmenter;\n    const pattern = factory(type => (types.push((type != null || undefined) && type), ''));\n\n    flags = `${(flags == null ? pattern && pattern.flags : flags) || ''}`;\n\n\t\treturn new RegExp(pattern, flags, types);\n\t}\n}\n\nexport const {INSET, UNKNOWN, LOOKAHEAD} = Object.defineProperties(Segmenter, {\n\tINSET: {value: Symbol.for('INSET'), enumerable: true},\n\tUNKNOWN: {value: Symbol.for('UNKNOWN'), enumerable: true},\n\tLOOKAHEAD: {value: Symbol.for('LOOKAHEAD'), enumerable: true},\n});\n","﻿// import dynamicImport from '/browser/dynamic-import.js';\n// import dynamicImport from '/browser/dynamic-import.js';\nimport {sequence} from '/markout/lib/helpers.js';\n// import {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from './segmenter.js';\nimport {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from '../../../modules/segmenter/segmenter.js';\n\n// console.log(import.meta.url);\n\nglobalThis.$mo = async function debug(specifier = '/markout/examples/markdown-testsuite.md') {\n\tconst timestamp = `?${encodeURIComponent(Date.now())}`;\n\t// const {MarkoutSegments} = await import(`/markout/lib/experimental/markout-segmenter.js${timestamp}`);\n\tconst url = new URL(specifier, location);\n\tconst response = await fetch(url);\n\tif (!response.ok) console.warn(Error(`Failed to fetch ${url}`));\n\tconst sourceText = await response.text();\n\t// console.log(dynamicImport);\n\t// const {debugSegmenter} = await dynamicImport('/modules/segmenter/segmenter.debug.js');\n\tconst {debugSegmenter} = await (1, eval)('specifier => import(specifier)')('/modules/segmenter/segmenter.debug.js');\n\tdebugSegmenter(MarkoutSegments, sourceText);\n};\n\nexport const MarkoutSegments = (() => {\n\tconst MarkoutLists = sequence`[-*]|[1-9]+\\d*\\.|[ivx]+\\.|[a-z]\\.`;\n\tconst MarkoutMatter = sequence`---(?=\\n.+)(?:\\n.*)+?\\n---`;\n\tconst MarkoutStub = sequence`<!--[^]*?-->|<!.*?>|<\\?.*?\\?>|<%.*?%>|<(?:\\b|\\/).*(?:\\b|\\/)>.*`;\n\tconst MarkoutStart = sequence`(?!(?:${MarkoutLists}) )(?:[^#${'`'}~<>|\\n\\s]|${'`'}{1,2}(?!${'`'})|~{1, 2}(?!~))`;\n\tconst MarkoutLine = sequence`(?:${MarkoutStart})(?:${MarkoutStub}|.*)*$`;\n\t// const MarkoutDivider = sequence`-(?:[ \\t]*-)+|=(?:=[ \\t]*)+`;\n\tconst MarkoutDivider = sequence`-{2,}|={2,}|\\*{2,}|(?:- ){2,}-|(?:= ){2,}=|(?:\\* ){2,}\\*`;\n\tconst MarkoutATXHeading = sequence`#{1,6}(?= +${MarkoutLine})`;\n\tconst MarkoutTextHeading = sequence`${MarkoutStart}.*\\n(?=\\2\\={3,}\\n|\\2\\-{3,}\\n)`;\n\n\tconst MarkoutSegments = Segmenter.define(\n\t\ttype =>\n\t\t\tsequence`^\n\t\t  (?:\n\t\t    ${type(UNKNOWN)}(${MarkoutMatter}$|[ \\t]*(?:${MarkoutStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${type(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${type('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${type('table')}(?:([|](?=[ :-]).+[|]$)(?:\\n\\2[|].+[|]$)+)|\n\t\t        ${type('heading')}(?:(${MarkoutATXHeading}|${MarkoutTextHeading}).*$)|\n\t\t        ${type('list')}(?:(${MarkoutLists}) +${MarkoutLine}(?:\\n\\2 {2,4}${MarkoutLine})*$)|\n\t\t        ${type('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${type('divider')}(?:(${MarkoutDivider})$)|\n\t\t        ${type('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t        ${type('paragraph')}(?:(${MarkoutLine}(?:\\n\\2 {0,2}${MarkoutLine})*)$)\n\t\t      )|\n\t\t      ${type(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${type(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n\t\t'gmi',\n\t);\n\treturn MarkoutSegments;\n})();\n","﻿import {normalizeString, matchAll} from '/markout/lib/helpers.js';\nimport {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkoutSegments} from './markout-segmenter.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n\t'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeSegments(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\t\ttry {\n\t\t\t// TODO: Implement Markout's Matcher-based segment normalization\n\t\t\t// for (const segment of matchAll(sourceText, MarkoutSegments)) {}\n\t\t\t// state.segments = [...matchAll(sourceText, MarkoutSegments)];\n\n\t\t\treturn this.normalizeBlocks(sourceText, state);\n\t\t} finally {\n\t\t\timport.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n\t\t}\n\t}\n}\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'segment-normalization',\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n]);\n","﻿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n\tnormalizeSourceText(sourceText) {\n\t\tconst {normalized = (this.normalized = new Map())} = this;\n\t\tlet normalizedText = normalized.get(sourceText);\n\t\tnormalizedText !== undefined ||\n\t\t\tnormalized.set(\n\t\t\t\tsourceText,\n\t\t\t\t(normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n\t\t\t);\n\t\treturn normalizedText;\n\t}\n}\n","﻿import {entities} from '/markup/dist/tokenizer.browser.js';\n\nexport const {\n\tUnicodeIdentifier,\n\tMarkdownIdentityPrefixer,\n\tMarkdownIdentityJoiner,\n\tMarkdownIdentityWord,\n\tMarkdownIdentity,\n} = (({\n\traw = String.raw,\n\tIdentifierStart,\n\tIdentifierPart,\n\tUnicodeIdentifierStart = IdentifierStart.slice(2),\n\tUnicodeIdentifierPart = IdentifierPart.slice(2),\n\tUnicodeIdentifier = raw`[${UnicodeIdentifierStart}][${UnicodeIdentifierPart}]*`,\n\tMarkdownWordPrefixes = raw`$@`,\n\tMarkdownWordPrefix = raw`[${MarkdownWordPrefixes}]?`,\n\tMarkdownWord = raw`${MarkdownWordPrefix}${UnicodeIdentifier}`,\n\tMarkdownWordJoiners = raw` \\\\\\/:_\\-\\xA0\\u2000-\\u200B\\u202F\\u2060`,\n\tMarkdownWordJoiner = raw`[${MarkdownWordJoiners}]+`,\n\t// MarkdownIdentity = raw`(?:\\s|\\n|^)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*(?=\\b[\\s\\n]|$))`,\n\tMarkdownIdentity = raw`(?:\\s|\\n|^)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*)`,\n}) => ({\n\tUnicodeIdentifier: new RegExp(UnicodeIdentifier, 'u'),\n\tMarkdownIdentityPrefixer: new RegExp(raw`^[${MarkdownWordPrefixes}]?`, 'u'),\n\tMarkdownIdentityJoiner: new RegExp(raw`[${MarkdownWordJoiners}]+`, 'ug'),\n\tMarkdownIdentityWord: new RegExp(MarkdownWord, 'u'),\n\tMarkdownIdentity: new RegExp(MarkdownIdentity, 'u'),\n\t// MarkdownIdentitySeparators: new RegExp(raw`[${MarkdownWordPrefixes}${MarkdownWordJoiners}]+`, 'ug')\n}))(entities.es);\n","﻿export const declarativeStyling = (declarativeStyling => {\n\tconst {getOwnPropertyNames, setPrototypeOf, getPrototypeOf, freeze, keys} = Object;\n\tconst {lookup} = declarativeStyling;\n\tconst Filter = /^(?!webkit[A-Z])(?!moz[A-Z])[a-zA-Z]{2,}$/;\n\tconst Boundary = /[a-z](?=[A-Z])/g;\n\tconst selectors = [];\n\tconst style = document.createElement('span').style;\n\n\tfor (const property of new Set(\n\t\t[\n\t\t\t// Webkit/Blink\n\t\t\t...getOwnPropertyNames(style),\n\t\t\t// Firefox\n\t\t\t...getOwnPropertyNames(getPrototypeOf(style)),\n\t\t].filter(property => style[property] === '' && Filter.test(property)),\n\t)) {\n\t\tconst attribute = `${property.replace(Boundary, '$&-').toLowerCase()}:`;\n\t\tlookup[attribute] = property;\n\t\tselectors.push(`[${CSS.escape(attribute)}]`);\n\t}\n\n\tdeclarativeStyling.selector = selectors.join(',');\n\tfreeze(setPrototypeOf(declarativeStyling.lookup, null));\n\tfreeze(declarativeStyling.apply);\n\n\tPrefixes: {\n\t\tconst autoprefix = value => {\n\t\t\tconst prefixed = value.replace(autoprefix.matcher, autoprefix.replacer);\n\t\t\t// console.log(value, prefixed);\n\t\t\treturn prefixed;\n\t\t};\n\t\tautoprefix.mappings = {};\n\t\tautoprefix.prefix = CSS.supports('-moz-appearance', 'initial')\n\t\t\t? '-moz-'\n\t\t\t: CSS.supports('-webkit-appearance', 'initial')\n\t\t\t? '-webkit-'\n\t\t\t: '';\n\n\t\tif (autoprefix.prefix) {\n\t\t\tconst {mappings, prefix} = autoprefix;\n\t\t\tconst map = (property, value, mapping = `${prefix}${value}`) =>\n\t\t\t\tCSS.supports(property, value) || (mappings[value] = mapping);\n\n\t\t\tif (prefix === '-webkit-') {\n\t\t\t\tmap('width', 'fill-available');\n\t\t\t} else if (prefix === '-moz-') {\n\t\t\t\tmap('width', 'fill-available', '-moz-available');\n\t\t\t}\n\n\t\t\tconst mapped = keys(mappings);\n\n\t\t\tif (mapped.length > 0) {\n\t\t\t\tautoprefix.matcher = new RegExp(String.raw`\\b-?(?:${mapped.join('|')})\\b`, 'gi');\n\t\t\t\tfreeze((autoprefix.replacer = value => mappings[value] || value));\n\t\t\t\tfreeze(autoprefix.mappings);\n\t\t\t\tfreeze((declarativeStyling.autoprefix = autoprefix));\n\t\t\t}\n\t\t\t// console.log(autoprefix, {...autoprefix});\n\t\t}\n\t}\n\n\tfreeze(declarativeStyling);\n\treturn declarativeStyling;\n})({\n\t/** @type {{[name: string] : string}} */\n\tlookup: {},\n\tselector: '',\n\tapply: element => {\n\t\tconst style = element.style;\n\t\tconst {lookup, autoprefix} = declarativeStyling;\n\t\tif (autoprefix) {\n\t\t\tfor (const attribute of element.getAttributeNames())\n\t\t\t\tattribute in lookup &&\n\t\t\t\t\t((style[lookup[attribute]] = autoprefix(element.getAttribute(attribute))),\n\t\t\t\t\telement.removeAttribute(attribute));\n\t\t} else {\n\t\t\tfor (const attribute of element.getAttributeNames())\n\t\t\t\tattribute in lookup &&\n\t\t\t\t\t((style[lookup[attribute]] = element.getAttribute(attribute)), element.removeAttribute(attribute));\n\t\t}\n\t},\n\t/** @type {(value: string) => string} */\n\tautoprefix: undefined,\n});\n","﻿import * as markup from '/markup/dist/tokenizer.browser.js';\nimport * as renderer from './renderer.js';\nimport * as entities from '../lib/entities.js';\nimport {declarativeStyling} from '../lib/styling.js';\n\nexport const {\n\tcreateRenderedFragment,\n\tpopulateAssetsInFragment,\n\tnormalizeBreaksInFragment,\n\tnormalizeHeadingsInFragment,\n\tnormalizeChecklistsInFragment,\n\tnormalizeParagraphsInFragment,\n\tapplyDeclarativeStylingInFragment,\n\trenderSourceTextsInFragment,\n} = (() => {\n\t/** @type {HTMLTemplateElement} */\n\tlet template;\n\n\t/** @param {string} sourceText @returns {DocumentFragment}*/\n\tconst createRenderedFragment = sourceText => {\n\t\tlet fragment, normalizedText, tokens;\n\t\ttemplate || (template = document.createElement('template'));\n\n\t\ttemplate.innerHTML = renderer.render(\n\t\t\t(tokens = renderer.tokenize((normalizedText = renderer.normalize(sourceText)))),\n\t\t);\n\n\t\tfragment = template.content.cloneNode(true);\n\t\tfragment.fragment = fragment;\n\t\tfragment.sourceText = sourceText;\n\t\tfragment.normalizedText = normalizedText;\n\t\tfragment.tokens = tokens;\n\n\t\treturn fragment;\n\t};\n\n\t/** Populate remappable elements  */\n\tconst populateAssetsInFragment = fragment => {\n\t\tif (!fragment || fragment.assets) return;\n\t\tfragment.assets = [];\n\n\t\tfor (const link of fragment.querySelectorAll(AssetSelector)) {\n\t\t\tif (link.nodeName === 'SCRIPT') {\n\t\t\t\tif (link.type === 'module') {\n\t\t\t\t\t(fragment.assets.modules || (fragment.assets.modules = [])).push(link);\n\t\t\t\t} else if (!link.type || link.type.trim().toLowerCase() === 'text/javascript') {\n\t\t\t\t\t(fragment.assets.scripts || (fragment.assets.scripts = [])).push(link);\n\t\t\t\t}\n\t\t\t} else if (link.nodeName === 'STYLE') {\n\t\t\t\tif (!link.type || link.type.trim().toLowerCase() === 'text/css') {\n\t\t\t\t\t(fragment.assets.stylesheets || (fragment.assets.stylesheets = [])).push(link);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t(fragment.assets[AssetTypeMap[link.nodeName]] || (fragment.assets[AssetTypeMap[link.nodeName]] = [])).push(\n\t\t\t\t\tlink,\n\t\t\t\t);\n\t\t\t}\n\t\t\tfragment.assets.push(link);\n\t\t}\n\n\t\treturn fragment;\n\t};\n\n\tconst normalizeBreaksInFragment = fragment => {\n\t\tfor (const br of fragment.querySelectorAll('br')) {\n\t\t\tconst {previousSibling, nextSibling, parentElement} = br;\n\t\t\t(!previousSibling ||\n\t\t\t\tpreviousSibling.nodeName !== 'SPAN' ||\n\t\t\t\t!nextSibling ||\n\t\t\t\tnextSibling.nodeName !== 'SPAN' ||\n\t\t\t\t(parentElement && !/^(?:CODE|PRE|LI)$/.test(parentElement.nodeName))) &&\n\t\t\t\tbr.remove();\n\t\t}\n\t};\n\n\tconst normalizeHeadingsInFragment = fragment => {\n\t\tconst {MarkdownIdentity: Identity, MarkdownIdentityPrefixer: Prefixer, MarkdownIdentityJoiner: Joiner} = entities;\n\t\tconst {headings = (fragment.headings = {})} = fragment;\n\n\t\tfor (const subheading of fragment.querySelectorAll(`h1+h2, h2+h3, h3+h4, h4+h5, h5+h6`)) {\n\t\t\tconst previousElementSibling = subheading.previousElementSibling;\n\t\t\tconst previousSibling = subheading.previousSibling;\n\t\t\tif (!previousElementSibling || previousSibling !== previousElementSibling) continue;\n\t\t\t// console.log({subheading, previousElementSibling, previousSibling});\n\t\t\tif (previousElementSibling && previousElementSibling.nodeName === 'HGROUP') {\n\t\t\t\tpreviousElementSibling.appendChild(subheading);\n\t\t\t} else if (previousElementSibling) {\n\t\t\t\tconst hgroup = document.createElement('hgroup');\n\t\t\t\tpreviousElementSibling.before(hgroup);\n\t\t\t\thgroup.appendChild(previousElementSibling);\n\t\t\t\thgroup.appendChild(subheading);\n\t\t\t}\n\t\t}\n\n\t\tfor (const heading of fragment.querySelectorAll(\n\t\t\t`h1:not([id]):not(:empty),h2:not([id]):not(:empty),h3:not([id]):not(:empty)`,\n\t\t)) {\n\t\t\tconst [, identity] = Identity.exec(heading.textContent) || '';\n\t\t\tif (!identity) continue;\n\t\t\tconst anchor = document.createElement('a');\n\t\t\tanchor.id = identity\n\t\t\t\t.replace(Prefixer, '')\n\t\t\t\t.replace(Joiner, '-')\n\t\t\t\t.toLowerCase();\n\t\t\theading.before(anchor);\n\t\t\tanchor.append(heading);\n\t\t\theadings[anchor.id] = {anchor, identity, heading};\n\t\t}\n\t};\n\n\tconst normalizeChecklistsInFragment = fragment => {\n\t\tfor (const checklist of fragment.querySelectorAll(\n\t\t\t'li[type=checkbox]:not([checked]):not([indeterminate]) li[type=checkbox]:not([checked])',\n\t\t)) {\n\t\t\tlet parentChecklist = checklist;\n\t\t\t// console.log({checklist, parentChecklist});\n\t\t\twhile ((parentChecklist = parentChecklist.parentElement.closest('li[type=checkbox]'))) {\n\t\t\t\tif (parentChecklist.hasAttribute('checked') || parentChecklist.hasAttribute('indeterminate')) break;\n\t\t\t\tparentChecklist.setAttribute('indeterminate', '');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst normalizeParagraphsInFragment = fragment => {\n\t\tlet empty, span;\n\t\tif ((empty = fragment.querySelectorAll('p:empty')).length) {\n\t\t\t(span = document.createElement('span')).append(...empty);\n\t\t\t// console.log({empty, content: span.innerHTML});\n\t\t}\n\t};\n\n\tconst applyDeclarativeStylingInFragment = fragment => {\n\t\tif (\n\t\t\ttypeof declarativeStyling.apply === 'function' &&\n\t\t\ttypeof declarativeStyling.selector === 'string' &&\n\t\t\tdeclarativeStyling.selector !== ''\n\t\t)\n\t\t\tfor (const element of fragment.querySelectorAll(declarativeStyling.selector)) declarativeStyling.apply(element);\n\t};\n\n\tconst renderSourceTextsInFragment = fragment => {\n\t\tconst promises = [];\n\n\t\tfor (const element of fragment.querySelectorAll(`[${SourceTypeAttribute}]:not(:empty)`))\n\t\t\tpromises.push(\n\t\t\t\trenderSourceText({\n\t\t\t\t\telement,\n\t\t\t\t\tsourceType: element.getAttribute(MarkupModeAttribute) || element.getAttribute(SourceTypeAttribute),\n\t\t\t\t\tsourceText: element.textContent,\n\t\t\t\t}),\n\t\t\t);\n\n\t\treturn promises.length ? Promise.all(promises) : Promise.resolve();\n\t};\n\n\t/**\n\t * @param {Partial<{element: HTMLElement, sourceType: string, sourceText: String}>} options\n\t * @returns {Promise<HTMLElement>}\n\t */\n\tconst renderSourceText = async options => {\n\t\tlet element, fragment, sourceType, sourceText;\n\n\t\tif (\n\t\t\t!options ||\n\t\t\ttypeof options !== 'object' ||\n\t\t\t(({element, sourceType, sourceText, ...options} = options),\n\t\t\t!(element\n\t\t\t\t? !element.hasAttribute(MarkupSyntaxAttribute) &&\n\t\t\t\t  (sourceType ||\n\t\t\t\t\t\t(sourceType = element.getAttribute(MarkupModeAttribute) || element.getAttribute(SourceTypeAttribute)),\n\t\t\t\t  sourceText || (sourceText = element.textContent || ''))\n\t\t\t\t: sourceText))\n\t\t)\n\t\t\treturn void console.warn('Aborted: renderSourceText(%o => %o)', arguments[0], {element, sourceType, sourceText});\n\n\t\telement || ((element = document.createElement('pre')).className = 'markup code');\n\t\telement.removeAttribute(SourceTypeAttribute);\n\t\telement.setAttribute(MarkupSyntaxAttribute, sourceType);\n\t\tfragment = document.createDocumentFragment();\n\t\telement.textContent = '';\n\t\telement.sourceText = sourceText;\n\t\tawait markup.render(sourceText, {sourceType, fragment});\n\t\telement.appendChild(fragment);\n\n\t\treturn element;\n\t};\n\n\treturn {\n\t\tcreateRenderedFragment,\n\t\tpopulateAssetsInFragment,\n\t\tnormalizeBreaksInFragment,\n\t\tnormalizeHeadingsInFragment,\n\t\tnormalizeChecklistsInFragment,\n\t\tnormalizeParagraphsInFragment,\n\t\tapplyDeclarativeStylingInFragment,\n\t\trenderSourceTextsInFragment,\n\t};\n})();\n\nexport const SourceTypeAttribute = 'source-type';\nexport const MarkupModeAttribute = 'markup-mode';\nexport const MarkupSyntaxAttribute = 'markup-syntax';\n\nexport const AssetTypeMap = Object.freeze(\n\tObject.setPrototypeOf(\n\t\t{\n\t\t\tIMG: 'images',\n\t\t\tVIDEO: 'videos',\n\t\t\tSOURCE: 'sources',\n\t\t},\n\t\tnull,\n\t),\n);\n\nexport const AssetSelector = ['script', 'style', ...Object.keys(AssetTypeMap)]\n\t.map(tag => `${tag.toUpperCase()}[src]:not([slot])`)\n\t.join(',');\n","﻿import {MarkoutNormalizer} from './normalizer.js';\nimport {SourceTypeAttribute} from './content.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t'markout-render-span-restacking': SPAN_RESTACKING = true,\n\t'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n} = import.meta;\n\n// import {tokenize as tokenizeMarkup, encodeEntities} from '../../../markup/dist/tokenizer.browser.js';\nimport {tokenize as tokenizeMarkup, encodeEntities, encodeEntity} from './markup.js';\n\nexport const normalize = sourceText => {\n\tconst {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n\treturn normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n\tconst {\n\t\tpunctuators = (render.punctuators = createPunctuators()),\n\t\trenderer = (render.renderer = new MarkoutRenderer({punctuators})),\n\t} = render;\n\treturn renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => tokenizeMarkup(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const encodeEscapedEntities = ((Escapes, replace) => text => text.replace(Escapes, replace))(\n\t/\\\\([*^-`])/g,\n\t(m, e) => encodeEntity(e),\n);\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\n\nclass MarkoutRenderingContext {\n\tconstructor(renderer) {\n\t\t({punctuators: this.punctuators} = this.renderer = renderer);\n\n\t\t[\n\t\t\tthis.passthru,\n\t\t\tthis.block,\n\t\t\tthis.fenced,\n\t\t\tthis.header,\n\t\t\tthis.indent,\n\t\t\tthis.newlines,\n\t\t\tthis.comment,\n\t\t] = this.renderedText = '';\n\n\t\tSPAN_RESTACKING && createSpanStack(this);\n\t}\n}\n\nclass MarkoutRenderer {\n\tconstructor({punctuators = createPunctuators()} = {}) {\n\t\tthis.punctuators = punctuators;\n\t}\n\trenderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n\t\tlet text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, details;\n\t\tcontext.tokens = tokens;\n\n\t\tconst {punctuators} = context;\n\t\tconst {renderClasses} = this;\n\n\t\tfor (const token of context.tokens) {\n\t\t\tif (!token || !(body = token.text)) continue;\n\t\t\t({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\t\t\ttag = classes = before = after = details = undefined;\n\n\t\t\tif (context.passthru || context.fenced) {\n\t\t\t\tif (context.fenced) {\n\t\t\t\t\tif (context.fenced === context.passthru) {\n\t\t\t\t\t\tcontext.header += text;\n\t\t\t\t\t\tlineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n\t\t\t\t\t} else if (punctuator === 'closer' && text === '```') {\n\t\t\t\t\t\tlet sourceType, sourceAttributes;\n\t\t\t\t\t\tif (context.header) {\n\t\t\t\t\t\t\t[, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n\t\t\t\t\t\t\timport.meta['debug:fenced-block-header-rendering'] &&\n\t\t\t\t\t\t\t\tconsole.log('fenced-block-header', {\n\t\t\t\t\t\t\t\t\tfenced: context.fenced,\n\t\t\t\t\t\t\t\t\theader: context.header,\n\t\t\t\t\t\t\t\t\tpassthru: context.passthru,\n\t\t\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\t\t\tsourceAttributes,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// passthru rendered code\n\t\t\t\t\t\tcontext.renderedText += `<${context.block} class=\"markup code\" ${SourceTypeAttribute}=\"${sourceType ||\n\t\t\t\t\t\t\t'markup'}\"${\n\t\t\t\t\t\t\t// sourceParameters ? ` ${SourceParameters}=\"${sourceParameters}\"` : ''\n\t\t\t\t\t\t\t(sourceAttributes && ` ${sourceAttributes}`) || ''\n\t\t\t\t\t\t}>${encodeEntities(context.passthru)}</${context.block}>`;\n\t\t\t\t\t\tcontext.header = context.indent = context.fenced = context.passthru = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// passthru code\n\t\t\t\t\t\tcontext.passthru += body.replace(context.indent, '');\n\t\t\t\t\t}\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\t// passthru body\n\t\t\t\t\tcontext.passthru += body;\n\t\t\t\t\tif (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n\t\t\t\t\t\t// passthru body rendered\n\t\t\t\t\t\tcontext.renderedText += context.passthru;\n\t\t\t\t\t\tcontext.passthru = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttag = 'span';\n\t\t\tclasses = hint.split(/\\s+/);\n\t\t\tbefore, after;\n\n\t\t\tif (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n\t\t\t\t(type === 'text' && lineBreaks) ||\n\t\t\t\t\t(!text.trim() && (type = 'whitespace')) ||\n\t\t\t\t\t(text in punctuators.entities && (body = punctuators.entities[text]));\n\n\t\t\t\tif (punctuator) {\n\t\t\t\t\tcontext.passthru =\n\t\t\t\t\t\t(((context.comment = punctuator === 'comment' && text) || punctuators.tags.has(text)) && text) || '';\n\t\t\t\t\tif (context.passthru) continue;\n\t\t\t\t\t// SPAN_RESTACKING && punctuator === 'opener' && context.stack[text] >= 0 && (punctuator = 'closer');\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif ((context.fenced = text === '```' && text)) {\n\t\t\t\t\t\t\tcontext.block = 'pre';\n\t\t\t\t\t\t\tcontext.passthru = context.fenced;\n\t\t\t\t\t\t\t[context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n\t\t\t\t\t\t\tcontext.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n\t\t\t\t\t\t\tcontext.header = '';\n\t\t\t\t\t\t\t// punctuator opener fence\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (text in punctuators.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tbefore || ((before = `<${punctuators.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n\t\t\t\t\t\t} else if (text === '<!' || text === '<%') {\n\t\t\t\t\t\t\t// Likely <!doctype …> || Processing instruction\n\t\t\t\t\t\t\tlet next;\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t(next = context.tokens.next().value) &&\n\t\t\t\t\t\t\t\t(body += next.text) &&\n\t\t\t\t\t\t\t\t!(\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'opener' && /^</.test(next.text)) ||\n\t\t\t\t\t\t\t\t\t(next.punctuator === 'closer' && />$/.test(next.text))\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontext.passthru = body;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tif (text === '```') {\n\t\t\t\t\t\t\tcontext.block = punctuators.blocks['```'] || 'pre';\n\t\t\t\t\t\t} else if (text in punctuators.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tafter || ((after = `</${punctuators.spans[text]}>`), classes.push('closer'));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t(before || after) && (tag = 'tt');\n\t\t\t\t\tclasses.push(`${punctuator}-token`);\n\t\t\t\t} else {\n\t\t\t\t\tif (lineBreaks) {\n\t\t\t\t\t\t(!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n\t\t\t\t\t} else if (type === 'sequence') {\n\t\t\t\t\t\tif (text[0] === '`') {\n\t\t\t\t\t\t\ttag = 'code';\n\t\t\t\t\t\t\tbody = text.replace(/(``?)(.*)\\1/, '$2');\n\t\t\t\t\t\t\tlet fence = '`'.repeat((text.length - body.length) / 2);\n\t\t\t\t\t\t\tbody = encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n\t\t\t\t\t\t\tfence in punctuators.entities && (fence = punctuators.entities[fence]);\n\t\t\t\t\t\t\tclasses.push('fenced-code');\n\t\t\t\t\t\t\tclasses.push('code');\n\t\t\t\t\t\t} else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n\t\t\t\t\t\t\ttag = 'hr';\n\t\t\t\t\t\t} else if (!context.block && (context.block = punctuators.blocks[text])) {\n\t\t\t\t\t\t\tlet skip;\n\t\t\t\t\t\t\tlet previous = token;\n\t\t\t\t\t\t\tlet inset = '';\n\t\t\t\t\t\t\twhile ((previous = previous.previous)) {\n\t\t\t\t\t\t\t\tif (previous.lineBreaks) break;\n\t\t\t\t\t\t\t\tinset = `${previous.text}${inset}`;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!/[^> \\t]/.test(inset)) {\n\t\t\t\t\t\t\t\tbefore = `<${context.block}${renderClasses(classes)}>`;\n\t\t\t\t\t\t\t\ttag = 'tt';\n\t\t\t\t\t\t\t\tclasses.push('opener', `${type}-token`);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sequence\n\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (type === 'whitespace') {\n\t\t\t\t\t\t// if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n\t\t\t\t\t\ttag = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debug(`${type}:token`)(type, token);\n\t\t\t\t\t\tclasses.push(`${type}-token`);\n\t\t\t\t\t\tbody = text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdetails =\n\t\t\t\ttag &&\n\t\t\t\t[\n\t\t\t\t\tpunctuator && `punctuator=\"${punctuator}\"`,\n\t\t\t\t\ttype && `token-type=\"${type}\"`,\n\t\t\t\t\thint && `token-hint=\"${hint}\"`,\n\t\t\t\t\tlineBreaks && `line-breaks=\"${lineBreaks}\"`,\n\t\t\t\t].join(' ');\n\n\t\t\ttag === 'span' && (body = encodeEscapedEntities(body));\n\n\t\t\tbefore && (context.renderedText += before);\n\t\t\ttag === 'br' || (context.newlines = 0)\n\t\t\t\t? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.newlines++ && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.renderedText += '<br/>')\n\t\t\t\t: tag === 'hr'\n\t\t\t\t? (context.renderedText += '<hr/>')\n\t\t\t\t: body &&\n\t\t\t\t  (tag\n\t\t\t\t\t\t? (context.renderedText += `<${tag} ${details}${renderClasses(classes)}>${body}</${tag}>`)\n\t\t\t\t\t\t: (context.renderedText += body));\n\t\t\tafter && (context.renderedText += after);\n\t\t}\n\n\t\treturn context.renderedText;\n\t\t// return (context.output = new MarkoutOutput(context));\n\t}\n\n\trenderClasses(classes) {\n\t\treturn ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\t}\n}\n\nclass MarkoutOutput extends String {\n\tconstructor(context) {\n\t\tsuper(context.renderedText).context = context;\n\t}\n}\n\n// render.classes = classes => ((classes = classes.filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\n/// Features\n\nconst createPunctuators = (\n\trepeats = {['*']: 2, ['`']: 3, ['#']: 6},\n\tentities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n\taliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n\tblocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n\tspans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n\ttags = ['<', '>', '<!--', '-->', '<%', '%>', '</', '/>'],\n) => {\n\tconst {keys} = Object;\n\tconst symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n\tfor (const symbol of symbols) {\n\t\tlet n = repeats[symbol] || 1;\n\t\tconst entity = entities[symbol];\n\t\tlet block = blocks[symbol];\n\t\tlet span = spans[symbol];\n\t\tconst tag = block || span;\n\t\tconst map = (block && blocks) || (span && spans);\n\t\tfor (let i = 1; n--; i++) {\n\t\t\tconst k = symbol.repeat(i);\n\t\t\tconst b = blocks[k];\n\t\t\tconst s = spans[k];\n\t\t\tconst m = (b && blocks) || (s && spans) || map;\n\t\t\tconst t = (b || s || m[k] || tag).replace('*', i);\n\t\t\tconst e = entities[k] || (entity && entity.repeat(i));\n\t\t\tm[k] = t;\n\t\t\te && (entities[k] = e);\n\t\t\tif (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n\t\t}\n\t}\n\tfor (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n\tconst escapes = {};\n\n\tfor (const symbol of '* _ ~ `'.split(' ')) {\n\t\tescapes[`\\\\${symbol}`] = `&#x${symbol.charAt(0).toString(16)};`;\n\t}\n\n\treturn {entities, blocks, spans, tags: new Set(tags)};\n};\n\nconst createSpanStack = context => {\n\tconst {\n\t\tpunctuators: {spans},\n\t\trenderer,\n\t} = context;\n\tconst stack = [];\n\tstack.open = (text, body, classes) => {\n\t\tconst {[text]: lastIndex, length: index} = stack;\n\t\tif (lastIndex < 0) return (stack[text] = undefined); // ie continue\n\t\tif (lastIndex >= 0) return stack.close(text, body, classes);\n\t\tconst span = spans[text];\n\t\tconst before = `<${span}${renderer.renderClasses(classes)}>`;\n\t\tstack[text] = index;\n\t\tstack.push({text, body, span, index});\n\t\treturn classes.push('opener'), before;\n\t};\n\tstack.close = (text, body, classes) => {\n\t\tconst span = spans[text];\n\t\tconst {[text]: index, length} = stack;\n\t\tif (index === length - 1) {\n\t\t\tindex >= 0 && (stack.pop(), (stack[text] = undefined));\n\t\t\tconst after = `</${span}>`;\n\t\t\treturn classes.push('closer'), after;\n\t\t} else if (index >= 0) {\n\t\t\tclasses.push('closer', `closer-token`);\n\t\t\tconst details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n\t\t\tconst closing = stack.splice(index, length).reverse();\n\t\t\tfor (const {span, text, body} of closing) {\n\t\t\t\tcontext.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n\t\t\t\tstack[text] < index || (stack[text] = -1);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.renderedText += text;\n\t\t}\n\t};\n\tcontext.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/////\n\n// import {sequence} from '../../../../markup/packages/tokenizer/examples/browser/helpers.js';\n// import {matchAll, sequence} from '/markout/lib/helpers.js';\n// import {MarkoutBlocks} from './experimental/normalizer.js';\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n\t'fenced-block-header-rendering',\n]);\n"],"names":["UNKNOWN","sequence","ALIASES","entities","renderer.render","renderer.tokenize","renderer.normalize","markup.render","tokenizeMarkup"],"mappings":"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"}