{"version":3,"file":"common.js","sources":["../../modules/matcher/matcher.js","../../packages/markout/lib/experimental/helpers.js","../../packages/markout/lib/experimental/expressions.js","../../packages/markout/lib/experimental/composable-list.js","../../packages/markout/lib/experimental/block-normalizer.js","../../packages/modules/segmenter/segmenter.js","../../packages/markout/lib/experimental/markout-segmenter.js","../../packages/markout/lib/experimental/segment-normalizer.js","../../packages/markout/lib/normalizer.js","../../packages/markout/lib/entities.js","../../packages/markout/lib/styling.js","../../packages/markout/lib/helpers.js","../../packages/markout/lib/content.js","../../packages/markout/lib/renderer.js"],"sourcesContent":["﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\n// const trace = /** @type {[function, any[]][]} */ [];\n\nclass Matcher extends RegExp {\n\t/**\n\t * @template T\n\t * @param {Matcher.Pattern} pattern\n\t * @param {Matcher.Flags} [flags]\n\t * @param {Matcher.Entities} [entities]\n\t * @param {T} [state]\n\t */\n\tconstructor(pattern, flags, entities, state) {\n\t\t// trace.push([new.target, [...arguments]]);\n\t\t//@ts-ignore\n\t\tsuper(pattern, flags);\n\t\t// Object.assign(this, RegExp.prototype, new.target.prototype);\n\t\t(pattern &&\n\t\t\tpattern.entities &&\n\t\t\tSymbol.iterator in pattern.entities &&\n\t\t\t((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n\t\t\tObject.freeze((entities = (entities && Symbol.iterator in entities && [...entities]) || []));\n\t\t/** @type {MatcherEntities} */\n\t\tthis.entities = entities;\n\t\t/** @type {T} */\n\t\tthis.state = state;\n\t\tthis.capture = this.capture;\n\t\tthis.exec = this.exec;\n\t\t// this.test = this.test;\n\t\t({\n\t\t\t// LOOKAHEAD: this.LOOKAHEAD = Matcher.LOOKAHEAD,\n\t\t\t// INSET: this.INSET = Matcher.INSET,\n\t\t\t// OUTSET: this.OUTSET = Matcher.OUTSET,\n\t\t\tDELIMITER: this.DELIMITER = Matcher.DELIMITER,\n\t\t\tUNKNOWN: this.UNKNOWN = Matcher.UNKNOWN,\n\t\t} = new.target);\n\t}\n\n\t/**\n\t * @template {MatcherMatchResult} T\n\t * @param {string} text\n\t * @param {number} capture\n\t * @param {T} match\n\t * @returns {T}\n\t */\n\tcapture(text, capture, match) {\n\t\tif (capture === 0) return void (match.capture = {});\n\t\tif (text === undefined) return;\n\t\tconst index = capture - 1;\n\t\tconst {\n\t\t\tentities: {[index]: entity},\n\t\t\tstate,\n\t\t} = this;\n\t\ttypeof entity === 'function'\n\t\t\t? ((match.entity = index), entity(text, capture, match, state))\n\t\t\t: entity == null || //entity === INSET ||\n\t\t\t  // entity === OUTSET ||\n\t\t\t  // entity === DELIMITER ||\n\t\t\t  // entity === LOOKAHEAD ||\n\t\t\t  // entity === UNKNOWN ||\n\t\t\t  (match.entity !== undefined || ((match.identity = entity), (match.entity = index)),\n\t\t\t  (match.capture[entity] = text));\n\t}\n\n\t/**\n\t * @param {string} source\n\t * @returns {MatcherMatchResult}\n\t */\n\texec(source) {\n\t\t// const tracing = trace.length;\n\t\t// trace.push([this.exec, [...arguments]]);\n\t\t/** @type {MatcherMatchArray} */\n\t\tconst match = super.exec(source);\n\t\t// console.log(trace.slice(tracing, trace.length));\n\t\tmatch &&\n\t\t\t(match.forEach(this.capture || Matcher.prototype.capture, (match.matcher = this)),\n\t\t\tmatch.identity || (match.capture[this.UNKNOWN || Matcher.UNKNOWN] = match[0]));\n\n\t\t// @ts-ignore\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {Matcher.PatternFactory} factory\n\t * @param {Matcher.Flags} [flags]\n\t * @param {PropertyDescriptorMap} [properties]\n\t */\n\tstatic define(factory, flags, properties) {\n\t\t/** @type {MatcherEntities} */\n\t\tconst entities = [];\n\t\tentities.flags = '';\n\t\t// const pattern = factory(entity => void entities.push(((entity != null || undefined) && entity) || undefined));\n\t\tconst pattern = factory(entity => {\n\t\t\tif (entity !== null && entity instanceof Matcher) {\n\t\t\t\tentities.push(...entity.entities);\n\n\t\t\t\t!entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n\t\t\t\treturn entity.source;\n\t\t\t} else {\n\t\t\t\tentities.push(((entity != null || undefined) && entity) || undefined);\n\t\t\t}\n\t\t});\n\t\tflags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n\t\tconst matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n\t\t\tMatcher)(pattern, flags, entities);\n\n\t\tproperties && Object.defineProperties(matcher, properties);\n\n\t\treturn matcher;\n\t}\n\n\tstatic flags(...sources) {\n\t\tlet flags = '',\n\t\t\titerative;\n\t\tfor (const source of sources) {\n\t\t\tif (!source || (typeof source !== 'string' && typeof source.flags !== 'string')) continue;\n\t\t\tfor (const flag of source.flags || source)\n\t\t\t\t(flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n\t\t}\n\t\t// console.log('%o: ', flags, ...sources);\n\t\treturn flags;\n\t}\n\n\tstatic get sequence() {\n\t\tconst {raw} = String;\n\t\tconst {replace} = Symbol;\n\t\t/**\n\t\t * @param {TemplateStringsArray} template\n\t\t * @param  {...any} spans\n\t\t * @returns {string}\n\t\t */\n\t\tconst sequence = (template, ...spans) =>\n\t\t\tsequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n\t\t/**\n\t\t * @param {any} value\n\t\t * @returns {string}\n\t\t */\n\t\tsequence.span = value =>\n\t\t\t(value &&\n\t\t\t\t// TODO: Don't coerce to string here?\n\t\t\t\t(typeof value !== 'symbol' && `${value}`)) ||\n\t\t\t'';\n\n\t\tsequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n\n\t\tObject.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n\t\treturn sequence;\n\t}\n\n\tstatic get join() {\n\t\tconst {sequence} = this;\n\n\t\tconst join = (...values) =>\n\t\t\tvalues\n\t\t\t\t.map(sequence.span)\n\t\t\t\t.filter(Boolean)\n\t\t\t\t.join('|');\n\n\t\tObject.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n\t\treturn join;\n\t}\n}\n\nexport const {\n\t// INSET = (Matcher.INSET = /* Symbol.for */ 'INSET'),\n\t// OUTSET = (Matcher.OUTSET = /* Symbol.for */ 'OUTSET'),\n\tDELIMITER = (Matcher.DELIMITER = /* Symbol.for */ 'DELIMITER'),\n\tUNKNOWN = (Matcher.UNKNOWN = /* Symbol.for */ 'UNKNOWN'),\n\t// LOOKAHEAD = (Matcher.LOOKAHEAD = /* Symbol.for */ 'LOOKAHEAD'),\n\tescape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n\t\tconst {replace} = Symbol;\n\t\treturn source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n\t})())),\n\tsequence,\n\tjoin,\n\tmatchAll = (Matcher.matchAll =\n\t\t/**\n\t\t * @template {RegExp} T\n\t\t * @type {(string: Matcher.Text, matcher: T) => Matcher.Iterator<T> }\n\t\t */\n\t\t//@ts-ignore\n\t\t(() =>\n\t\t\tFunction.call.bind(\n\t\t\t\t// String.prototype.matchAll || // TODO: Uncomment eventually\n\t\t\t\t{\n\t\t\t\t\t/**\n\t\t\t\t\t * @this {string}\n\t\t\t\t\t * @param {RegExp | string} pattern\n\t\t\t\t\t */\n\t\t\t\t\t*matchAll() {\n\t\t\t\t\t\tconst matcher =\n\t\t\t\t\t\t\targuments[0] &&\n\t\t\t\t\t\t\t(arguments[0] instanceof RegExp\n\t\t\t\t\t\t\t\t? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n\t\t\t\t\t\t\t\t: RegExp(arguments[0], 'g'));\n\t\t\t\t\t\tconst string = String(this);\n\n\t\t\t\t\t\tif (!(matcher.flags.includes('g') || matcher.flags.includes('y'))) return void (yield matcher.exec(string));\n\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\t\t\tlastIndex <\n\t\t\t\t\t\t\t((match = matcher.exec(string)) ? (lastIndex = matcher.lastIndex + (match[0].length === 0)) : lastIndex);\n\t\t\t\t\t\t\tyield match, matcher.lastIndex = lastIndex\n\t\t\t\t\t\t);\n\t\t\t\t\t},\n\t\t\t\t}.matchAll,\n\t\t\t))()),\n} = Matcher;\n\n/** @typedef {MatcherFlags} Matcher.Flags */\n/** @typedef {MatcherText} Matcher.Text */\n/** @typedef {MatcherOperator} Matcher.Operator */\n/** @typedef {MatcherIdentity} Matcher.Identity */\n/** @typedef {MatcherEntity} Matcher.Entity */\n/** @typedef {MatcherCapture} Matcher.Capture */\n/** @typedef {MatcherEntityFactory} Matcher.EntityFactory */\n/** @typedef {MatcherPatternFactory} Matcher.PatternFactory */\n/** @typedef {MatcherPattern} Matcher.Pattern */\n/** @typedef {MatcherEntities} Matcher.Entities */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchArray} Matcher.MatchArray<T> */\n/** @template {RegExpMatchArray | RegExpExecArray} T @typedef {MatcherMatchResult} Matcher.MatchResult<T> */\n/** @template {RegExp} T @typedef {MatcherIterator} Matcher.Iterator<T> */\n\nexport {Matcher};\n","﻿//@ts-check\n\nexport const {atoms, range} = (() => {\n\tconst {freeze} = Object;\n\n\t/** @template {string} T @param {...T} strings */\n\tconst atoms = (...strings) => freeze(strings); // .filter(atoms.filter).sort()\n\n\tatoms.filter = string => typeof string === 'string' && string.length;\n\n\t/** @param {string} string @param {string} [delimiter] */\n\tatoms.split = (string, delimiter = '') => freeze(string.split(delimiter));\n\t/**\n\t * Splits a string into case-distinct subsets as applicable.\n\t *\n\t * NOTE: A non-case-senstive string yields the single\n\t *       subset instance for all its cases. A fully cased\n\t *       string yields separate upper and lower case subsets\n\t *       and a single subset for both initial and any cases.\n\t *\n\t * @param {string} string @param {string} [delimiter]\n\t */\n\tatoms.split.cases = (string, delimiter = '') => {\n\t\t/** Ordered array of every unique original cased atom in the original string */\n\t\tconst initialCase = freeze(atoms.union(...atoms.split(string, delimiter)));\n\n\t\tconst lowerCaseString = string.toLowerCase();\n\t\tconst upperCaseString = string.toUpperCase();\n\n\t\tif (lowerCaseString === upperCaseString) return [initialCase, initialCase, initialCase, initialCase];\n\n\t\t/** Ordered array of every unique original and transformed cased atom in the original string */\n\t\tconst everyCase = freeze(\n\t\t\tatoms.union(...atoms.split(`${string}${delimiter}${lowerCaseString}${delimiter}${upperCaseString}`, delimiter)),\n\t\t);\n\n\t\t/** Ordered array of every unique lower cased atom in the original string */\n\t\tconst lowerCase = freeze(atoms.union(...atoms.split(lowerCaseString, delimiter)));\n\n\t\t/** Ordered array of every unique upper cased atom in the original string */\n\t\tconst upperCase = freeze(atoms.union(...atoms.split(upperCaseString, delimiter)));\n\n\t\treturn everyCase.length === initialCase.length\n\t\t\t? [initialCase, lowerCase, upperCase, initialCase]\n\t\t\t: [everyCase, lowerCase, upperCase, initialCase];\n\t};\n\n\t/** @template {string} T @param {...T} atoms @returns T[] */\n\tatoms.union = (...atoms) => [...new Set(atoms)];\n\n\t/** @template {string} T @param {...T} atoms @returns {string} */\n\tconst range = (...atoms) => `[${atoms.map(range.escape).join('')}]`;\n\trange.escape = (atom, index) =>\n\t\tatom === ']' ? '\\\\]' : atom === '\\\\' ? '\\\\\\\\' : atom === '-' && index !== 0 ? '\\\\-' : atom;\n\n\treturn {freeze, atoms, range};\n})();\n\n/** @param {string} inset */\nexport const countInsetQuotes = inset => {\n\t/** @type {number} */\n\tlet quotes, position;\n\tposition = -1;\n\tquotes = 0;\n\twhile (position++ < (position = inset.indexOf('>', position))) quotes++;\n\treturn quotes;\n};\n\n\n// /** @param {string} string */\n// const upper = string => string.toUpperCase();\n// /** @param {string} string */\n// const lower = string => string.toLowerCase();\n","﻿//@ts-check\n\nimport {sequence, escape, join} from '/modules/matcher/matcher.js';\nimport {atoms, range} from './helpers.js';\n\n/** Arrays of isolated characters */\nexport const ranges = {};\n\n/** Strings forms of partial recursive expressions */\nexport const sequences = {};\n\n/** Recursive expressions intended to search for qualified substring */\nexport const matchers = {};\n\n/** Isolated expressions intended to test a qualified string */\nexport const patterns = {};\n\n/** Strings forms of partial isolated expressions */\nexport const partials = {};\n\n{\n\tInsets: {\n\t\tranges.Inseter = atoms.split('\\t >'); // 0=tab 1=space 2=quote\n\t\tpartials.Inset = range(...ranges.Inseter);\n\t}\n\n\tFences: {\n\t\t// NOTE: Ambiguities when testing if `~` is meant for\n\t\t//\t\t\t fencing or strikethrough here make it harder\n\t\t//\t\t\t to retain intent and traceablility.\n\t\tranges.FenceMarks = atoms.split('`'); // 0=grave 1=tilde\n\t\tpartials.BlockFence = join(...ranges.FenceMarks.map(fence => escape(fence.repeat(3))));\n\t}\n\n\tLists: {\n\t\tranges.ListMarkers = atoms.split('-*'); // 0=square 1=disc\n\t\t[ranges.CheckMarks, ranges.LowerCheckMarks, ranges.UpperCheckMarks] = atoms.split.cases(' x-'); // 0=unchecked 1=checked 2=indeterminate\n\t\tranges.NumberingSeparators = atoms.split('.)');\n\t\tranges.ArabicNumbers = atoms.split('0123456789');\n\t\t// NOTE: Ambiguities when testing if `i.` is roman or\n\t\t//       latin require temporary restrictions in favor\n\t\t//       of the more popular latin form.\n\t\t//\n\t\t//       Only the subset of ['i', 'v', 'x', 'l'] is\n\t\t//       used which excludes ['c', 'd', 'm'].\n\t\t[ranges.RomanNumerals, ranges.LowerRomanNumerals, ranges.UpperRomanNumerals] = atoms.split.cases('ivxl');\n\t\t[ranges.LatinLetters, ranges.LowerLatinLetters, ranges.UpperLatinLetters] = atoms.split.cases(\n\t\t\t'abcdefghijklmnopqrstuvwxyz',\n\t\t);\n\n\t\t// Unordered lists are broken into two distinct classes:\n\t\t//\n\t\t//   NOTE: Markers are not semantically interchangeable\n\t\t//\n\t\t//   1. Matching Square character (ie `-` per popular notation):\n\t\tpartials.SquareMark = escape(ranges.ListMarkers[0]);\n\t\t//\n\t\t//   2. Matching Disc character (ie `*` per lesser popular notation):\n\t\tpartials.DiscMark = escape(ranges.ListMarkers[1]);\n\t\t//\n\t\t//   Unordered mark is the range of Square/Disc characters:\n\t\tpartials.UnorderedMark = range(...ranges.ListMarkers);\n\n\t\tpartials.NumberingSeparator = range(...ranges.NumberingSeparators);\n\n\t\t// Ordered lists are broken into three distinct classes:\n\t\t//\n\t\t//   NOTE: Ordered markers include both numbering and trailing sparator.\n\t\t//\n\t\t//   1. Matching Decimal characters (one or more with leading zeros)\n\t\t//        NOTE: lookahead is necessary to exclude matching just zero(s)\n\t\tpartials.ArabicNumbering = sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n\t\t\t...ranges.ArabicNumbers.slice(1),\n\t\t)})${range(...ranges.ArabicNumbers)}+`;\n\t\t//\n\t\t//      Matching Zero-leading Decimal characters (two or more):\n\t\t//        NOTE: lookahead is necessary to exclude matching just zero(s)\n\t\tpartials.ZeroLeadingArabicNumbering = sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n\t\t\t...ranges.ArabicNumbers.slice(1),\n\t\t)})${range(...ranges.ArabicNumbers)}{2,}`;\n\t\t//\n\t\t//      Matching Decimal marker (with any separator):\n\t\tpartials.ArabicMarker = sequence`${partials.ArabicNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//      Matching Zero-leading Decimal marker (with any separator):\n\t\tpartials.ZeroLeadingArabicMarker = sequence`${partials.ZeroLeadingArabicNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//   2. Matching Latin character (one only)\n\t\tpartials.LatinNumbering = range(...ranges.LatinLetters);\n\t\tpartials.LowerLatinNumbering = range(...ranges.LowerLatinLetters);\n\t\tpartials.UpperLatinNumbering = range(...ranges.UpperLatinLetters);\n\t\t//\n\t\t//      Matching Latin marker (with any separator):\n\t\tpartials.LatinMarker = sequence`${partials.LatinNumbering}${partials.NumberingSeparator}`;\n\t\tpartials.LowerLatinMarker = sequence`${partials.LowerLatinNumbering}${partials.NumberingSeparator}`;\n\t\tpartials.UpperLatinMarker = sequence`${partials.UpperLatinNumbering}${partials.NumberingSeparator}`;\n\t\t//\n\t\t//   3. Matching Roman characters (one or more of the premitted subset)\n\t\tpartials.RomanNumbering = sequence`${range(...ranges.RomanNumerals)}+`;\n\t\tpartials.LowerRomanNumbering = sequence`${range(...ranges.LowerRomanNumerals)}+`;\n\t\tpartials.UpperRomanNumbering = sequence`${range(...ranges.UpperRomanNumerals)}+`;\n\t\t//\n\t\t//      Matching Roman marker (also with trailing \"period\" separator)\n\t\tpartials.RomanMarker = sequence`${partials.RomanNumbering}\\.`;\n\t\tpartials.LowerRomanMarker = sequence`${partials.LowerRomanNumbering}\\.`;\n\t\tpartials.UpperRomanMarker = sequence`${partials.UpperRomanNumbering}\\.`;\n\t\t//\n\t\t//   Ordered marker is the union of Decimal/Latin/Roman partials:\n\t\tpartials.OrderedMarker = sequence`${join(partials.ArabicMarker, partials.LatinMarker, partials.RomanMarker)}`;\n\n\t\t// Checklists are extensions of unordered lists:\n\t\t//\n\t\t//   NOTE: Markout adds an additional `[-]` indeterminate state\n\t\t//\n\t\t//   a. Matching Enclosed character (without any brackets)\n\t\tpartials.CheckMark = range(...ranges.CheckMarks);\n\t\t//\n\t\t//   b. Matching Enclosure characters (with enclosing brackets)\n\t\tpartials.Checkbox = sequence`\\[${partials.CheckMark}\\]`;\n\t\t//\n\t\t//   Checklist marker is space-separated Unordered marker and Checkbox:\n\t\tpartials.ChecklistMarker = sequence`${partials.UnorderedMark} ${partials.Checkbox}`;\n\n\t\t// Matching list markers is done in two ways:\n\t\t//\n\t\t//   1. Matching head portion (ie excluding the checkbox)\n\t\tpartials.ListMarkerHead = join(partials.UnorderedMark, partials.OrderedMarker);\n\t\t//\n\t\t//   2. Matching full marker (ie including the checkbox)\n\t\tpartials.ListMarker = sequence`${join(partials.ChecklistMarker, partials.UnorderedMarker, partials.OrderedMarker)}`;\n\n\t\tpatterns.DiscMarker = sequence`^${partials.DiscMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.SquareMarker = sequence`^${partials.SquareMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.UnorderedMarker = sequence`^${partials.UnorderedMark}(?= (?!${partials.Checkbox})|$)`;\n\t\tpatterns.ArabicMarker = sequence`^${partials.ArabicMarker}(?= |$)`;\n\t\tpatterns.LatinMarker = sequence`^${partials.LatinMarker}(?= |$)`;\n\t\tpatterns.RomanMarker = sequence`^${partials.RomanMarker}(?= |$)`;\n\t\tpatterns.OrderedMarker = sequence`^${partials.OrderedMarker}(?= |$)`;\n\t\tpatterns.ChecklistMarker = sequence`^${partials.ChecklistMarker}(?= |$)`;\n\n\t\t// There are two groups of list marker expressions:\n\t\tsequences.ListMarkerHead = sequence`(?:${partials.ListMarkerHead})(?: )`;\n\t\tsequences.ListMarker = sequence`(?:${join(\n\t\t\tsequence`(?:${partials.ChecklistMarker} )`,\n\t\t\tsequence`(?:${partials.UnorderedMark} )(?!${partials.Checkbox})`,\n\t\t\tsequence`(?:${partials.OrderedMarker} )`,\n\t\t)})`;\n\n\t\tsequences.NormalizableLists = sequence/* fsharp */ `\n\t\t\t(?=\\n?^(${partials.Inset}*)(?:${sequences.ListMarker}))\n\t\t\t((?:\\n?\\1\n\t\t\t\t(?:${sequences.ListMarker}|   ?)+\n\t\t\t\t[^\\n]+\n\t\t\t\t(?:\\n${partials.Inset}*)*\n\t\t\t\t(?=\\n\\1|$)\n\t\t\t)+)\n\t\t`;\n\n\t\tsequences.NormalizableListItem = sequence/* fsharp */ `\n\t\t\t^\n\t\t\t(${partials.Inset}*)\n\t\t\t((?:${sequences.ListMarkerHead})|)\n\t\t\t([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|${sequences.ListMarker}).*)*)$\n\t\t`;\n\t\tmatchers.NormalizableLists = new RegExp(sequences.NormalizableLists, 'gmu');\n\t\tmatchers.NormalizableListItem = new RegExp(sequences.NormalizableListItem, 'gmu');\n\t}\n\n\t// console.log({sequences, ranges, partials});\n\t// TODO: Document partials and sequences\n\n\tMatchers: {\n\t\tsequences.NormalizableBlocks = sequence/* fsharp */ `\n      (?:^|\\n)(${partials.Inset}*(?:${partials.BlockFence}))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)\n      |(?:^|\\n)(${partials.Inset}*)(?:\n\t\t\t\t<style>[^]+?(?:(?:\\n\\2</style>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script type=module>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t)\n      |([^]+?(?:(?=\\n${partials.Inset}*(?:${partials.BlockFence}|<script>|<style>|<script type=module>))|$))\n    `;\n\t\tmatchers.NormalizableBlocks = new RegExp(sequences.NormalizableBlocks, 'g');\n\n\t\tpartials.HTMLTagBody = sequence/* fsharp */ `(?:[^${`\"'`}>]+?|\".*?\"|'.*?')`;\n\n\t\tsequences.HTMLTags = sequence/* fsharp */ `\n\t\t\t<\\/?[a-zA-z]\\w*${partials.HTMLTagBody}*?>\n\t\t\t|<\\?[^]*?\\?>\n\t\t\t|<!--[^]*?-->\n\t\t\t|<!\\w[^]>\n\t\t`;\n\n\t\tmatchers.HTMLTags = new RegExp(sequences.HTMLTags, 'g');\n\n\t\tsequences.NormalizableParagraphs = sequence/* fsharp */ `\n      ^\n      ((?:[ \\t]*\\n(${partials.Inset}*))+)\n      ($|(?:\n\t\t\t\t(?:\n\t\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>\n\t\t\t\t\t|(?!(?:${join(\n\t\t\t\t\t\tsequences.HTMLTags,\n\t\t\t\t\t\t// sequences.ListMarker,\n\t\t\t\t\t)}))\n\t\t\t\t)\n\t\t\t\t[^-#>|~\\n].*\n        (?:\\n${partials.Inset}*$)+\n      )+)\n    `;\n\t\tmatchers.NormalizableParagraphs = new RegExp(sequences.NormalizableParagraphs, 'gmu');\n\n\t\tsequences.RewritableParagraphs = sequence/* fsharp */ `\n      ^\n      ([ \\t]*[^\\-\\*#>\\n].*?)\n      (\\b.*[^:\\n\\s>]+|\\b)\n      [ \\t]*\\n[ \\t>]*?\n      (?=(\n\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>[^-#>|~\\n].*\n        |\\b(?!(?:${sequences.HTMLTags}))\n        |${escape('[')}.*?${escape(']')}[^:\\n]?\n        |[^#${'`'}${escape('[')}\\n]\n      ))\n    `;\n\n\t\tmatchers.RewritableParagraphs = new RegExp(sequences.RewritableParagraphs, 'gmu');\n\n\t\tpartials.BlockQuote = sequence/* fsharp */ `(?:  ?|\\t)*>(?:  ?>|\\t>)`;\n\n\t\tsequences.NormalizableBlockquotes = sequence/* fsharp */ `\n\t\t\t(?:((?:^|\\n)[ \\t]*\\n|^)|\\n)\n\t\t\t(${partials.BlockQuote}*)\n\t\t\t([ \\t]*(?!>).*)\n\t\t\t(?=\n\t\t\t\t(\\n\\2${partials.BlockQuote}*)\n\t\t\t\t|(\\n\\2)\n\t\t\t\t|(\\n${partials.BlockQuote}*)\n\t\t\t\t|(\\n|$)\n\t\t\t)\n\t\t`;\n\n\t\tmatchers.NormalizableBlockquotes = new RegExp(sequences.NormalizableBlockquotes, 'g');\n\n\t\tsequences.NormalizableReferences = sequence/* fsharp */ `\n      !?\n      ${escape('[')}(\\S.*?\\S)${escape(']')}\n      (?:\n        ${escape('(')}(\\S[^\\n${escape('()[]')}]*?\\S)${escape(')')}\n        |${escape('[')}(\\S[^\\n${escape('()[]')}]*\\S)${escape(']')}\n      )\n\t\t`;\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.NormalizableReferences = new RegExp(sequences.NormalizableReferences, 'gm');\n\n\t\tsequences.RewritableAliases = sequence/* fsharp */ `\n      ^\n      (${partials.Inset}*)\n      ${escape('[')}(\\S.*?\\S)${escape(']')}:\\s+\n      (\\S+)(?:\n        \\s+${'\"'}([^\\n]*)${'\"'}\n        |\\s+${\"'\"}([^\\n]*)${\"'\"}\n        |\n      )\\s*$\n\t\t`;\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.RewritableAliases = new RegExp(sequences.RewritableAliases, 'gm');\n\n\t\tsequences.NormalizableLink = sequence/* fsharp */ `\n      \\s*((?:\\s?[^${`'\"`}${escape('()[]')}}\\s\\n]+)*)\n      (?:\\s+[${`'\"`}]([^\\n]*)[${`'\"`}]|)\n\t\t`;\n\t\t// NOTE: Safari seems to struggle with /\\S|\\s/gmu\n\t\tmatchers.NormalizableLink = new RegExp(sequences.NormalizableLink);\n\t}\n}\n\nexport const expressions = {ranges, sequences, matchers, patterns, partials};\n","﻿import {patterns, ranges} from './expressions.js';\n\nexport class ComposableList extends Array {\n\ttoString(\n\t\tlistInset = this.listInset || '',\n\t\tlistType = this.listType || 'ul',\n\t\tlistStyle = this.listStyle,\n\t\tlistStart = this.listStart,\n\t) {\n\t\tlistStart &&\n\t\t\ttypeof listStart !== 'number' &&\n\t\t\t(listStart = `${\n\t\t\t\tlistStyle === 'lower-latin' || listStyle === 'upper-latin'\n\t\t\t\t\t? ComposableList.parseLatin(listStart)\n\t\t\t\t\t: listStyle === 'lower-roman' || listStyle === 'upper-roman'\n\t\t\t\t\t? ComposableList.parseRoman(listStart)\n\t\t\t\t\t: parseInt(listStart) || ''\n\t\t\t}`);\n\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(listStyle &&\n\t\t\t\t`style=\"list-style: ${listStyle}\"${(listStyle in ListTypes && ` type=\"${ListTypes[listStyle]}\"`) || ''}`) ||\n\t\t\t\t''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(listStart && `start=\"${listStart}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof ComposableList) {\n\t\t\t\t\tconst last = listRows.length - 1;\n\t\t\t\t\tconst row = listRows[last];\n\t\t\t\t\tlast > 0\n\t\t\t\t\t\t? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n\t\t\t\t\t\t\t\t`${listInset}\\t\\t`,\n\t\t\t\t\t\t  )}\\n${listInset}\\t</li>`)\n\t\t\t\t\t\t: listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of listInset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\tlistRows.push(text);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [, checked, content] = /^\\s*(?:\\[([-xX]| )\\] |)(.+?)\\s*$/.exec(item);\n\n\t\t\t\tcontent &&\n\t\t\t\t\tlistRows.push(\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t? `${listInset}\\t<li type=checkbox ${\n\t\t\t\t\t\t\t\t\tchecked === ' ' ? '' : checked === '-' ? 'indeterminate' : ' checked'\n\t\t\t\t\t\t\t  }> ${content} </li>`\n\t\t\t\t\t\t\t: `${listInset}\\t<li> ${content} </li>`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlistRows.push(`${listInset}</${listType}>`);\n\t\treturn `\\n${listRows.join('\\n')}\\n`;\n\t}\n}\n\nconst ChecklistMarker = new RegExp(patterns.ChecklistMarker);\nconst SquareMarker = new RegExp(patterns.SquareMarker);\nconst DiscMarker = new RegExp(patterns.DiscMarker);\nconst ArabicMarker = new RegExp(patterns.ArabicMarker);\nconst ZeroLeadingArabicMarker = new RegExp(patterns.ZeroLeadingArabicMarker);\nconst LatinMarker = new RegExp(patterns.LatinMarker);\nconst LowerLatinMarker = new RegExp(patterns.LowerLatinMarker);\nconst UpperLatinMarker = new RegExp(patterns.UpperLatinMarker);\nconst RomanMarker = new RegExp(patterns.RomanMarker);\nconst LowerRomanMarker = new RegExp(patterns.LowerRomanMarker);\nconst UpperRomanMarker = new RegExp(patterns.UpperRomanMarker);\nconst OrderedMarker = new RegExp(patterns.OrderedMarker);\nconst UnorderedMarker = new RegExp(patterns.UnorderedMarker);\nconst ListTypes = {\n\t'lower-latin': 'a',\n\t'upper-latin': 'A',\n\t'lower-roman': 'i',\n\t'upper-roman': 'I',\n\tdecimal: '1',\n\t'decimal-leading-zero': '1',\n};\n\nLATIN: {\n\tconst parseLatin = latin => parseLatin.mappings[latin] || NaN;\n\n\tparseLatin.mappings = {};\n\n\t'abcdefghijklmnopqrstuvwxyz'.split('').forEach((latin, index) => {\n\t\tparseLatin.mappings[(parseLatin.mappings[latin] = parseLatin.mappings[latin.toUpperCase] = index + 1)] = latin;\n\t});\n\n\tComposableList.parseLatin = parseLatin;\n}\n\nROMAN: {\n\tconst parseRoman = roman =>\n\t\t/[^ivxlcdm]/i.test((roman = String(roman)))\n\t\t\t? NaN\n\t\t\t: roman\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split('')\n\t\t\t\t\t.reduce(parseRoman.reducer, 0);\n\t// prettier-ignore\n\tparseRoman.mappings = Object.freeze({i: 1, v: 5, x: 10, l: 50, c: 100, d: 500, m: 1000, 1: 'i', 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm'});\n\n\tparseRoman.reducer = (decimal, character, index, characters) =>\n\t\tdecimal +\n\t\t(parseRoman.mappings[character] < parseRoman.mappings[characters[index + 1]]\n\t\t\t? -parseRoman.mappings[character]\n\t\t\t: parseRoman.mappings[character]);\n\n\tComposableList.parseRoman = parseRoman;\n}\n\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)(?=\\. )|(\\d+)(?=\\. )|([ivx]+)(?=\\. )|([a-z])(?=[.)] ))|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n\tconst category =\n\t\tComposableList.ORDERED_STYLE.key[\n\t\t\tComposableList.ORDERED_STYLE.exec(marker)\n\t\t\t\t.slice(1)\n\t\t\t\t.findIndex(Boolean)\n\t\t];\n\treturn (\n\t\t(category !== undefined &&\n\t\t\t(category === 'latin' || category === 'roman'\n\t\t\t\t? `${\n\t\t\t\t\t\tvariant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n\t\t\t\t  }-${category}`\n\t\t\t\t: category === 'decimal'\n\t\t\t\t? variant !== 'leading-zero'\n\t\t\t\t\t? 'decimal'\n\t\t\t\t\t: 'decimal-leading-zero'\n\t\t\t\t: variant !== 'decimal'\n\t\t\t\t? 'decimal-leading-zero'\n\t\t\t\t: 'decimal')) ||\n\t\tfallback\n\t);\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n\texpected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n\t['square']: SquareMarker,\n\t['disc']: DiscMarker,\n\t['decimal']: ArabicMarker,\n\t['decimal-leading-zero']: ZeroLeadingArabicMarker,\n\t['latin']: LatinMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-latin']: LatinMarker,\n\t['upper-latin']: LatinMarker,\n\t['roman']: RomanMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-roman']: RomanMarker,\n\t['upper-roman']: RomanMarker,\n\t['ol']: OrderedMarker,\n\t['ul']: UnorderedMarker,\n\t['checkbox']: ChecklistMarker,\n};\n","﻿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\nimport {matchers} from './expressions.js';\nimport {countInsetQuotes} from './helpers.js';\nimport {escape} from '/modules/matcher/matcher.js';\n\nconst {\n\t/** Attempts to overcome **__** */\n\t'markout-render-merged-marking': MERGED_MARKING = false,\n\t'markout-render-comment-stashing': COMMENT_STASHING = false,\n\t'markout-render-paragraph-trimming': PARAGRAPH_TRIMMING = true,\n} = import.meta;\n\nconst generateBlockquotes = (quotesAfter, quotesBefore = 0) => {\n\tlet blockquotes, steps;\n\n\tsteps = quotesAfter - (quotesBefore || 0);\n\n\tif (steps < 0) {\n\t\treturn '</p></blockquote>'.repeat(-steps);\n\t} else if (steps > 0) {\n\t\tblockquotes = new Array(steps);\n\t\tfor (let level = quotesAfter; steps; blockquotes[steps--] = `<blockquote blockquote-level=${level--}><p>`);\n\t\treturn blockquotes.join('');\n\t} else {\n\t\treturn '';\n\t}\n};\n\nexport class MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeBlocks(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\n\t\tconst source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\tsources.push(source);\n\n\t\t// ({body: sourceText, comments: state.comments} = decomment(sourceText));\n\n\t\tBlocks: {\n\t\t\tconst body = [];\n\t\t\tconst {\n\t\t\t\tsourceText,\n\t\t\t\t[BLOCKS]: sourceBlocks,\n\t\t\t\t[BLOCKS]: {\n\t\t\t\t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {\n\t\t\t\t\t\tfenced: fenced = (matchedBlocks.fenced = []),\n\t\t\t\t\t\tembedded: embedded = (matchedBlocks.embedded = []),\n\t\t\t\t\t\tunfenced: unfenced = (matchedBlocks.unfenced = []),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[ALIASES]: sourceAliases,\n\t\t\t\t[ALIASES]: {\n\t\t\t\t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t\t},\n\t\t\t} = source;\n\t\t\tlet match = (matchers.NormalizableBlocks.lastIndex = null);\n\n\t\t\tconst replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t\tconst match = {text, indent, alias, href, title, index};\n\n\t\t\t\t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t\treturn alias && alias.trim()\n\t\t\t\t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t\t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\">${title || ''}</a>`)\n\t\t\t\t\t: (unaliased.push(match), text);\n\t\t\t};\n\n\t\t\twhile ((match = matchers.NormalizableBlocks.exec(sourceText))) {\n\t\t\t\tmatchedBlocks.push(([match.text, match.fence, match.inset, match.unfenced] = match));\n\t\t\t\tif (match.fence) {\n\t\t\t\t\tfenced.push(match);\n\t\t\t\t} else if (match.inset !== undefined) {\n\t\t\t\t\tembedded.push(match);\n\t\t\t\t} else {\n\t\t\t\t\tunfenced.push(match);\n\t\t\t\t\tmatch.text = match.text.replace(matchers.RewritableAliases, replaceAlias);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(matchedBlocks);\n\t\t}\n\n\t\tNormalization: {\n\t\t\t/** @type {{[BLOCKS]: {[MATCHES]: MatchedBlock[]}}} */\n\t\t\tconst {[BLOCKS]: sourceBlocks} = source;\n\t\t\tfor (const matchedBlock of sourceBlocks[MATCHES]) {\n\t\t\t\tsourceBlocks.push(\n\t\t\t\t\tmatchedBlock.fence !== undefined\n\t\t\t\t\t\t? this.normalizeFencing(\n\t\t\t\t\t\t\t\tmatchedBlock.text,\n\t\t\t\t\t\t\t\t// Provides the fence\n\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: matchedBlock.inset !== undefined\n\t\t\t\t\t\t? matchedBlock.text\n\t\t\t\t\t\t: this.normalizeParagraphs(\n\t\t\t\t\t\t\t\tthis.normalizeBreaks(\n\t\t\t\t\t\t\t\t\tthis.normalizeLists(\n\t\t\t\t\t\t\t\t\t\tthis.normalizeBlockquotes(\n\t\t\t\t\t\t\t\t\t\t\tthis.normalizeReferences(matchedBlock.text, state),\n\t\t\t\t\t\t\t\t\t\t\t// Provides the inset\n\t\t\t\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  ),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsource.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\t// source.normalizedText = recomment(source.normalizedText, state.comments);\n\n\t\treturn source.normalizedText;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeFencing(sourceText, matchedBlock) {\n\t\t// const debugging = true;\n\t\tconst inset = sourceText.slice(0, sourceText.indexOf('```'));\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tif (inset.trim() === '') return sourceText;\n\t\tconst quotesBefore = countInsetQuotes(inset);\n\t\tconst Inset = new RegExp(`${escape(inset.trimRight())}(?:  ?|\\t|(?=\\n|$))`, 'g');\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tconst normalized = sourceText.replace(/```\\S*/, `$& blockquote-level=${quotesBefore}`).replace(Inset, '\\n');\n\t\treturn normalized;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeBlockquotes(sourceText, matchedBlock) {\n\t\tconst debugging = false;\n\t\tdebugging === true && (matchedBlock.blockquotes = []);\n\n\t\tmatchers.NormalizableBlockquotes.lastIndex = 0;\n\t\tsourceText = sourceText.replace(\n\t\t\tmatchers.NormalizableBlockquotes,\n\t\t\t(matched, leader, quote, quoted, inquote, requote, dequote, unquote, index, sourceText) => {\n\t\t\t\tlet before, after;\n\t\t\t\tif (quote === undefined) return matched;\n\n\t\t\t\tconst quotesBefore = countInsetQuotes(quote);\n\t\t\t\tconst indent = quote.slice(0, quote.indexOf('>'));\n\t\t\t\tconst quotesAfter =\n\t\t\t\t\tunquote !== undefined\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: requote !== undefined\n\t\t\t\t\t\t? quotesBefore\n\t\t\t\t\t\t: inquote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(inquote)\n\t\t\t\t\t\t: dequote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(dequote)\n\t\t\t\t\t\t: quotesBefore;\n\n\t\t\t\tbefore = leader !== undefined ? `${leader}${indent}${generateBlockquotes(quotesBefore, 0)}` : `\\n${indent}`;\n\n\t\t\t\tafter = generateBlockquotes(quotesAfter, quotesBefore);\n\n\t\t\t\tconst replaced = `${before}${quoted.trimLeft()}${after ? `\\n${indent}${after}` : ''}`;\n\n\t\t\t\tdebugging === true &&\n\t\t\t\t\tmatchedBlock.blockquotes.push({\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tindent,\n\t\t\t\t\t\tquotesBefore,\n\t\t\t\t\t\tquotesAfter,\n\t\t\t\t\t\tmatched: [matched, leader, quote, quoted, inquote, requote, dequote, unquote],\n\t\t\t\t\t});\n\t\t\t\treturn replaced;\n\t\t\t},\n\t\t);\n\n\t\t// TODO: Normalize block quotes\n\t\tdebugging === true && matchedBlock.blockquotes.length > 0 && console.table(matchedBlock.blockquotes);\n\n\t\treturn sourceText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeReferences(sourceText, state = {}) {\n\t\tconst debugging = import.meta['debug:markout:anchor-normalization'];\n\t\tconst {aliases = (state.aliases = {})} = state;\n\n\t\treturn sourceText.replace(matchers.NormalizableReferences, (m, text, link, alias, index) => {\n\t\t\tconst reference = (alias && (alias = alias.trim())) || (link && (link = link.trim()));\n\n\t\t\tif (reference) {\n\t\t\t\tlet href, title, tag;\n\t\t\t\t// debugging && console.log(m, {text, link, alias, reference, index});\n\t\t\t\tif (link) {\n\t\t\t\t\t[, href, title] = matchers.NormalizableLink.exec(link);\n\t\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t\t({href, title} = aliases[alias]);\n\t\t\t\t}\n\n\t\t\t\tif (m[0] === '!') {\n\t\t\t\t\treturn ` <img${href ? ` src=\"${encodeURI(href)}\"` : ''}${\n\t\t\t\t\t\ttext || title ? ` title=\"${text || title}\"` : ''\n\t\t\t\t\t} />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\t\treturn ` <a${href ? ` href=\"${href}\"` : ''}${title ? ` title=\"${title}\"` : ''}>${text || reference}</a>`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeLists(sourceText) {\n\t\treturn sourceText.replace(matchers.NormalizableLists, (m, feed, body) => {\n\t\t\tlet match, indent;\n\t\t\tindent = feed.slice(1);\n\t\t\tlet top = new ComposableList();\n\t\t\tlet list = top;\n\t\t\tconst lists = [top];\n\t\t\tmatchers.NormalizableListItem.lastIndex = 0;\n\t\t\twhile ((match = matchers.NormalizableListItem.exec(m))) {\n\t\t\t\tlet [text, matchedInset, matchedMarker, matchedLine] = match;\n\t\t\t\tlet like;\n\t\t\t\tif (!matchedLine.trim()) continue;\n\n\t\t\t\t// console.log(text, {matchedInset, matchedMarker, matchedLine});\n\n\t\t\t\tif (matchedMarker) {\n\t\t\t\t\tlet depth = matchedInset.length;\n\t\t\t\t\tif (depth > list.listDepth) {\n\t\t\t\t\t\tconst parent = list;\n\t\t\t\t\t\tlist.push((list = new ComposableList()));\n\t\t\t\t\t\tlist.parent = parent;\n\t\t\t\t\t} else if (depth < list.listDepth) {\n\t\t\t\t\t\twhile ((list = list.parent) && depth < list.listDepth);\n\t\t\t\t\t} else if ('listStyle' in list && !(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))) {\n\t\t\t\t\t\tconst parent = list.parent;\n\t\t\t\t\t\t((list = new ComposableList()).parent = parent) ? parent.push(list) : lists.push((top = list));\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(text, [matchedMarker, list.listStyle, like]);\n\n\t\t\t\t\tif (!list) break;\n\n\t\t\t\t\t'listInset' in list ||\n\t\t\t\t\t\t((list.listInset = matchedInset),\n\t\t\t\t\t\t(list.listDepth = depth),\n\t\t\t\t\t\t(list.listType =\n\t\t\t\t\t\t\tmatchedMarker[0] === '*' || matchedMarker[0] === '-'\n\t\t\t\t\t\t\t\t? 'ul'\n\t\t\t\t\t\t\t\t: ((list.listStart = matchedMarker.replace(/\\W/g, '')), 'ol')));\n\n\t\t\t\t\t'listStyle' in list ||\n\t\t\t\t\t\t(list.listStyle =\n\t\t\t\t\t\t\t(list.listType === 'ul' && ((matchedMarker[0] === '*' && 'disc') || 'square')) ||\n\t\t\t\t\t\t\tComposableList.orderedStyleOf(matchedMarker));\n\n\t\t\t\t\tmatchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\t\tlist.push(matchedMarker[2] === '[' ? `${matchedMarker.slice(2)}${matchedLine}` : matchedLine);\n\t\t\t\t} else {\n\t\t\t\t\tif (list.length) {\n\t\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\t\tlist[index] += `<p>${matchedLine}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lists.map(list => list.toString(indent)).join('\\n');\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeParagraphs(sourceText) {\n\t\tsourceText = sourceText.replace(matchers.NormalizableParagraphs, (m, feed, inset, body) => {\n\t\t\tlet paragraphs, comments;\n\n\t\t\tCOMMENT_STASHING && ({body, comments} = decomment(body));\n\n\t\t\tparagraphs = body\n\t\t\t\t.trim()\n\t\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t\t.filter(isNotBlank);\n\n\t\t\timport.meta['debug:markout:paragraph-normalization'] &&\n\t\t\t\tconsole.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n\t\t\tbody = `${feed}<p> ${paragraphs.join(` </p>\\n${inset}<p> `)} </p>\\n`;\n\n\t\t\tCOMMENT_STASHING && (body = recomment(body, comments));\n\n\t\t\treturn body;\n\t\t});\n\n\t\tPARAGRAPH_TRIMMING && (sourceText = sourceText.replace(/<p>[\\s\\n]*<\\/p>/g, ''));\n\n\t\treturn sourceText;\n\t}\n\n\tnormalizeBreaks(sourceText) {\n\t\treturn sourceText.replace(matchers.RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\timport.meta['debug:markout:break-normalization'] &&\n\t\t\t\tconsole.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\treturn `${a}${b}${MERGED_MARKING ? '<tt class=\"normalized-break\"> \\u{035C}</tt>' : ' '}`;\n\t\t});\n\t}\n}\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nconst decomment = body => {\n\tconst comments = [];\n\tbody = body.replace(/<!--[^]+-->/g, comment => `<!--${comments.push(comment)}!-->`);\n\treturn {body, comments};\n};\n\nconst recomment = (body, comments) => {\n\treturn body.replace(\n\t\tnew RegExp(`<!--(${comments.map((comment, i) => comments.length - i).join('|')})!-->`, 'g'),\n\t\t(comment, index) => comments[index] || '<!---->',\n\t);\n};\n\nconst isNotBlank = text => typeof text === 'string' && !(text === '' || text.trim() === '');\n\n/** @template {string} T @typedef {Partial<Record<T, string>>} MatchedRecord */\n/** @typedef {MatchedRecord<'text'|'fence'|'inset'|'unfenced'>} MatchedBlockRecord */\n/** @typedef {RegExpExecArray & MatchedBlockRecord} MatchedBlock */\n","﻿export class Segmenter extends RegExp {\n\t/**\n\t * @param {string | RegExp} pattern\n\t * @param {string} [flags]\n\t * @param {(string|undefined)[]} [types]\n\t */\n\tconstructor(pattern, flags, types) {\n\t\t(pattern &&\n\t\t\tpattern.types &&\n\t\t\tSymbol.iterator in pattern.types &&\n\t\t\t((!types && (types = pattern.types)) || types === pattern.types)) ||\n\t\t\tObject.freeze((types = (types && Symbol.iterator in types && [...types]) || []));\n\t\tconst {LOOKAHEAD = Segmenter.LOOKAHEAD, INSET = Segmenter.INSET, UNKNOWN = Segmenter.UNKNOWN} = new.target;\n\t\tObject.defineProperties(super(pattern, flags), {\n\t\t\ttypes: {value: types, enumerable: true},\n\t\t\tLOOKAHEAD: {value: LOOKAHEAD},\n\t\t\tINSET: {value: INSET},\n\t\t\tUNKNOWN: {value: UNKNOWN},\n\t\t\t// lookaheads: {value: (typeof LOOKAHEAD === 'symbol' && types.indexOf(LOOKAHEAD) + 1) || false},\n\t\t\t// insets: {value: (typeof insets === 'symbol' && types.indexOf(INSET) + 1) || false},\n\t\t});\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t */\n\tmatchType(text, index) {\n\t\treturn index > 0 && text !== undefined && match.types[index - 1] != null;\n\t}\n\n\tcapture(text, index, match) {\n\t\t// let typeOf;\n\t\tif (index === 0 || text === undefined) return;\n\n\t\tconst typeIndex = index - 1;\n\t\tconst type = this.types[typeIndex];\n\n\t\tif (type === INSET) {\n\t\t\tmatch.inset = text;\n\t\t\treturn;\n\t\t} else if (type === LOOKAHEAD) {\n\t\t\tmatch.lookahead = text;\n\t\t\treturn;\n\t\t} else if (type !== UNKNOWN) {\n\t\t\tswitch (typeof type) {\n\t\t\t\tcase 'string':\n\t\t\t\t\tif (match.typeIndex > -1) return;\n\t\t\t\t\tmatch.type = type;\n\t\t\t\t\tmatch.typeIndex = typeIndex;\n\t\t\t\tcase 'symbol':\n\t\t\t\t\tmatch[type] = text;\n\t\t\t\t\treturn;\n\t\t\t\tcase 'function':\n\t\t\t\t\ttype(text, index, match);\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {RegExpExecArray} match\n\t * @returns {typeof match & {slot: number, type: string}}\n\t */\n\texec(source) {\n\t\tconst match = super.exec(source);\n\t\tmatch &&\n\t\t\t((match.typeIndex = -1),\n\t\t\tmatch.forEach(this.capture || Segmenter.prototype.capture, this),\n\t\t\tmatch.typeIndex > -1 || ((match.type = 'unknown'), (match.typeIndex = -1)),\n\t\t\tnull);\n\n\t\treturn match;\n  }\n\n\tstatic define(factory, flags) {\n\t\tconst types = [];\n\t\tconst RegExp = (this && (this.prototype === Segmenter || this.prototype instanceof Segmenter) && this) || Segmenter;\n    const pattern = factory(type => (types.push((type != null || undefined) && type), ''));\n\n    flags = `${(flags == null ? pattern && pattern.flags : flags) || ''}`;\n\n\t\treturn new RegExp(pattern, flags, types);\n\t}\n}\n\nexport const {INSET, UNKNOWN, LOOKAHEAD} = Object.defineProperties(Segmenter, {\n\tINSET: {value: Symbol.for('INSET'), enumerable: true},\n\tUNKNOWN: {value: Symbol.for('UNKNOWN'), enumerable: true},\n\tLOOKAHEAD: {value: Symbol.for('LOOKAHEAD'), enumerable: true},\n});\n","﻿// import dynamicImport from '/browser/dynamic-import.js';\n// import dynamicImport from '/browser/dynamic-import.js';\nimport {sequence} from '/markout/lib/helpers.js';\n// import {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from './segmenter.js';\nimport {Segmenter, INSET, LOOKAHEAD, UNKNOWN} from '../../../modules/segmenter/segmenter.js';\n\n// console.log(import.meta.url);\n\nglobalThis.$mo = async function debug(specifier = '/markout/examples/markdown-testsuite.md') {\n\tconst timestamp = `?${encodeURIComponent(Date.now())}`;\n\t// const {MarkoutSegments} = await import(`/markout/lib/experimental/markout-segmenter.js${timestamp}`);\n\tconst url = new URL(specifier, location);\n\tconst response = await fetch(url);\n\tif (!response.ok) console.warn(Error(`Failed to fetch ${url}`));\n\tconst sourceText = await response.text();\n\t// console.log(dynamicImport);\n\t// const {debugSegmenter} = await dynamicImport('/modules/segmenter/segmenter.debug.js');\n\tconst {debugSegmenter} = await (1, eval)('specifier => import(specifier)')('/modules/segmenter/segmenter.debug.js');\n\tdebugSegmenter(MarkoutSegments, sourceText);\n};\n\nexport const MarkoutSegments = (() => {\n\tconst MarkoutLists = sequence`[-*]|[1-9]+\\d*\\.|[ivx]+\\.|[a-z]\\.`;\n\tconst MarkoutMatter = sequence`---(?=\\n.+)(?:\\n.*)+?\\n---`;\n\tconst MarkoutStub = sequence`<!--[^]*?-->|<!.*?>|<\\?.*?\\?>|<%.*?%>|<(?:\\b|\\/).*(?:\\b|\\/)>.*`;\n\tconst MarkoutStart = sequence`(?!(?:${MarkoutLists}) )(?:[^#${'`'}~<>|\\n\\s]|${'`'}{1,2}(?!${'`'})|~{1, 2}(?!~))`;\n\tconst MarkoutLine = sequence`(?:${MarkoutStart})(?:${MarkoutStub}|.*)*$`;\n\t// const MarkoutDivider = sequence`-(?:[ \\t]*-)+|=(?:=[ \\t]*)+`;\n\tconst MarkoutDivider = sequence`-{2,}|={2,}|\\*{2,}|(?:- ){2,}-|(?:= ){2,}=|(?:\\* ){2,}\\*`;\n\tconst MarkoutATXHeading = sequence`#{1,6}(?= +${MarkoutLine})`;\n\tconst MarkoutTextHeading = sequence`${MarkoutStart}.*\\n(?=\\2\\={3,}\\n|\\2\\-{3,}\\n)`;\n\n\tconst MarkoutSegments = Segmenter.define(\n\t\ttype =>\n\t\t\tsequence`^\n\t\t  (?:\n\t\t    ${type(UNKNOWN)}(${MarkoutMatter}$|[ \\t]*(?:${MarkoutStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${type(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${type('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${type('table')}(?:([|](?=[ :-]).+[|]$)(?:\\n\\2[|].+[|]$)+)|\n\t\t        ${type('heading')}(?:(${MarkoutATXHeading}|${MarkoutTextHeading}).*$)|\n\t\t        ${type('list')}(?:(${MarkoutLists}) +${MarkoutLine}(?:\\n\\2 {2,4}${MarkoutLine})*$)|\n\t\t        ${type('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${type('divider')}(?:(${MarkoutDivider})$)|\n\t\t        ${type('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t        ${type('paragraph')}(?:(${MarkoutLine}(?:\\n\\2 {0,2}${MarkoutLine})*)$)\n\t\t      )|\n\t\t      ${type(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${type(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n\t\t'gmi',\n\t);\n\treturn MarkoutSegments;\n})();\n","﻿import {normalizeString, matchAll} from '/markout/lib/helpers.js';\nimport {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkoutSegments} from './markout-segmenter.js';\n\nconst {\n\t// Attempts to overcome **__**\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n\t'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} = import.meta;\n\nconst MATCHES = Symbol('matches');\nconst ALIASES = 'aliases';\nconst BLOCKS = 'blocks';\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeSegments(sourceText, state = {}) {\n\t\tconst {sources = (state.sources = []), [ALIASES]: aliases = (state[ALIASES] = {})} = state;\n\t\ttry {\n\t\t\t// TODO: Implement Markout's Matcher-based segment normalization\n\t\t\t// for (const segment of matchAll(sourceText, MarkoutSegments)) {}\n\t\t\t// state.segments = [...matchAll(sourceText, MarkoutSegments)];\n\n\t\t\treturn this.normalizeBlocks(sourceText, state);\n\t\t} finally {\n\t\t\timport.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n\t\t}\n\t}\n}\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'segment-normalization',\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n]);\n","﻿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n\tnormalizeSourceText(sourceText) {\n\t\tconst {normalized = (this.normalized = new Map())} = this;\n\t\tlet normalizedText = normalized.get(sourceText);\n\t\tnormalizedText !== undefined ||\n\t\t\tnormalized.set(\n\t\t\t\tsourceText,\n\t\t\t\t(normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n\t\t\t);\n\t\treturn normalizedText;\n\t}\n}\n","﻿import {entities} from '/markup/dist/tokenizer.browser.js';\n\nexport const {\n\tUnicodeIdentifier,\n\tMarkdownIdentityPrefixer,\n\tMarkdownIdentityJoiner,\n\tMarkdownIdentityWord,\n\tMarkdownIdentity,\n} = (({\n\traw = String.raw,\n\tIdentifierStart,\n\tIdentifierPart,\n\tUnicodeIdentifierStart = IdentifierStart.slice(2),\n\tUnicodeIdentifierPart = IdentifierPart.slice(2),\n\tUnicodeIdentifier = raw`[\\d${UnicodeIdentifierStart}][\\d${UnicodeIdentifierPart}]*`,\n\tMarkdownWordPrefixes = raw`$@`,\n\tMarkdownWordPrefix = raw`[${MarkdownWordPrefixes}]?`,\n\tMarkdownWord = raw`${MarkdownWordPrefix}${UnicodeIdentifier}`,\n\tMarkdownWordJoiners = raw` \\\\\\/:_\\-\\xA0\\u2000-\\u200B\\u202F\\u2060`,\n\tMarkdownWordJoiner = raw`[${MarkdownWordJoiners}]+`,\n\t// MarkdownIdentity = raw`(?:\\s|\\n|^)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*(?=\\b[\\s\\n]|$))`,\n\tMarkdownIdentity = raw`(?:\\s|\\n|^)(?:The (?=\\w)|)(${MarkdownWord}(?:${MarkdownWordJoiner}${MarkdownWord})*)`,\n}) => ({\n\tUnicodeIdentifier: new RegExp(UnicodeIdentifier, 'u'),\n\tMarkdownIdentityPrefixer: new RegExp(raw`^[${MarkdownWordPrefixes}]?`, 'u'),\n\tMarkdownIdentityJoiner: new RegExp(raw`[${MarkdownWordJoiners}]+`, 'ug'),\n\tMarkdownIdentityWord: new RegExp(MarkdownWord, 'u'),\n\tMarkdownIdentity: new RegExp(MarkdownIdentity, 'u'),\n\t// MarkdownIdentitySeparators: new RegExp(raw`[${MarkdownWordPrefixes}${MarkdownWordJoiners}]+`, 'ug')\n}))(entities.es);\n","﻿export const declarativeStyling = (declarativeStyling => {\n\tconst {getOwnPropertyNames, setPrototypeOf, getPrototypeOf, freeze, keys} = Object;\n\tconst {lookup} = declarativeStyling;\n\tconst Prefix = /^-?webkit-|-?moz-/;\n\tconst Filter = /^(?!webkit[A-Z])(?!moz[A-Z])[a-zA-Z]{2,}$/;\n\tconst Boundary = /[a-z](?=[A-Z])/g;\n\tconst selectors = [];\n\tconst style = document.createElement('span').style;\n\n\tfor (const property of new Set([\n\t\t// Markout style properties\n\t\t'style', // mixin styling\n\t\t// CSS style properties\n\t\t...[\n\t\t\t// Webkit/Blink\n\t\t\t...getOwnPropertyNames(style),\n\t\t\t// Firefox\n\t\t\t...getOwnPropertyNames(getPrototypeOf(style)),\n\t\t].filter(property => style[property] === ''),\n\t\t// ].filter(property => style[property] === '' && Filter.test(property)),\n\t])) {\n\t\tconst attribute = `${property.replace(Boundary, '$&-').toLowerCase()}:`.replace(Prefix, '');\n\t\tlookup[attribute] = property;\n\t\tselectors.push(`[${CSS.escape(attribute)}]`);\n\t}\n\n\tdeclarativeStyling.selector = selectors.join(',');\n\tfreeze(setPrototypeOf(declarativeStyling.lookup, null));\n\tfreeze(declarativeStyling.apply);\n\n\tPrefixes: {\n\t\tconst autoprefix = value => {\n\t\t\tconst prefixed = value.replace(autoprefix.matcher, autoprefix.replacer);\n\t\t\t// console.log(value, prefixed);\n\t\t\treturn prefixed;\n\t\t};\n\t\tautoprefix.mappings = {};\n\t\tautoprefix.prefix = CSS.supports('-moz-appearance', 'initial')\n\t\t\t? '-moz-'\n\t\t\t: CSS.supports('-webkit-appearance', 'initial')\n\t\t\t? '-webkit-'\n\t\t\t: '';\n\n\t\tif (autoprefix.prefix) {\n\t\t\tconst {mappings, prefix} = autoprefix;\n\t\t\tconst map = (property, value, mapping = `${prefix}${value}`) =>\n\t\t\t\tCSS.supports(property, value) || (mappings[value] = mapping);\n\n\t\t\tif (prefix === '-webkit-') {\n\t\t\t\tmap('width', 'fill-available');\n\t\t\t} else if (prefix === '-moz-') {\n\t\t\t\tmap('width', 'fill-available', '-moz-available');\n\t\t\t}\n\n\t\t\tconst mapped = keys(mappings);\n\n\t\t\tif (mapped.length > 0) {\n\t\t\t\tautoprefix.matcher = new RegExp(String.raw`\\b-?(?:${mapped.join('|')})\\b`, 'gi');\n\t\t\t\tfreeze((autoprefix.replacer = value => mappings[value] || value));\n\t\t\t\tfreeze(autoprefix.mappings);\n\t\t\t\tfreeze((declarativeStyling.autoprefix = autoprefix));\n\t\t\t}\n\t\t\t// console.log(autoprefix, {...autoprefix});\n\t\t}\n\t}\n\n\tdeclarativeStyling.normalize = (value, property) => {\n\t\tif (!value || !(value = value.trim())) return '';\n\t\tvalue.startsWith('--') && !value.includes(' ') && (value = `var(${value}--${property}--)`);\n\t\treturn value;\n\t};\n\n\tdeclarativeStyling.mixin = (element, style) => {\n\t\t// TODO: Explore computedStyle mixins\n\t\telement.style.border = `var(--${style}--border--, unset)`;\n\t\telement.style.background = `var(--${style}--background--, unset)`;\n\t\telement.style.color = `var(--${style}--color--, unset)`;\n\t\telement.style.font = `var(--${style}--font--, unset)`;\n\t\telement.style.opacity = `var(--${style}--opacity--, unset)`;\n\t};\n\n\t// declarativeStyling.mixin['markout-content'] = undefined;\n\n\tfreeze(declarativeStyling);\n\treturn declarativeStyling;\n})({\n\t/** @type {{[name: string] : string}} */\n\tlookup: {},\n\tselector: '',\n\tapply: element => {\n\t\tconst style = element.style;\n\t\tconst {lookup, autoprefix, normalize} = declarativeStyling;\n\t\tfor (const attribute of element.getAttributeNames()) {\n\t\t\tattribute in lookup &&\n\t\t\t\t(attribute === 'style:'\n\t\t\t\t\t? declarativeStyling.mixin(element, element.getAttribute(attribute))\n\t\t\t\t\t: autoprefix === undefined\n\t\t\t\t\t? (style[lookup[attribute]] = normalize(element.getAttribute(attribute), attribute.slice(0, -1)))\n\t\t\t\t\t: (style[lookup[attribute]] = autoprefix(normalize(element.getAttribute(attribute), attribute.slice(0, -1)))),\n\t\t\t\telement.removeAttribute(attribute));\n\t\t}\n\t},\n\t/** @type {(value: string) => string} */\n\tautoprefix: undefined,\n\t/** @type {(element: HTMLElement, style: string) => void} */\n\tmixin: undefined,\n\t/** @type {(value: string, property: string) => string} */\n\tnormalize: undefined,\n});\n","﻿//@ts-check\n\n/** @template T @param {T} pairs @returns {Readonly<T>} */\nexport const Enum = pairs => Object.freeze(Object.setPrototypeOf(pairs, null));\n\n/**\n * @param {string} context\n * @param {object} meta\n * @param {(string | boolean)[]} [flags]\n */\nexport const debugging = (context, meta, flags) =>\n\t!(meta && context && flags) ||\n\ttypeof meta.url !== 'string' ||\n\ttypeof context !== 'string' ||\n\ttypeof flags !== 'object' ||\n\t(Array.isArray(flags) && flags.includes(false)) ||\n\tObject.entries(flags).reduce(\n\t\tArray.isArray(flags)\n\t\t\t? (meta, [, flag]) => (typeof flag === 'string' && (meta[`debug:${context}:${flag}`] = true), meta)\n\t\t\t: (meta, [flag, value = meta[flag]]) => (\n\t\t\t\t\ttypeof flag === 'string' && (meta[`debug:${context}:${flag}`] = value), meta\n\t\t\t  ),\n\t\tmeta,\n\t\t// meta[`debug:${context}`] || (meta[`debug:${context}`] = {}),\n\t);\n\n// const {\n// \tfromEntries = (reducer => (...entries) => entries.reduce(reducer, {}))(\n// \t\t(entries, [key, value]) => ((entries[key] = value), entries),\n// \t),\n// } = Object;\n\n/** @type {(text: string, matcher: RegExp | string) => IterableIterator<RegExpExecArray>} */\nexport const matchAll = Function.call.bind(\n\tString.prototype.matchAll ||\n\t\t{\n\t\t\t/**\n\t\t\t * @this {string}\n\t\t\t * @param {RegExp | string} pattern\n\t\t\t */\n\t\t\t*matchAll() {\n\t\t\t\tconst matcher = arguments[0] && (arguments[0] instanceof RegExp ? arguments[0] : RegExp(arguments[0], 'g'));\n\t\t\t\tconst string = String(this);\n\t\t\t\tfor (\n\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\tlastIndex <\n\t\t\t\t\t// (((arguments[0].lastIndex = lastIndex > -1 ? lastIndex : null), (match = next()))\n\t\t\t\t\t(((matcher.lastIndex = lastIndex > -1 ? lastIndex + 1 : null), (match = matcher.exec(string)))\n\t\t\t\t\t\t? (lastIndex = matcher.lastIndex)\n\t\t\t\t\t\t: lastIndex);\n\t\t\t\t\tyield match\n\t\t\t\t);\n\t\t\t},\n\t\t}.matchAll,\n);\n\nexport const sequence = (...args) =>\n\tReflect.apply(String.raw, null, args.map((v = '') => v)).replace(/^\\s+|\\n\\s*|\\s+$/g, '');\n\nsequence.escape = RegExp.escape\n\t? (escape => source => escape(source))(RegExp.escape)\n\t: source => /[\\\\^$*+?.()|[\\]{}]/g[Symbol.replace](source, '\\\\$&');\n\n/**\n * @param {string} sourceText\n */\nexport const normalizeString = string => Object.keys({[string]: true})[0];\n\n// export const typeed = (type, index) => index !== 0 && type != null;\n\n// export class RenderableList extends Array {\n// \ttoString(inset = this.inset || '', type = this.type || 'ul', style = this.style, start = this.start) {\n// \t\tconst attributes = `${\n// \t\t\t// TODO: Explore using type attribute instead\n// \t\t\t(style && `style=\"list-style: ${style}\"`) || ''\n// \t\t} ${\n// \t\t\t// TODO: Check if guard against invalid start is needed\n// \t\t\t(start && `start=\"${start}\"`) || ''\n// \t\t}`.trim();\n\n// \t\tconst rows = [`${inset}<${type}${(attributes && ` ${attributes}`) || ''}>`];\n// \t\tfor (const item of this) {\n// \t\t\tif (item && typeof item === 'object') {\n// \t\t\t\tif (item instanceof RenderableList) {\n// \t\t\t\t\tconst last = rows.length - 1;\n// \t\t\t\t\tconst row = rows[last];\n// \t\t\t\t\tlast > 0\n// \t\t\t\t\t\t? (rows[rows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`)\n// \t\t\t\t\t\t: rows.push(`${inset}\\t<li>\\n${item.toString(`${inset}\\t\\t`)}\\n${inset}\\t</li>`);\n// \t\t\t\t} else {\n// \t\t\t\t\tconst insetText = `${item}`;\n// \t\t\t\t\tlet text = insetText;\n// \t\t\t\t\tfor (const character of inset) {\n// \t\t\t\t\t\tif (!text.startsWith(character)) break;\n// \t\t\t\t\t\ttext = text.slice(1);\n// \t\t\t\t\t}\n// \t\t\t\t\trows.push(text);\n// \t\t\t\t}\n// \t\t\t} else {\n// \t\t\t\trows.push(`${inset}\\t<li>${`${item}`.trim()}</li>`);\n// \t\t\t}\n// \t\t}\n// \t\trows.push(`${inset}</${type}>`);\n// \t\treturn `\\n${rows.join('\\n')}\\n`;\n// \t}\n// }\n","﻿import * as markup from '/markup/dist/tokenizer.browser.js';\nimport * as renderer from './renderer.js';\nimport * as entities from '../lib/entities.js';\nimport {declarativeStyling} from '../lib/styling.js';\nimport {Enum} from './helpers.js';\n\n// export const MarkoutContentFlags = '(markout content flags)';\n\nexport const {\n\tdefaults,\n\tcreateRenderedFragment,\n\tnormalizeRenderedFragment,\n\tpopulateAssetsInFragment,\n\tnormalizeBreaksInFragment,\n\tnormalizeHeadingsInFragment,\n\tnormalizeChecklistsInFragment,\n\tnormalizeParagraphsInFragment,\n\tflattenTokensInFragment,\n\tapplyDeclarativeStylingInFragment,\n\trenderSourceTextsInFragment,\n} = (() => {\n\t/** @type {HTMLTemplateElement} */\n\tlet template;\n\n\tconst defaults = Object.freeze({\n\t\tflags: Object.freeze({\n\t\t\tDOM_MUTATIONS: undefined,\n\t\t\tBREAK_NORMALIZATION: undefined,\n\t\t\tHEADING_NORMALIZATION: true,\n\t\t\tPARAGRAPH_NORMALIZATION: true,\n\t\t\tCHECKLIST_NORMALIZATION: true,\n\t\t\tBLOCKQUOTE_NORMALIZATION: true,\n\t\t\tTOKEN_FLATTENING: true,\n\t\t\tDECLARATIVE_STYLING: true,\n\t\t\tSOURCE_TEXT_RENDERING: true,\n\t\t\tASSET_REMAPPING: true,\n\t\t\tASSET_INITIALIZATION: true,\n\t\t}),\n\t});\n\n\t/** @param {string} sourceText @returns {DocumentFragment}*/\n\tconst createRenderedFragment = sourceText => {\n\t\tlet fragment, normalizedText, tokens, renderedText;\n\t\ttemplate || (template = document.createElement('template'));\n\n\t\ttemplate.innerHTML = renderedText = renderer.render(\n\t\t\t(tokens = renderer.tokenize((normalizedText = renderer.normalize(sourceText)))),\n\t\t);\n\n\t\t// console.log({sourceText, normalizedText, innerHTML: template.innerHTML});\n\n\t\tfragment = template.content.cloneNode(true);\n\t\tfragment.fragment = fragment;\n\t\tfragment.sourceText = sourceText;\n\t\tfragment.normalizedText = normalizedText;\n\t\tfragment.tokens = tokens;\n\t\tfragment.renderedText = renderedText;\n\n\t\treturn fragment;\n\t};\n\n\t/** @param {DocumentFragment} fragment @param {Record<string, boolean>} [flags] */\n\tconst normalizeRenderedFragment = (fragment, flags) => {\n\t\tflags = {\n\t\t\tDOM_MUTATIONS: fragment.markoutContentFlags.DOM_MUTATIONS = defaults.DOM_MUTATIONS,\n\t\t\tBREAK_NORMALIZATION: fragment.markoutContentFlags.BREAK_NORMALIZATION = defaults.BREAK_NORMALIZATION,\n\t\t\tHEADING_NORMALIZATION: fragment.markoutContentFlags.HEADING_NORMALIZATION = defaults.HEADING_NORMALIZATION,\n\t\t\tPARAGRAPH_NORMALIZATION: fragment.markoutContentFlags.PARAGRAPH_NORMALIZATION = defaults.PARAGRAPH_NORMALIZATION,\n\t\t\tCHECKLIST_NORMALIZATION: fragment.markoutContentFlags.CHECKLIST_NORMALIZATION = defaults.CHECKLIST_NORMALIZATION,\n\t\t\tBLOCKQUOTE_NORMALIZATION: fragment.markoutContentFlags\n\t\t\t\t.BLOCKQUOTE_NORMALIZATION = defaults.BLOCKQUOTE_NORMALIZATION,\n\t\t\tTOKEN_FLATTENING: fragment.markoutContentFlags.TOKEN_FLATTENING = defaults.TOKEN_FLATTENING,\n\t\t\tDECLARATIVE_STYLING: fragment.markoutContentFlags.DECLARATIVE_STYLING = defaults.DECLARATIVE_STYLING,\n\t\t\tSOURCE_TEXT_RENDERING: fragment.markoutContentFlags.SOURCE_TEXT_RENDERING = defaults.SOURCE_TEXT_RENDERING,\n\t\t\tASSET_REMAPPING: fragment.markoutContentFlags.ASSET_REMAPPING = defaults.ASSET_REMAPPING,\n\t\t\tASSET_INITIALIZATION: fragment.markoutContentFlags.ASSET_INITIALIZATION = defaults.ASSET_INITIALIZATION,\n\t\t} = {\n\t\t\t...defaults.flags,\n\t\t\t...(fragment.markoutContentFlags || (fragment.markoutContentFlags = {})),\n\t\t\t...flags,\n\t\t};\n\n\t\tflags.DOM_MUTATIONS !== false &&\n\t\t\t((flags.BREAK_NORMALIZATION === true || flags.DOM_MUTATIONS === true) && normalizeBreaksInFragment(fragment),\n\t\t\t(flags.HEADING_NORMALIZATION === true || flags.DOM_MUTATIONS === true) && normalizeHeadingsInFragment(fragment),\n\t\t\t(flags.PARAGRAPH_NORMALIZATION === true || flags.DOM_MUTATIONS === true) &&\n\t\t\t\tnormalizeParagraphsInFragment(fragment),\n\t\t\t(flags.BLOCKQUOTE_NORMALIZATION === true || flags.DOM_MUTATIONS === true) &&\n\t\t\t\tnormalizeBlockquotesInFragment(fragment),\n\t\t\t(flags.CHECKLIST_NORMALIZATION === true || flags.DOM_MUTATIONS === true) &&\n\t\t\t\tnormalizeChecklistsInFragment(fragment),\n\t\t\t(flags.DECLARATIVE_STYLING === true || flags.DOM_MUTATIONS === true) &&\n\t\t\t\tapplyDeclarativeStylingInFragment(fragment));\n\n\t\t(flags.TOKEN_FLATTENING === true || (flags.TOKEN_FLATTENING !== false && DOM_MUTATIONS !== false)) &&\n\t\t\tflattenTokensInFragment(fragment);\n\t};\n\n\t/** Populate remappable elements @param {DocumentFragment} fragment */\n\tconst populateAssetsInFragment = fragment => {\n\t\tif (!fragment || fragment.assets) return;\n\t\tfragment.assets = [];\n\n\t\tfor (const link of fragment.querySelectorAll(AssetSelector)) {\n\t\t\tif (link.nodeName === 'SCRIPT') {\n\t\t\t\tif (link.type === 'module') {\n\t\t\t\t\t(fragment.assets.modules || (fragment.assets.modules = [])).push(link);\n\t\t\t\t} else if (!link.type || link.type.trim().toLowerCase() === 'text/javascript') {\n\t\t\t\t\t(fragment.assets.scripts || (fragment.assets.scripts = [])).push(link);\n\t\t\t\t}\n\t\t\t} else if (link.nodeName === 'STYLE') {\n\t\t\t\tif (!link.type || link.type.trim().toLowerCase() === 'text/css') {\n\t\t\t\t\t(fragment.assets.stylesheets || (fragment.assets.stylesheets = [])).push(link);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t(fragment.assets[AssetTypeMap[link.nodeName]] || (fragment.assets[AssetTypeMap[link.nodeName]] = [])).push(\n\t\t\t\t\tlink,\n\t\t\t\t);\n\t\t\t}\n\t\t\tfragment.assets.push(link);\n\t\t}\n\n\t\treturn fragment;\n\t};\n\n\t/** @param {DocumentFragment} fragment */\n\tconst normalizeBreaksInFragment = fragment => {\n\t\tfor (const br of fragment.querySelectorAll('br')) {\n\t\t\tconst {previousSibling, nextSibling, parentElement} = br;\n\t\t\t(!previousSibling ||\n\t\t\t\tpreviousSibling.nodeName !== 'SPAN' ||\n\t\t\t\t!nextSibling ||\n\t\t\t\tnextSibling.nodeName !== 'SPAN' ||\n\t\t\t\t(parentElement && !/^(?:CODE|PRE|LI)$/.test(parentElement.nodeName))) &&\n\t\t\t\tbr.remove();\n\t\t}\n\t};\n\n\t/** @param {DocumentFragment} fragment */\n\tconst normalizeHeadingsInFragment = fragment => {\n\t\tconst {MarkdownIdentity: Identity, MarkdownIdentityPrefixer: Prefixer, MarkdownIdentityJoiner: Joiner} = entities;\n\t\tconst {headings = (fragment.headings = {}), TEXT_NODE} = fragment;\n\n\t\tfor (const subheading of fragment.querySelectorAll(`h1+h2, h2+h3, h3+h4, h4+h5, h5+h6`)) {\n\t\t\tconst previousElementSibling = subheading.previousElementSibling;\n\t\t\tconst previousSibling = subheading.previousSibling;\n\t\t\tif (!previousElementSibling || previousSibling !== previousElementSibling) continue;\n\t\t\t// console.log({subheading, previousElementSibling, previousSibling});\n\t\t\tif (previousElementSibling && previousElementSibling.nodeName === 'HGROUP') {\n\t\t\t\tpreviousElementSibling.appendChild(subheading);\n\t\t\t} else if (previousElementSibling) {\n\t\t\t\tconst hgroup = document.createElement('hgroup');\n\t\t\t\tpreviousElementSibling.before(hgroup);\n\t\t\t\thgroup.appendChild(previousElementSibling);\n\t\t\t\thgroup.appendChild(subheading);\n\t\t\t}\n\t\t}\n\n\t\tconst HeadingNumber = /^[1-9]\\d*\\.$|/;\n\n\t\tfor (const heading of fragment.querySelectorAll(\n\t\t\t`h1:not([id]):not(:empty),h2:not([id]):not(:empty),h3:not([id]):not(:empty),h4:not([id]):not(:empty),h5:not([id]):not(:empty),h6:not([id]):not(:empty)`,\n\t\t)) {\n\t\t\tconst level = parseFloat(heading.nodeName[1]);\n\t\t\tconst textSpan = heading.querySelector('span[token-type]');\n\t\t\tconst textNode =\n\t\t\t\t(textSpan && textSpan.firstChild && textSpan.firstChild.nodeType === TEXT_NODE && textSpan.firstChild) ||\n\t\t\t\tundefined;\n\n\t\t\tconst number = textNode && heading.matches('hgroup > *') && parseFloat(HeadingNumber.exec(textSpan.textContent));\n\n\t\t\t// Assuming all hgroup headings are either intentional or\n\t\t\t//   implied from markout notation, we want to pull out\n\t\t\t//   numbering into a data attribute\n\t\t\tnumber > 0 && ((heading.dataset.headingNumber = number), textNode.remove());\n\n\t\t\t// We're limit anchoring from H1 thru H3\n\t\t\t// if (parseFloat(heading.nodeName[1]) > 3) continue;\n\n\t\t\tconst [, identity] = Identity.exec(heading.textContent) || '';\n\t\t\tif (!identity) continue;\n\t\t\tconst anchor = document.createElement('a');\n\t\t\tanchor.id = identity\n\t\t\t\t.replace(Prefixer, '')\n\t\t\t\t.replace(Joiner, '-')\n\t\t\t\t.toLowerCase();\n\t\t\tanchor.append(...heading.childNodes);\n\t\t\t// anchor.tabIndex = -1;\n\t\t\tanchor.heading = heading.anchor = {anchor, identity, heading, level, number};\n\t\t\theading.appendChild(anchor);\n\n\t\t\t// Unique mappings are prioritized by heading level\n\t\t\t(anchor.id in headings && headings[anchor.id].level > level) || (headings[anchor.id] = heading.anchor);\n\t\t}\n\t};\n\n\t/** @param {DocumentFragment} fragment */\n\tconst normalizeBlockquotesInFragment = fragment => {\n\t\t/** @type {HTMLQuoteElement} */\n\t\tlet previousBlockquote, nextBlockquote;\n\t\t/** @type {Node | Element} */\n\t\tlet node, previousNode;\n\t\tconst {COMMENT_NODE, TEXT_NODE, ELEMENT_NODE} = fragment;\n\t\t/** @type {IterableIterator<HTMLQuoteElement>} */\n\t\tconst matchedBlockquotes = fragment.querySelectorAll(\n\t\t\t// 'blockquote[blockquote-level]+:not(blockquote)[blockquote-level]')\n\t\t\t':not(blockquote)[blockquote-level]+blockquote[blockquote-level]',\n\t\t);\n\n\t\t// return;\n\t\tfor (const lastBlockquote of matchedBlockquotes) {\n\t\t\tnextBlockquote = lastBlockquote;\n\n\t\t\tpreviousBlockquote, (previousNode = undefined);\n\n\t\t\tlastBlockquote.blockquoteLevel = parseFloat(lastBlockquote.getAttribute('blockquote-level'));\n\n\t\t\tnode = lastBlockquote.previousSibling;\n\n\t\t\tif (\n\t\t\t\t!(lastBlockquote.blockquoteLevel > 0) ||\n\t\t\t\t!(\n\t\t\t\t\tlastBlockquote.previousElementSibling === node ||\n\t\t\t\t\tnode.nodeType === COMMENT_NODE ||\n\t\t\t\t\tnode.textContent.trim() === ''\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\tnormalizeBlockquotesInFragment.log({node, lastBlockquote, nextBlockquote, previousBlockquote});\n\t\t\t\t// debugger;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\twhile (node != null && (node.nodeName !== 'BLOCKQUOTE' || !(previousBlockquote = node))) {\n\t\t\t\tnode.blockquoteLevel =\n\t\t\t\t\tnode.nodeType === ELEMENT_NODE\n\t\t\t\t\t\t? parseFloat(node.getAttribute('blockquote-level'))\n\t\t\t\t\t\t: nextBlockquote.blockquoteLevel;\n\t\t\t\tpreviousNode = node.previousSibling;\n\t\t\t\tif (node.blockquoteLevel === nextBlockquote.blockquoteLevel) {\n\t\t\t\t\t// debugger;\n\t\t\t\t} else if (node.blockquoteLevel > nextBlockquote.blockquoteLevel) {\n\t\t\t\t\tpreviousBlockquote = nextBlockquote;\n\t\t\t\t\tnextBlockquote = document.createElement('blockquote');\n\t\t\t\t\tnextBlockquote.setAttribute('blockquote-level', (nextBlockquote.blockquoteLevel = node.blockquoteLevel));\n\t\t\t\t\t// debugger;\n\t\t\t\t\tpreviousBlockquote.prepend(nextBlockquote);\n\t\t\t\t} else if (node.blockquoteLevel < nextBlockquote.blockquoteLevel) {\n\t\t\t\t\tif (node.blockquoteLevel < lastBlockquote.blockquoteLevel) {\n\t\t\t\t\t\t// TODO: Is it safer to coerce or superseede?!\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\tnode.blockquoteLevel = lastBlockquote.blockquoteLevel;\n\t\t\t\t\t}\n\t\t\t\t\twhile (\n\t\t\t\t\t\tnextBlockquote.blockquoteLevel >= lastBlockquote.blockquoteLevel &&\n\t\t\t\t\t\tnode.blockquoteLevel <\n\t\t\t\t\t\t\tnextBlockquote.blockquoteLevel(\n\t\t\t\t\t\t\t\tnextBlockquote.parentElement.blockquoteLevel < nextBlockquote.blockquoteLevel,\n\t\t\t\t\t\t\t)\n\t\t\t\t\t) {\n\t\t\t\t\t\tnextBlockquote = nextBlockquote.parentElement;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tnextBlockquote.prepend(node);\n\t\t\t\tnode = previousNode;\n\t\t\t}\n\n\t\t\tif (lastBlockquote.previousSibling === previousNode && previousBlockquote === previousNode) {\n\t\t\t\tif (\n\t\t\t\t\t('blockquoteLevel' in previousBlockquote\n\t\t\t\t\t\t? previousBlockquote.blockquoteLevel\n\t\t\t\t\t\t: (previousBlockquote.blockquoteLevel = parseFloat(previousBlockquote.getAttribute('blockquote-level')))) >\n\t\t\t\t\t0\n\t\t\t\t) {\n\t\t\t\t\tif (previousBlockquote.blockquoteLevel < lastBlockquote.blockquoteLevel) {\n\t\t\t\t\t\t// TODO: Is it safer to coerce or superseede?!\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (previousBlockquote.blockquoteLevel === lastBlockquote.blockquoteLevel) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tpreviousBlockquote.childElementCount === 1 &&\n\t\t\t\t\t\t\tpreviousBlockquote.firstElementChild.nodeName === 'DETAILS'\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tpreviousBlockquote.firstElementChild.append(...lastBlockquote.childNodes);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpreviousBlockquote.append(...lastBlockquote.childNodes);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlastBlockquote.remove();\n\t\t\t\t\t}\n\t\t\t\t} else if (!previousBlockquote.hasAttribute('blockquote-level')) {\n\t\t\t\t\tpreviousBlockquote.setAttribute(\n\t\t\t\t\t\t'blockquote-level',\n\t\t\t\t\t\t(previousBlockquote.blockquoteLevel = lastBlockquote.blockquoteLevel),\n\t\t\t\t\t);\n\t\t\t\t\t// TODO: Figure out if we can merge!\n\t\t\t\t\t// debugger;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t/** @param {{node: Node | Element, lastBlockquote: HTMLQuoteElement, nextBlockquote?: HTMLQuoteElement,  previousBlockquote?:HTMLQuoteElement} } nodes */\n\tnormalizeBlockquotesInFragment.log = nodes => {\n\t\tconst format = [];\n\t\tconst values = [];\n\t\tfor (const name of ['node', 'lastBlockquote', 'nextBlockquote', 'previousBlockquote']) {\n\t\t\tconst node = nodes[name];\n\t\t\tif (node == null || typeof node !== 'object') continue;\n\t\t\tformat.push('%s [%d] — %O');\n\t\t\tvalues.push(name, node.blockquoteLevel || (node.getAttribute && node.getAttribute('blockquote-level')), node);\n\t\t}\n\t\tformat.length && console.log(format.join('\\n'), ...values);\n\t};\n\n\tconst normalizeChecklistsInFragment = fragment => {\n\t\tfor (const checklist of fragment.querySelectorAll(\n\t\t\t'li[type=checkbox]:not([checked]):not([indeterminate]) li[type=checkbox]:not([checked])',\n\t\t)) {\n\t\t\tlet parentChecklist = checklist;\n\t\t\t// console.log({checklist, parentChecklist});\n\t\t\twhile ((parentChecklist = parentChecklist.parentElement.closest('li[type=checkbox]'))) {\n\t\t\t\tif (parentChecklist.hasAttribute('checked') || parentChecklist.hasAttribute('indeterminate')) break;\n\t\t\t\tparentChecklist.setAttribute('indeterminate', '');\n\t\t\t}\n\t\t}\n\t};\n\n\tconst normalizeParagraphsInFragment = fragment => {\n\t\tfor (const empty of fragment.querySelectorAll('p:empty')) empty.remove();\n\t};\n\n\tconst flattenTokensInFragment = fragment => {\n\t\tfor (const token of fragment.querySelectorAll('span[token-type],tt[token-type]')) {\n\t\t\ttoken.nodeName === 'TT' || token.before(...token.childNodes);\n\t\t\ttoken.remove();\n\t\t}\n\t};\n\n\tconst applyDeclarativeStylingInFragment = fragment => {\n\t\tif (\n\t\t\ttypeof declarativeStyling.apply === 'function' &&\n\t\t\ttypeof declarativeStyling.selector === 'string' &&\n\t\t\tdeclarativeStyling.selector !== ''\n\t\t)\n\t\t\tfor (const element of fragment.querySelectorAll(declarativeStyling.selector)) declarativeStyling.apply(element);\n\t};\n\n\tconst renderSourceTextsInFragment = fragment => {\n\t\tconst promises = [];\n\n\t\tfor (const element of fragment.querySelectorAll(`[${SourceTypeAttribute}]:not(:empty)`))\n\t\t\tpromises.push(\n\t\t\t\trenderSourceText({\n\t\t\t\t\telement,\n\t\t\t\t\tsourceType: element.getAttribute(MarkupModeAttribute) || element.getAttribute(SourceTypeAttribute),\n\t\t\t\t\tsourceText: element.textContent,\n\t\t\t\t}),\n\t\t\t);\n\n\t\treturn promises.length ? Promise.all(promises) : Promise.resolve();\n\t};\n\n\t/**\n\t * @param {Partial<{element: HTMLElement, sourceType: string, sourceText: String}>} options\n\t * @returns {Promise<HTMLElement>}\n\t */\n\tconst renderSourceText = async options => {\n\t\tlet element, fragment, sourceType, sourceText, state;\n\n\t\tif (\n\t\t\t!options ||\n\t\t\ttypeof options !== 'object' ||\n\t\t\t(({element, sourceType, sourceText, ...options} = options),\n\t\t\t!(element\n\t\t\t\t? !element.hasAttribute(MarkupSyntaxAttribute) &&\n\t\t\t\t  (sourceType ||\n\t\t\t\t\t\t(sourceType = element.getAttribute(MarkupModeAttribute) || element.getAttribute(SourceTypeAttribute)),\n\t\t\t\t  sourceText || (sourceText = element.textContent || ''))\n\t\t\t\t: sourceText))\n\t\t)\n\t\t\treturn void console.warn('Aborted: renderSourceText(%o => %o)', arguments[0], {element, sourceType, sourceText});\n\n\t\telement != null\n\t\t\t? element.removeAttribute(SourceTypeAttribute)\n\t\t\t: ((element = document.createElement('pre')).className = 'markup code');\n\n\t\tstate = element['(markup)'] = {element, sourceText, sourceType, fragment: document.createDocumentFragment()};\n\n\t\t// TODO: Implement proper out-of-band handling for js versus es modes\n\t\tif (/^(js|javascript|es|ecmascript)$/i.test(sourceType)) {\n\t\t\t(state.parsingGoal = element.matches('[script=module], [module]')\n\t\t\t\t? 'module'\n\t\t\t\t: element.matches('[script]')\n\t\t\t\t? 'script'\n\t\t\t\t: 'code') === 'module' && (state.sourceType = sourceType = 'es');\n\t\t}\n\n\t\telement.setAttribute(MarkupSyntaxAttribute, state.sourceType);\n\t\telement.textContent = '';\n\t\telement.sourceText = sourceText;\n\t\t// await markup.render(sourceText, {sourceType, fragment});\n\t\tawait markup.render(sourceText, state);\n\t\telement.appendChild(state.fragment);\n\n\t\treturn element;\n\t};\n\n\treturn {\n\t\tdefaults,\n\t\tcreateRenderedFragment,\n\t\tnormalizeRenderedFragment,\n\t\tpopulateAssetsInFragment,\n\t\tnormalizeBreaksInFragment,\n\t\tnormalizeHeadingsInFragment,\n\t\tnormalizeChecklistsInFragment,\n\t\tnormalizeParagraphsInFragment,\n\t\tflattenTokensInFragment,\n\t\tapplyDeclarativeStylingInFragment,\n\t\trenderSourceTextsInFragment,\n\t};\n})();\n\nexport const SourceTypeAttribute = 'source-type';\nexport const MarkupModeAttribute = 'markup-mode';\nexport const MarkupSyntaxAttribute = 'markup-syntax';\n\nexport const AssetTypeMap = Enum({\n\tIMG: 'images',\n\tVIDEO: 'videos',\n\tSOURCE: 'sources',\n});\n\nexport const AssetSelector = ['script', 'style', ...Object.keys(AssetTypeMap)]\n\t.map(tag => `${tag.toUpperCase()}[src]:not([slot])`)\n\t.join(',');\n","﻿import {MarkoutNormalizer} from './normalizer.js';\nimport {SourceTypeAttribute} from './content.js';\n\n/** @type {any} */\nconst {\n\t// Attempts to overcome **__**\n\t'markout-render-span-restacking': SPAN_RESTACKING = true,\n\t'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n\t// Patched regression from changing markdown.FRAGMENTS\n\t//   to /[^\\\\\\n\\s\\[\\]\\(\\)\\<\\>&`\"*~_]+?/ which has been reversed\n\t'markout-render-patch-stray-brace': STRAY_BRACE = false,\n} = import.meta;\n\nimport {tokenize as tokenizeMarkup, encodeEntities, encodeEntity} from './markup.js';\n\nexport const normalize = sourceText => {\n\tconst {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n\treturn normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n\tconst {\n\t\tlookups = (render.lookups = createLookups()),\n\t\trenderer = (render.renderer = new MarkoutRenderer({lookups})),\n\t} = render;\n\treturn renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => tokenizeMarkup(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const encodeEscapedEntities = ((Escapes, replace) => text => text.replace(Escapes, replace))(\n\t/\\\\([*^~`_])(\\1|)/g,\n\t(m, e, e2) => (e2 ? encodeEntity(e).repeat(2) : encodeEntity(e)),\n);\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\n\nclass MarkoutRenderingContext {\n\tconstructor(renderer) {\n\t\t({lookups: this.lookups} = this.renderer = renderer);\n\n\t\t[\n\t\t\tthis.passthru,\n\t\t\tthis.block,\n\t\t\tthis.fenced,\n\t\t\tthis.header,\n\t\t\tthis.indent,\n\t\t\tthis.newlines,\n\t\t\tthis.comment,\n\t\t] = this.renderedText = '';\n\n\t\tSPAN_RESTACKING && createSpanStack(this);\n\t}\n}\n\nclass MarkoutRenderer {\n\tconstructor({lookups = createLookups()} = {}) {\n\t\tthis.lookups = lookups;\n\t}\n\n\trenderBlockTokens(token, context) {\n\t\tlet before, tag, body, previous, inset;\n\t\tprevious = token;\n\t\tinset = '';\n\t\tconst {classes, block} = context;\n\t\twhile ((previous = previous.previous)) {\n\t\t\tif (previous.lineBreaks) break;\n\t\t\tinset = `${previous.text}${inset}`;\n\t\t}\n\t\tif (!/[^> \\t]/.test(inset)) {\n\t\t\tbefore = `<${block}${this.renderClasses(classes)}>`;\n\t\t\ttag = 'tt';\n\t\t\tclasses.push('opener', `${token.type}-token`);\n\t\t} else {\n\t\t\tbody = token.text;\n\t\t}\n\t\treturn {before, tag, body};\n\t}\n\n\t// renderCommentToken(token, context) {}\n\n\trenderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n\t\tlet text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta;\n\t\tcontext.tokens = tokens;\n\n\t\tconst {lookups} = context;\n\t\tconst {renderClasses} = this;\n\n\t\t// context.openTags = 0;\n\t\tcontext.openTags = [];\n\t\tcontext.closeTags = [];\n\n\t\tfor (const token of context.tokens) {\n\t\t\tif (!token || !(body = token.text)) continue;\n\t\t\t({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\n\t\t\t// Sub type 'text' to 'whitespace'\n\t\t\t// TODO: Sub type 'text' to 'break' (ie !!lineBreaks)\n\t\t\ttype !== 'text' || lineBreaks || text.trim() || (type = 'whitespace');\n\n\t\t\ttag = classes = before = after = meta = undefined;\n\n\t\t\tif (context.passthru || context.fenced) {\n\t\t\t\tif (context.fenced) {\n\t\t\t\t\tif (context.fenced === context.passthru) {\n\t\t\t\t\t\tcontext.header += text;\n\t\t\t\t\t\tlineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n\t\t\t\t\t} else if (punctuator === 'closer' && text === '```') {\n\t\t\t\t\t\tlet sourceType, sourceAttributes;\n\t\t\t\t\t\tif (context.header) {\n\t\t\t\t\t\t\t[, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n\t\t\t\t\t\t\timport.meta['debug:fenced-block-header-rendering'] &&\n\t\t\t\t\t\t\t\tconsole.log('fenced-block-header', {\n\t\t\t\t\t\t\t\t\tfenced: context.fenced,\n\t\t\t\t\t\t\t\t\theader: context.header,\n\t\t\t\t\t\t\t\t\tpassthru: context.passthru,\n\t\t\t\t\t\t\t\t\tsourceType,\n\t\t\t\t\t\t\t\t\tsourceAttributes,\n\t\t\t\t\t\t\t\t\tcontext,\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tsourceAttributes = `${sourceAttributes ? `${sourceAttributes} ` : ''}data-markout-fence=\"${\n\t\t\t\t\t\t\t\tcontext.fenced\n\t\t\t\t\t\t\t}\" data-markout-header=\"${encodeEntities(context.header)}\" tab-index=-1`;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tsourceAttributes = `data-markout-fence=\"${context.fenced}\"`;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// passthru rendered code\n\t\t\t\t\t\tcontext.renderedText += `<${context.block} class=\"markup code\" ${SourceTypeAttribute}=\"${sourceType ||\n\t\t\t\t\t\t\t'markup'}\"${(sourceAttributes && ` ${sourceAttributes}`) || ''}>${encodeEntities(context.passthru)}</${\n\t\t\t\t\t\t\tcontext.block\n\t\t\t\t\t\t}>`;\n\t\t\t\t\t\tcontext.header = context.indent = context.fenced = context.passthru = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// passthru code\n\t\t\t\t\t\tcontext.passthru += body.replace(context.indent, '');\n\t\t\t\t\t}\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\t// Construct open and close tags\n\t\t\t\t\tif (context.currentTag) {\n\t\t\t\t\t\t// if (\n\t\t\t\t\t\t// \tpunctuator === 'closer' &&\n\t\t\t\t\t\t// \t(body === '>' || body === '/>') &&\n\t\t\t\t\t\t// \tcontext.currentTag !== undefined &&\n\t\t\t\t\t\t// \tcontext.currentTag.opener !== undefined\n\t\t\t\t\t\t// ) {\n\t\t\t\t\t\t// \tdebugTagOpenerPassthru(token, context, {\n\t\t\t\t\t\t// \t\tscope: {text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta},\n\t\t\t\t\t\t// \t});\n\t\t\t\t\t\t// }\n\n\t\t\t\t\t\t// Construct body\n\t\t\t\t\t\tcontext.passthru += body;\n\n\t\t\t\t\t\tif (context.currentTag.nodeName === '') {\n\t\t\t\t\t\t\tif (type === 'text' || text === '-' || text === ':') {\n\t\t\t\t\t\t\t\tcontext.currentTag.construct += text;\n\t\t\t\t\t\t\t} else if (context.currentTag.construct === '') {\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName = ' ';\n\t\t\t\t\t\t\t\tcontext.currentTag.construct = text;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName = context.currentTag.construct;\n\t\t\t\t\t\t\t\t// Substitute element name from lookup\n\t\t\t\t\t\t\t\tcontext.currentTag.nodeName in lookups.elements &&\n\t\t\t\t\t\t\t\t\t(context.passthru = context.passthru.replace(\n\t\t\t\t\t\t\t\t\t\tcontext.currentTag.nodeName,\n\t\t\t\t\t\t\t\t\t\t(context.currentTag.nodeName = lookups.elements[context.currentTag.nodeName]),\n\t\t\t\t\t\t\t\t\t));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tcontext.currentTag.construct = text;\n\t\t\t\t\t\t\t// console.log(text, {...context});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// console.log(text, {...context});\n\t\t\t\t\t\t// Construct body\n\t\t\t\t\t\tcontext.passthru += body;\n\t\t\t\t\t}\n\t\t\t\t\tif (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n\t\t\t\t\t\t// passthru body rendered\n\t\t\t\t\t\tcontext.renderedText += context.passthru;\n\t\t\t\t\t\tcontext.passthru = '';\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\ttag = 'span';\n\t\t\tclasses = context.classes = hint.split(/\\s+/);\n\t\t\tbefore, after;\n\n\t\t\tif (hint.includes('-in-markdown')) {\n\t\t\t\tcontext.renderedText += token.text;\n\t\t\t\tcontinue;\n\t\t\t} else if (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n\t\t\t\ttype !== 'text' || lineBreaks || (text in lookups.entities && (body = lookups.entities[text]));\n\n\t\t\t\tif (punctuator) {\n\t\t\t\t\tcontext.passthru =\n\t\t\t\t\t\t(((context.comment = punctuator === 'comment' && text) || lookups.tags.has(text)) && text) || '';\n\t\t\t\t\t// Opener\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif (text === '<') {\n\t\t\t\t\t\t\tcontext.openTags.push(\n\t\t\t\t\t\t\t\t(context.currentTag = {opener: token, delimiter: text, construct: '', nodeName: ''}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else if (text === '</') {\n\t\t\t\t\t\t\tcontext.closeTags.push(\n\t\t\t\t\t\t\t\t(context.currentTag = {closer: token, delimiter: text, construct: '', nodeName: ''}),\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tcontext.currentTag = undefined;\n\t\t\t\t\t}\n\t\t\t\t\tif (context.passthru) continue;\n\n\t\t\t\t\tif (punctuator === 'opener') {\n\t\t\t\t\t\tif ((context.fenced = text === '```' && text)) {\n\t\t\t\t\t\t\tcontext.block = 'pre';\n\t\t\t\t\t\t\tcontext.passthru = context.fenced;\n\t\t\t\t\t\t\t[context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n\t\t\t\t\t\t\tcontext.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n\t\t\t\t\t\t\tcontext.header = '';\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t} else if (text in lookups.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tbefore || ((before = `<${lookups.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n\t\t\t\t\t\t} else if (text === '<!' || text === '<?') {\n\t\t\t\t\t\t\tlet next;\n\t\t\t\t\t\t\tconst closer = text === '<!' ? /-->$/ : /\\?>$/;\n\t\t\t\t\t\t\twhile (\n\t\t\t\t\t\t\t\t(next = context.tokens.next().value) &&\n\t\t\t\t\t\t\t\t(body += next.text) &&\n\t\t\t\t\t\t\t\t(next.punctuator !== 'closer' && !closer.test(next.text))\n\t\t\t\t\t\t\t\t// (next.punctuator === 'opener' && /^</.test(next.text)) ||\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tcontext.passthru = body;\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (punctuator === 'closer') {\n\t\t\t\t\t\tif (text === '```') {\n\t\t\t\t\t\t\tcontext.block = lookups.blocks['```'] || 'pre';\n\t\t\t\t\t\t} else if (text in lookups.spans) {\n\t\t\t\t\t\t\tif (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n\t\t\t\t\t\t\tafter || ((after = `</${lookups.spans[text]}>`), classes.push('closer'));\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (SPAN_RESTACKING && text in lookups.spans) {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t(context.stack[text] >= 0\n\t\t\t\t\t\t\t\t? (after = context.stack.close(text, body, classes))\n\t\t\t\t\t\t\t\t: (before = context.stack.open(text, body, classes))) === undefined\n\t\t\t\t\t\t)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t} else if (!context.block && (context.block = lookups.blocks[text])) {\n\t\t\t\t\t\t({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n\t\t\t\t\t}\n\t\t\t\t\t(before || after) && (tag = 'tt');\n\t\t\t\t\tclasses.push(`${punctuator}-token`);\n\t\t\t\t} else {\n\t\t\t\t\tif (lineBreaks) {\n\t\t\t\t\t\t(!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n\t\t\t\t\t} else if (type === 'sequence') {\n\t\t\t\t\t\tif (text[0] === '`') {\n\t\t\t\t\t\t\ttag = 'code';\n\t\t\t\t\t\t\tbody = text.replace(/(``?)(.*)\\1/, '$2');\n\t\t\t\t\t\t\tlet fence = '`'.repeat((text.length - body.length) / 2);\n\t\t\t\t\t\t\tbody = encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n\t\t\t\t\t\t\tfence in lookups.entities && (fence = lookups.entities[fence]);\n\t\t\t\t\t\t\tclasses.push('fenced-code');\n\t\t\t\t\t\t\tclasses.push('code');\n\t\t\t\t\t\t} else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n\t\t\t\t\t\t\ttag = 'hr';\n\t\t\t\t\t\t} else if (!context.block && (context.block = lookups.blocks[text])) {\n\t\t\t\t\t\t\t({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// sequence\n\t\t\t\t\t\t\tbody = text;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (type === 'whitespace') {\n\t\t\t\t\t\t// if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n\t\t\t\t\t\ttag = '';\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// debug(`${type}:token`)(type, token);\n\t\t\t\t\t\tclasses.push(`${type}-token`);\n\t\t\t\t\t\tbody = text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tmeta =\n\t\t\t\ttag &&\n\t\t\t\t[\n\t\t\t\t\tpunctuator && `punctuator=\"${escape(punctuator)}\"`,\n\t\t\t\t\ttype && `token-type=\"${escape(type)}\"`,\n\t\t\t\t\thint && `token-hint=\"${escape(hint)}\"`,\n\t\t\t\t\tlineBreaks && `line-breaks=\"${escape(lineBreaks)}\"`,\n\t\t\t\t].join(' ');\n\n\t\t\ttag === 'span' && (body = encodeEscapedEntities(body));\n\n\t\t\tbefore && (context.renderedText += before);\n\t\t\ttag === 'br' || (context.newlines = 0)\n\t\t\t\t? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.newlines++ && (context.renderedText += '\\n')) ||\n\t\t\t\t  (context.renderedText += '<br/>')\n\t\t\t\t: tag === 'hr'\n\t\t\t\t? (context.renderedText += '<hr/>')\n\t\t\t\t: body &&\n\t\t\t\t  (tag\n\t\t\t\t\t\t? (context.renderedText += `<${tag} ${meta}${renderClasses(classes)}>${body}</${tag}>`)\n\t\t\t\t\t\t: (context.renderedText += body));\n\t\t\tafter && (context.renderedText += after);\n\t\t}\n\n\t\tif (STRAY_BRACE && context.renderedText.endsWith(`>}</span>`)) {\n\t\t\tcontext.renderedText = context.renderedText.slice(0, context.renderedText.lastIndexOf('<span'));\n\t\t}\n\n\t\treturn context.renderedText;\n\t}\n\n\trenderClasses(classes) {\n\t\treturn ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n\t}\n}\n\nconst debugTagOpenerPassthru = (token, context, details) => {\n\tconsole.log(\n\t\t'\"%c%s%c%s%c%s%c\" — %o',\n\t\t'color: LightSlateGrey;',\n\t\tcontext.renderedText.length > 20 ? `…${context.renderedText.slice(-20)}` : context.renderedText,\n\t\t'color: DarkSlateBlue;',\n\t\tcontext.passthru,\n\t\t'color: DarkSlateBlue; font-weight: 400;',\n\t\t(details && details.scope && details.scope.body) || token.text,\n\t\t'',\n\t\t{\n\t\t\ttoken: {...token},\n\t\t\tcontext: {...context},\n\t\t\t...details,\n\t\t},\n\t);\n};\n\nclass MarkoutOutput extends String {\n\tconstructor(context) {\n\t\tsuper(context.renderedText).context = context;\n\t}\n}\n\n/// Features\n\nconst createLookups = (\n\trepeats = {['*']: 2, ['`']: 3, ['#']: 6},\n\tentities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n\taliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n\tblocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n\tspans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n\ttags = ['<', '>', '<!--', '-->', '<?', '?>', '</', '/>'],\n\telements = {'markout-details': 'details'},\n) => {\n\tconst {keys} = Object;\n\tconst symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n\tfor (const symbol of symbols) {\n\t\tlet n = repeats[symbol] || 1;\n\t\tconst entity = entities[symbol];\n\t\tlet block = blocks[symbol];\n\t\tlet span = spans[symbol];\n\t\tconst tag = block || span;\n\t\tconst map = (block && blocks) || (span && spans);\n\t\tfor (let i = 1; n--; i++) {\n\t\t\tconst k = symbol.repeat(i);\n\t\t\tconst b = blocks[k];\n\t\t\tconst s = spans[k];\n\t\t\tconst m = (b && blocks) || (s && spans) || map;\n\t\t\tconst t = (b || s || m[k] || tag).replace('*', i);\n\t\t\tconst e = entities[k] || (entity && entity.repeat(i));\n\t\t\tm[k] = t;\n\t\t\te && (entities[k] = e);\n\t\t\tif (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n\t\t}\n\t}\n\tfor (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n\tconst escapes = {};\n\n\tfor (const symbol of '* ^ ~ `'.split(' ')) {\n\t\tescapes[`\\\\${symbol}`] = `&#x${symbol.charAt(0).toString(16)};`;\n\t}\n\n\treturn {entities, blocks, spans, tags: new Set(tags), elements};\n};\n\nconst createSpanStack = context => {\n\tconst {\n\t\tlookups: {spans},\n\t\trenderer,\n\t} = context;\n\tconst stack = [];\n\tstack.open = (text, body, classes) => {\n\t\tconst {[text]: lastIndex, length: index} = stack;\n\t\tif (lastIndex < 0) return (stack[text] = undefined); // ie continue\n\t\tif (lastIndex >= 0) return stack.close(text, body, classes);\n\t\tconst span = spans[text];\n\t\tconst before = `<${span}${renderer.renderClasses(classes)}>`;\n\t\tstack[text] = index;\n\t\tstack.push({text, body, span, index});\n\t\treturn classes.push('opener'), before;\n\t};\n\tstack.close = (text, body, classes) => {\n\t\tconst span = spans[text];\n\t\tconst {[text]: index, length} = stack;\n\t\tif (index === length - 1) {\n\t\t\tindex >= 0 && (stack.pop(), (stack[text] = undefined));\n\t\t\tconst after = `</${span}>`;\n\t\t\treturn classes.push('closer'), after;\n\t\t} else if (index >= 0) {\n\t\t\tclasses.push('closer', `closer-token`);\n\t\t\tconst details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n\t\t\tconst closing = stack.splice(index, length).reverse();\n\t\t\tfor (const {span, text, body} of closing) {\n\t\t\t\tcontext.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n\t\t\t\tstack[text] < index || (stack[text] = -1);\n\t\t\t}\n\t\t} else {\n\t\t\tcontext.renderedText += text;\n\t\t}\n\t};\n\tcontext.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n\t// import.meta.url.includes('/markout/lib/') ||\n\ttypeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n\t'block-normalization',\n\t'paragraph-normalization',\n\t'anchor-normalization',\n\t'break-normalization',\n\t'fenced-block-header-rendering',\n]);\n"],"names":["escape","UNKNOWN","sequence","ALIASES","entities","matchAll","renderer.render","renderer.tokenize","renderer.normalize","markup.render","tokenizeMarkup"],"mappings":"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"}