{"version":3,"file":"renderer.js","sources":["../../../markup/packages/matcher/lib/state.js","../../../markup/packages/matcher/lib/matcher.js","../../../markup/packages/matcher/lib/helpers.js","../../../markout/lib/experimental/helpers.js","../../../markout/lib/experimental/expressions.js","../../../markout/lib/experimental/composable-list.js","../../../markout/lib/experimental/block-normalizer.js","../../../markup/packages/matcher/lib/segment-matcher.js","../../../markout/lib/markdown/markdown-segmenter.js","../../../markout/lib/helpers.js","../../../markout/lib/experimental/segment-normalizer.js","../../../markout/lib/normalizer.js","../../../markout/lib/content/flags.js","../../../markout/lib/content/content.js","../../../markout/lib/content/markup.js","../../../markout/lib/renderer.js"],"sourcesContent":["﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nconst CurrentIndex = Symbol('CurrentIndex');\nconst CurrentMatch = Symbol('CurrentMatch');\nconst CurrentToken = Symbol('CurrentToken');\nconst CreatedToken = Symbol('CreatedToken');\nconst TotalTokens = Symbol('TotalTokens');\nconst TotalMatches = Symbol('TotalMatches');\nconst Next = Symbol('Next');\nconst Initialize = Symbol('Initialize');\nconst Finalize = Symbol('Finalize');\nconst Tokens = Symbol('Tokens');\n\n/** @template {RegExp} T  @implements {MatcherIterator<T>} */\nexport class MatcherState {\n  /** @param {Partial<MatcherState<T>>} properties */\n  constructor({source, matcher, initialize, finalize, ...properties}) {\n    Object.assign(this, properties);\n\n    this.done = false;\n    /** @type {*} */\n    this.value = undefined;\n\n    /** @type {string} */\n    this.source = String(source);\n    /** @type {T} */\n    this.matcher =\n      matcher &&\n      (matcher instanceof RegExp\n        ? Object.setPrototypeOf(RegExp(matcher.source, matcher.flags || 'g'), matcher)\n        : RegExp(matcher, 'g'));\n\n    /** @type {RegExpExecArray} */\n    this[CurrentMatch] = undefined;\n    this[TotalMatches] = -1;\n    this[Next] = this.getNextMatch;\n    this[Initialize] =\n      typeof initialize === 'function'\n        ? () => {\n            this.initialize();\n            initialize();\n          }\n        : this.initialize;\n    this[Finalize] =\n      typeof finalize === 'function'\n        ? () => {\n            finalize();\n            this.finalize();\n          }\n        : this.finalize;\n  }\n\n  initialize() {\n    Object.defineProperties(this, {\n      source: {value: this.source, writable: false, configurable: true},\n      matcher: {value: this.matcher, writable: false, configurable: true},\n    });\n    this[TotalMatches] = 0;\n  }\n\n  finalize() {\n    Object.freeze(this);\n  }\n\n  [Symbol.iterator]() {\n    return this;\n  }\n\n  next() {\n    if (this.done) return this;\n    if (this[TotalMatches] === -1) this[Initialize]();\n    if ((this.done = (this.value = this[Next]()) == null)) this[Finalize]();\n    else this[TotalMatches]++;\n    return this;\n  }\n\n  getNextMatch() {\n    return !this.done &&\n      this.matcher.lastIndex <\n        ((this[CurrentMatch] = this.matcher.exec(this.source)) != null /* */\n          ? this.matcher.lastIndex + (this[CurrentMatch][0].length === 0 && 1)\n          : this.matcher.lastIndex)\n      ? this[CurrentMatch]\n      : undefined;\n  }\n}\n\n/** @template {RegExp} T  @extends {MatcherState<T>} */\nexport class TokenizerState extends MatcherState {\n  /** @param {Partial<TokenizerState<T>>} properties */\n  constructor(properties) {\n    super(properties)[Next] = this.getNextToken;\n  }\n\n  initialize() {\n    super.initialize();\n    this[TotalTokens] = 0;\n  }\n\n  finalize() {\n    super.finalize();\n  }\n\n  getNextToken() {\n    if (this.done || this.getNextMatch() == null) return;\n\n    this[CurrentToken] = this[CreatedToken];\n    this[CreatedToken] = this.createToken(this[CurrentMatch], this);\n\n    if (this[CreatedToken] !== undefined) {\n      this[CreatedToken].index = ++this[TotalTokens];\n    }\n\n    // Initial design considered holding on to one token\n    //   that used to be set to state.nextToken along with\n    //   the matching state.nextTokenContext.\n    //\n    // TODO: Replace graceful holding with construct stacking.\n    return this[CurrentToken] || this.getNextToken();\n  }\n\n  get [Tokens]() {\n    return Object.defineProperty(this, Tokens, {value: [], writable: false, configurable: true})[Tokens];\n  }\n\n  createToken(match, state) {}\n}\n\nTokenizerState.prototype.previousToken = TokenizerState.prototype.nextToken = /** @type {Token} */ (undefined);\n\nTokenizerState.defaults = {source: undefined, initialize: undefined, finalize: undefined};\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {MatcherState} from './state.js';\n\n/** Matcher for composable matching */\nexport class Matcher extends RegExp {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags);\n    (pattern &&\n      pattern.entities &&\n      Symbol.iterator in pattern.entities &&\n      ((!entities && (entities = pattern.entities)) || entities === pattern.entities)) ||\n      Object.freeze(\n        Object.assign((entities = (entities && Symbol.iterator in entities && [...entities]) || []), {\n          flags,\n          meta: Matcher.metaEntitiesFrom(entities),\n          identities: Matcher.identityEntitiesFrom(entities),\n        }),\n      );\n\n    /** @type {MatcherEntities} */\n    this.entities = entities;\n    this.state = state;\n    this.exec = this.exec;\n    this.capture = this.capture;\n\n    ({DELIMITER: this.DELIMITER = Matcher.DELIMITER, UNKNOWN: this.UNKNOWN = Matcher.UNKNOWN} = new.target);\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    // @ts-ignore\n    if (match === null) return null;\n\n    // @ts-ignore\n    match.matcher = this;\n    match.capture = {};\n\n    //@ts-ignore\n    for (\n      let i = 0, entity;\n      match[++i] === undefined ||\n      void (\n        (entity = this.entities[(match.entity = i - 1)]) == null ||\n        (typeof entity === 'function'\n          ? entity(match[0], i, match, this.state)\n          : (match.capture[(match.identity = entity)] = match[0]))\n      );\n\n    );\n\n    return match;\n  }\n\n  /** @param {string} source */\n  exec(source) {\n    const match = /** @type {MatcherExecArray} */ (super.exec(source));\n    match == null || this.capture(match);\n    return match;\n  }\n\n  /** @param {string} source */\n  matchAll(source) {\n    return /** @type {typeof Matcher} */ (this.constructor).matchAll(source, /** @type {any} */ (this));\n  }\n\n  /** @returns {entity is MatcherMetaEntity} */\n  static isMetaEntity(entity) {\n    return typeof entity === 'string' && entity.endsWith('?');\n  }\n\n  /** @returns {entity is MatcherIdentityEntity} */\n  static isIdentityEntity(entity) {\n    return typeof entity === 'string'\n      ? entity !== '' && entity.trim() === entity && !entity.endsWith('?')\n      : typeof entity === 'symbol';\n  }\n\n  static metaEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherMetaEntity>} */ (new Set([...entities].filter(Matcher.isMetaEntity)));\n  }\n\n  static identityEntitiesFrom(entities) {\n    return /** @type {MatcherEntitySet<MatcherIdentityEntity>} */ (new Set(\n      [...entities].filter(Matcher.isIdentityEntity),\n    ));\n  }\n\n  /**\n   * @param {MatcherPatternFactory} factory\n   * @param {MatcherFlags} [flags]\n   * @param {PropertyDescriptorMap} [properties]\n   */\n  static define(factory, flags, properties) {\n    /** @type {MatcherEntities} */\n    const entities = [];\n    entities.flags = '';\n    const pattern = factory(entity => {\n      if (entity !== null && entity instanceof Matcher) {\n        entities.push(...entity.entities);\n\n        !entity.flags || (entities.flags = entities.flags ? Matcher.flags(entities.flags, entity.flags) : entity.flags);\n\n        return entity.source;\n      } else {\n        entities.push(((entity != null || undefined) && entity) || undefined);\n      }\n    });\n    entities.meta = Matcher.metaEntitiesFrom(entities);\n    entities.identities = Matcher.identityEntitiesFrom(entities);\n    flags = Matcher.flags('g', flags == null ? pattern.flags : flags, entities.flags);\n    const matcher = new ((this && (this.prototype === Matcher.prototype || this.prototype instanceof RegExp) && this) ||\n      Matcher)(pattern, flags, entities);\n\n    properties && Object.defineProperties(matcher, properties);\n\n    return matcher;\n  }\n\n  static flags(...sources) {\n    let flags, iterative, sourceFlags;\n    flags = '';\n    for (const source of sources) {\n      sourceFlags =\n        (!!source &&\n          (typeof source === 'string'\n            ? source\n            : typeof source === 'object' &&\n              typeof source.flags !== 'string' &&\n              typeof source.source === 'string' &&\n              source.flags)) ||\n        undefined;\n      if (!sourceFlags) continue;\n      for (const flag of sourceFlags)\n        (flag === 'g' || flag === 'y' ? iterative || !(iterative = true) : flags.includes(flag)) || (flags += flag);\n    }\n    return flags;\n  }\n\n  static get sequence() {\n    const {raw} = String;\n    const {replace} = Symbol;\n\n    /**\n     * @param {TemplateStringsArray} template\n     * @param  {...any} spans\n     * @returns {string}\n     */\n    const sequence = (template, ...spans) =>\n      sequence.WHITESPACE[replace](raw(template, ...spans.map(sequence.span)), '');\n    // const sequence = (template, ...spans) =>\n    //   sequence.WHITESPACE[replace](sequence.COMMENTS[replace](raw(template, ...spans.map(sequence.span)), ''), '');\n\n    /**\n     * @param {any} value\n     * @returns {string}\n     */\n    sequence.span = value =>\n      (value &&\n        // TODO: Don't coerce to string here?\n        typeof value !== 'symbol' &&\n        `${value}`) ||\n      '';\n\n    sequence.WHITESPACE = /^\\s+|\\s*\\n\\s*|\\s+$/g;\n    // sequence.COMMENTS = /(?:^|\\n)\\s*\\/\\/.*(?=\\n)|\\n\\s*\\/\\/.*(?:\\n\\s*)*$/g;\n\n    Object.defineProperty(Matcher, 'sequence', {value: Object.freeze(sequence), enumerable: true, writable: false});\n    return sequence;\n  }\n\n  static get join() {\n    const {sequence} = this;\n\n    const join = (...values) =>\n      values\n        .map(sequence.span)\n        .filter(Boolean)\n        .join('|');\n\n    Object.defineProperty(Matcher, 'join', {value: Object.freeze(join), enumerable: true, writable: false});\n\n    return join;\n  }\n\n  static get matchAll() {\n    /** @template {RegExp} T @type {(string: MatcherText, matcher: T) => MatcherIterator<T> } */\n    // const matchAll = (string, matcher) => new MatcherState(string, matcher);\n    const matchAll = (() =>\n      // TODO: Find a cleaner way to reference RegExp.prototype[Symbol.matchAll]\n      Function.call.bind(\n        String.prototype.matchAll || // TODO: Uncomment eventually\n          {\n            /**\n             * @this {string}\n             * @param {RegExp | string} pattern\n             */\n            *matchAll() {\n              const matcher =\n                arguments[0] &&\n                (arguments[0] instanceof RegExp\n                  ? Object.setPrototypeOf(RegExp(arguments[0].source, arguments[0].flags || 'g'), arguments[0])\n                  : RegExp(arguments[0], 'g'));\n              const string = String(this);\n\n              if (!(matcher.flags.includes('g') || matcher.flags.includes('y')))\n                return void (yield matcher.exec(string));\n\n              for (\n                let match, lastIndex = -1;\n                lastIndex <\n                ((match = matcher.exec(string))\n                  ? (lastIndex = matcher.lastIndex + (match[0].length === 0))\n                  : lastIndex);\n                yield match, matcher.lastIndex = lastIndex\n              );\n            },\n          }.matchAll,\n      ))();\n\n    Object.defineProperty(Matcher, 'matchAll', {value: Object.freeze(matchAll), enumerable: true, writable: false});\n\n    return matchAll;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {T} U\n   * @template {{}} V\n   * @param {T & V} matcher\n   * @param {U} [instance]\n   * @returns {U & V}\n   */\n  static clone(matcher, instance) {\n    const {\n      constructor: {prototype},\n      source,\n      flags,\n      lastIndex,\n      ...properties\n    } = matcher;\n    const clone = /** @type {U & V} */ (Object.assign(\n      instance ||\n        (prototype && 'source' in prototype && 'flags' in prototype\n          ? RegExp(source, flags || 'g')\n          : RegExp(matcher, 'g')),\n      properties,\n    ));\n    // prototype && Object.setPrototypeOf(clone, prototype);\n    Object.setPrototypeOf(\n      clone,\n      prototype || (this && this !== Matcher && this.prototype instanceof Matcher ? this.prototype : Matcher.prototype),\n    );\n    return clone;\n  }\n\n  /**\n   * @template {Matcher} T\n   * @template {{}} U\n   * @param {T} matcher\n   * @param {TokenizerState<T, U>} [state]\n   * @returns {TokenMatcher<U>}\n   */\n  static create(matcher, state) {\n    /** @type {typeof Matcher} */\n    const Species = !this || this === Matcher || !(this.prototype instanceof Matcher) ? Matcher : this;\n\n    return Object.defineProperty(\n      ((\n        state || (state = Object.create(null))\n      ).matcher = /** @type {typeof Matcher} */ (matcher &&\n      matcher instanceof RegExp &&\n      matcher.constructor &&\n      'function' !== typeof (/** @type {typeof Matcher} */ (matcher.constructor).clone) // prettier-ignore\n        ? matcher.constructor\n        : Species === Matcher || typeof Species.clone !== 'function'\n        ? Matcher\n        : Species\n      ).clone(matcher)),\n      'state',\n      {value: state},\n    );\n  }\n}\n\n// Well-known identities for meaningful debugging which are\n//   Strings but could possible be changed to Symbols\n//\n//   TODO: Revisit Matcher.UNKOWN\n//\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  DELIMITER = (Matcher.DELIMITER = Matcher.prototype.DELIMITER = /** @type {MatcherIdentityString} */ ('DELIMITER?')),\n  /** Identity for unknown captures */\n  UNKNOWN = (Matcher.UNKNOWN = Matcher.prototype.UNKNOWN = /** @type {MatcherIdentityString} */ ('UNKNOWN?')),\n} = Matcher;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\n\nexport const {\n  escape = (Matcher.escape = /** @type {<T>(source: T) => string} */ ((() => {\n    const {replace} = Symbol;\n    return source => /[\\\\^$*+?.()|[\\]{}]/g[replace](source, '\\\\$&');\n  })())),\n  join,\n  sequence,\n  matchAll,\n} = Matcher;\n","﻿//@ts-check\n\nexport const {atoms, range} = (() => {\n\tconst {freeze} = Object;\n\n\t/** @template {string} T @param {...T} strings */\n\tconst atoms = (...strings) => freeze(strings); // .filter(atoms.filter).sort()\n\n\tatoms.filter = string => typeof string === 'string' && string.length;\n\n\t/** @param {string} string @param {string} [delimiter] */\n\tatoms.split = (string, delimiter = '') => freeze(string.split(delimiter));\n\t/**\n\t * Splits a string into case-distinct subsets as applicable.\n\t *\n\t * NOTE: A non-case-senstive string yields the single\n\t *       subset instance for all its cases. A fully cased\n\t *       string yields separate upper and lower case subsets\n\t *       and a single subset for both initial and any cases.\n\t *\n\t * @param {string} string @param {string} [delimiter]\n\t */\n\tatoms.split.cases = (string, delimiter = '') => {\n\t\t/** Ordered array of every unique original cased atom in the original string */\n\t\tconst initialCase = freeze(atoms.union(...atoms.split(string, delimiter)));\n\n\t\tconst lowerCaseString = string.toLowerCase();\n\t\tconst upperCaseString = string.toUpperCase();\n\n\t\tif (lowerCaseString === upperCaseString) return [initialCase, initialCase, initialCase, initialCase];\n\n\t\t/** Ordered array of every unique original and transformed cased atom in the original string */\n\t\tconst everyCase = freeze(\n\t\t\tatoms.union(...atoms.split(`${string}${delimiter}${lowerCaseString}${delimiter}${upperCaseString}`, delimiter)),\n\t\t);\n\n\t\t/** Ordered array of every unique lower cased atom in the original string */\n\t\tconst lowerCase = freeze(atoms.union(...atoms.split(lowerCaseString, delimiter)));\n\n\t\t/** Ordered array of every unique upper cased atom in the original string */\n\t\tconst upperCase = freeze(atoms.union(...atoms.split(upperCaseString, delimiter)));\n\n\t\treturn everyCase.length === initialCase.length\n\t\t\t? [initialCase, lowerCase, upperCase, initialCase]\n\t\t\t: [everyCase, lowerCase, upperCase, initialCase];\n\t};\n\n\t/** @template {string} T @param {...T} atoms @returns T[] */\n\tatoms.union = (...atoms) => [...new Set(atoms)];\n\n\t/** @template {string} T @param {...T} atoms @returns {string} */\n\tconst range = (...atoms) => `[${atoms.map(range.escape).join('')}]`;\n\trange.escape = (atom, index) =>\n\t\tatom === ']' ? '\\\\]' : atom === '\\\\' ? '\\\\\\\\' : atom === '-' && index !== 0 ? '\\\\-' : atom;\n\n\treturn {freeze, atoms, range};\n})();\n\n/** @param {string} inset */\nexport const countInsetQuotes = inset => {\n\t/** @type {number} */\n\tlet quotes, position;\n\tposition = -1;\n\tquotes = 0;\n\twhile (position++ < (position = inset.indexOf('>', position))) quotes++;\n\treturn quotes;\n};\n\nexport const MATCHES = Symbol('matches');\nexport const MATCH = Symbol('match');\n\n\n// /** @param {string} string */\n// const upper = string => string.toUpperCase();\n// /** @param {string} string */\n// const lower = string => string.toLowerCase();\n","﻿//@ts-check\n\nimport {Matcher} from '/markup/packages/matcher/matcher.js';\n\nimport {atoms, range} from './helpers.js';\n\n/** Arrays of isolated characters */\nexport const ranges = {};\n\n/** Strings forms of partial recursive expressions */\nexport const sequences = {};\n\n/** Recursive expressions intended to search for qualified substring */\nexport const matchers = {};\n\n/** Isolated expressions intended to test a qualified string */\nexport const patterns = {};\n\n/** Strings forms of partial isolated expressions */\nexport const partials = {};\n\n{\n  ranges.Brackets = atoms.split('()[]');\n  ranges.Braces = atoms.split('{}');\n\n  Insets: {\n    ranges.Inseter = atoms.split('\\t >'); // 0=tab 1=space 2=quote\n    partials.Inset = range(...ranges.Inseter);\n  }\n\n  Fences: {\n    // NOTE: Ambiguities when testing if `~` is meant for\n    //\t\t\t fencing or strikethrough here make it harder\n    //\t\t\t to retain intent and traceablility.\n    ranges.FenceMarks = atoms.split('`'); // 0=grave 1=tilde\n    partials.BlockFence = Matcher.join(...ranges.FenceMarks.map(fence => Matcher.escape(fence.repeat(3))));\n  }\n\n  Lists: {\n    ranges.ListMarkers = atoms.split('-*'); // 0=square 1=disc\n    [ranges.CheckMarks, ranges.LowerCheckMarks, ranges.UpperCheckMarks] = atoms.split.cases(' x-'); // 0=unchecked 1=checked 2=indeterminate\n    ranges.NumberingSeparators = atoms.split('.)');\n    ranges.ArabicNumbers = atoms.split('0123456789');\n    // NOTE: Ambiguities when testing if `i.` is roman or\n    //       latin require temporary restrictions in favor\n    //       of the more popular latin form.\n    //\n    //       Only the subset of ['i', 'v', 'x', 'l'] is\n    //       used which excludes ['c', 'd', 'm'].\n    [ranges.RomanNumerals, ranges.LowerRomanNumerals, ranges.UpperRomanNumerals] = atoms.split.cases('ivxl');\n    [ranges.LatinLetters, ranges.LowerLatinLetters, ranges.UpperLatinLetters] = atoms.split.cases(\n      'abcdefghijklmnopqrstuvwxyz',\n    );\n\n    // Unordered lists are broken into two distinct classes:\n    //\n    //   NOTE: Markers are not semantically interchangeable\n    //\n    //   1. Matching Square character (ie `-` per popular notation):\n    partials.SquareMark = Matcher.escape(ranges.ListMarkers[0]);\n    //\n    //   2. Matching Disc character (ie `*` per lesser popular notation):\n    partials.DiscMark = Matcher.escape(ranges.ListMarkers[1]);\n    //\n    //   Unordered mark is the range of Square/Disc characters:\n    partials.UnorderedMark = range(...ranges.ListMarkers);\n\n    partials.NumberingSeparator = range(...ranges.NumberingSeparators);\n\n    // Ordered lists are broken into three distinct classes:\n    //\n    //   NOTE: Ordered markers include both numbering and trailing sparator.\n    //\n    //   1. Matching Decimal characters (one or more with leading zeros)\n    //        NOTE: lookahead is necessary to exclude matching just zero(s)\n    partials.ArabicNumbering = Matcher.sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n      ...ranges.ArabicNumbers.slice(1),\n    )})${range(...ranges.ArabicNumbers)}+`;\n    //\n    //      Matching Zero-leading Decimal characters (two or more):\n    //        NOTE: lookahead is necessary to exclude matching just zero(s)\n    partials.ZeroLeadingArabicNumbering = Matcher.sequence`(?=${ranges.ArabicNumbers[0]}*${range(\n      ...ranges.ArabicNumbers.slice(1),\n    )})${range(...ranges.ArabicNumbers)}{2,}`;\n    //\n    //      Matching Decimal marker (with any separator):\n    partials.ArabicMarker = Matcher.sequence`${partials.ArabicNumbering}${partials.NumberingSeparator}`;\n    //\n    //      Matching Zero-leading Decimal marker (with any separator):\n    partials.ZeroLeadingArabicMarker = Matcher.sequence`${partials.ZeroLeadingArabicNumbering}${partials.NumberingSeparator}`;\n    //\n    //   2. Matching Latin character (one only)\n    partials.LatinNumbering = range(...ranges.LatinLetters);\n    partials.LowerLatinNumbering = range(...ranges.LowerLatinLetters);\n    partials.UpperLatinNumbering = range(...ranges.UpperLatinLetters);\n    //\n    //      Matching Latin marker (with any separator):\n    partials.LatinMarker = Matcher.sequence`${partials.LatinNumbering}${partials.NumberingSeparator}`;\n    partials.LowerLatinMarker = Matcher.sequence`${partials.LowerLatinNumbering}${partials.NumberingSeparator}`;\n    partials.UpperLatinMarker = Matcher.sequence`${partials.UpperLatinNumbering}${partials.NumberingSeparator}`;\n    //\n    //   3. Matching Roman characters (one or more of the premitted subset)\n    partials.RomanNumbering = Matcher.sequence`${range(...ranges.RomanNumerals)}+`;\n    partials.LowerRomanNumbering = Matcher.sequence`${range(...ranges.LowerRomanNumerals)}+`;\n    partials.UpperRomanNumbering = Matcher.sequence`${range(...ranges.UpperRomanNumerals)}+`;\n    //\n    //      Matching Roman marker (also with trailing \"period\" separator)\n    partials.RomanMarker = Matcher.sequence`${partials.RomanNumbering}\\.`;\n    partials.LowerRomanMarker = Matcher.sequence`${partials.LowerRomanNumbering}\\.`;\n    partials.UpperRomanMarker = Matcher.sequence`${partials.UpperRomanNumbering}\\.`;\n    //\n    //   Ordered marker is the union of Decimal/Latin/Roman partials:\n    partials.OrderedMarker = Matcher.sequence`${Matcher.join(\n      partials.ArabicMarker,\n      partials.LatinMarker,\n      partials.RomanMarker,\n    )}`;\n\n    // Checklists are extensions of unordered lists:\n    //\n    //   NOTE: Markout adds an additional `[-]` indeterminate state\n    //\n    //   a. Matching Enclosed character (without any brackets)\n    partials.CheckMark = range(...ranges.CheckMarks);\n    //\n    //   b. Matching Enclosure characters (with enclosing brackets)\n    partials.Checkbox = Matcher.sequence`\\[${partials.CheckMark}\\]`;\n    //\n    //   Checklist marker is space-separated Unordered marker and Checkbox:\n    partials.ChecklistMarker = Matcher.sequence`${partials.UnorderedMark} ${partials.Checkbox}`;\n\n    // Matching list markers is done in two ways:\n    //\n    //   1. Matching head portion (ie excluding the checkbox)\n    partials.ListMarkerHead = Matcher.join(partials.UnorderedMark, partials.OrderedMarker);\n    //\n    //   2. Matching full marker (ie including the checkbox)\n    partials.ListMarker = Matcher.sequence`${Matcher.join(\n      partials.ChecklistMarker,\n      partials.UnorderedMarker,\n      partials.OrderedMarker,\n    )}`;\n\n    patterns.DiscMarker = Matcher.sequence`^${partials.DiscMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.SquareMarker = Matcher.sequence`^${partials.SquareMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.UnorderedMarker = Matcher.sequence`^${partials.UnorderedMark}(?= (?!${partials.Checkbox})|$)`;\n    patterns.ArabicMarker = Matcher.sequence`^${partials.ArabicMarker}(?= |$)`;\n    patterns.LatinMarker = Matcher.sequence`^${partials.LatinMarker}(?= |$)`;\n    patterns.RomanMarker = Matcher.sequence`^${partials.RomanMarker}(?= |$)`;\n    patterns.OrderedMarker = Matcher.sequence`^${partials.OrderedMarker}(?= |$)`;\n    patterns.ChecklistMarker = Matcher.sequence`^${partials.ChecklistMarker}(?= |$)`;\n\n    // There are two groups of list marker expressions:\n    sequences.ListMarkerHead = Matcher.sequence`(?:${partials.ListMarkerHead})(?: )`;\n    sequences.ListMarker = Matcher.sequence`(?:${Matcher.join(\n      Matcher.sequence`(?:${partials.ChecklistMarker} )`,\n      Matcher.sequence`(?:${partials.UnorderedMark} )(?!${partials.Checkbox})`,\n      Matcher.sequence`(?:${partials.OrderedMarker} )`,\n    )})`;\n\n    sequences.NormalizableLists = Matcher.sequence/* regexp */ `\n\t\t\t(?=\\n?^(${partials.Inset}*)(?:${sequences.ListMarker}))\n\t\t\t((?:\\n?\\1\n\t\t\t\t(?:${sequences.ListMarker}|   ?)+\n\t\t\t\t[^\\n]+\n\t\t\t\t(?:\\n${partials.Inset}*)*\n\t\t\t\t(?=\\n\\1|$)\n\t\t\t)+)\n\t\t`;\n\n    sequences.NormalizableListItem = Matcher.sequence/* regexp */ `\n\t\t\t^\n\t\t\t(${partials.Inset}*)\n\t\t\t((?:${sequences.ListMarkerHead})|)\n\t\t\t([^\\n]+(?:\\n\\1(?:   ?|\\t ?)(?![ \\t]|${sequences.ListMarker}).*)*)$\n\t\t`;\n    matchers.NormalizableLists = new RegExp(sequences.NormalizableLists, 'gmu');\n    matchers.NormalizableListItem = new RegExp(sequences.NormalizableListItem, 'gmu');\n  }\n\n  // console.log({sequences, ranges, partials});\n  // TODO: Document partials and sequences\n\n  Matchers: {\n    sequences.NormalizableBlocks = Matcher.sequence/* regexp */ `\n      (?:^|\\n)(${partials.Inset}*(?:${partials.BlockFence}))[^]+?(?:(?:\\n\\1[ \\t]*)+\\n?|$)\n      |(?:^|\\n)(${partials.Inset}*)(?:\n\t\t\t\t<style>[^]+?(?:(?:\\n\\2</style>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script type=module>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t\t|<script>[^]+?(?:(?:\\n\\2</script>[ \\t]*)+\\n?|$)\n\t\t\t)\n      |([^]+?(?:(?=\\n${partials.Inset}*(?:${partials.BlockFence}|<script>|<style>|<script type=module>))|$))\n    `;\n    matchers.NormalizableBlocks = new RegExp(sequences.NormalizableBlocks, 'g');\n\n    partials.HTMLTagBody = Matcher.sequence/* regexp */ `(?:[^${`\"'`}>]+?|\".*?\"|'.*?')`;\n\n    sequences.HTMLTags = Matcher.sequence/* regexp */ `\n\t\t\t<\\/?[A-Za-z]\\w*${partials.HTMLTagBody}*?>\n\t\t\t|<\\?[^]*?\\?>\n\t\t\t|<!--[^]*?-->\n\t\t\t|<!\\w[^]>\n\t\t`;\n\n    matchers.HTMLTags = new RegExp(sequences.HTMLTags, 'g');\n\n    sequences.NormalizableParagraphs = Matcher.sequence/* regexp */ `\n      ^((?:[ \\t]*\\n(${partials.Inset}*))+)\n      ($|(?:\n\t\t\t\t(?:\n\t\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>\n\t\t\t\t\t|(?!(?:${Matcher.join(\n            sequences.HTMLTags,\n            // sequences.ListMarker,\n          )}))\n\t\t\t\t)\n\t\t\t\t[^-#>|~\\n].*\n        (?:\\n${partials.Inset}*$)+\n      )+)\n    `;\n    matchers.NormalizableParagraphs = new RegExp(sequences.NormalizableParagraphs, 'gmu');\n\n    sequences.RewritableParagraphs = Matcher.sequence/* regexp */ `\n      ^([ \\t]*[^\\-\\*#>\\n].*?)\n      (\\b.*[^:\\n\\s>]+|\\b)\n      [ \\t]*\\n[ \\t>]*?\n      (?=(\n\t\t\t\t</?(?:span|small|big|kbd)\\b${partials.HTMLTagBody}*?>[^-#>|~\\n].*\n        |\\b(?!(?:${sequences.HTMLTags}))\n        |\\[.*?\\][^:\\n]?\n        |[^#${'`'}\\[\\n]\n      ))\n    `;\n\n    matchers.RewritableParagraphs = new RegExp(sequences.RewritableParagraphs, 'gmu');\n\n    partials.BlockQuote = Matcher.sequence/* regexp */ `(?:  ?|\\t)*>(?:  ?>|\\t>)`;\n\n    sequences.NormalizableBlockquotes = Matcher.sequence/* regexp */ `\n\t\t\t(?:((?:^|\\n)[ \\t]*\\n|^)|\\n)\n\t\t\t(${partials.BlockQuote}*)\n\t\t\t([ \\t]*(?!>).*)\n\t\t\t(?=\n\t\t\t\t(\\n\\2${partials.BlockQuote}*)\n\t\t\t\t|(\\n\\2)\n\t\t\t\t|(\\n${partials.BlockQuote}*)\n\t\t\t\t|(\\n|$)\n\t\t\t)\n\t\t`;\n\n    matchers.NormalizableBlockquotes = new RegExp(sequences.NormalizableBlockquotes, 'g');\n\n    // We guard against the special case for checklists\n    sequences.NormalizableReferences = Matcher.sequence/* regexp */ `\n\t\t  (?!\\[[- xX]\\] )\n\t\t\t(?:\\[(?=\\[\\S.*?\\S\\]\\])|!?)\n      \\[\n\t\t\t(\n\t\t\t\t[^\\s\\n\\\\].*?[^\\s\\n\\\\](?=\\]\\])\n\t\t\t\t|[^\\s\\n\\\\].*?[^\\s\\n\\\\](?=\n\t\t\t\t\t\\]\\(([^\\s\\n\\\\][^\\n${Matcher.escape('()[]')}]*?[^\\s\\n\\\\]|[^\\s\\n\\\\]|)\\)\n\t\t\t\t\t|\\]\\[([^\\s\\n\\\\][^\\n${Matcher.escape('()[]')}]*[^\\s\\n\\\\]|)\\]\n\t\t\t\t)\n\t\t\t)\\]{1,2}\n      (?:\\(\\2\\)|\\[\\3\\]|)\n\t\t`;\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.NormalizableReferences = new RegExp(sequences.NormalizableReferences, 'g');\n\n    sequences.RewritableAliases = Matcher.sequence/* regexp */ `\n      ^(${partials.Inset}*)\n      \\[(\\S.*?\\S)\\]:\\s+\n      (\\S+)(?:\n        \\s+${'\"'}([^\\n]*)${'\"'}\n        |\\s+${\"'\"}([^\\n]*)${\"'\"}\n        |\n      )\\s*$\n\t\t`;\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.RewritableAliases = new RegExp(sequences.RewritableAliases, 'gm');\n\n    sequences.NormalizableLink = Matcher.sequence/* regexp */ `\n      \\s*((?:\\s?[^${`'\"`}${Matcher.escape('()[]')}}\\s\\n]+))\n      (?:\\s+[${`'\"`}]([^\\n]*)[${`'\"`}]|)\n\t\t`; // (?:\\s+{([^\\n]*)}|)\n    // NOTE: Safari seems to struggle with /\\S|\\s/gmu\n    matchers.NormalizableLink = new RegExp(sequences.NormalizableLink);\n  }\n}\n\nexport const expressions = {ranges, sequences, matchers, patterns, partials};\n","﻿import {patterns, ranges} from './expressions.js';\n\nexport class ComposableList extends Array {\n\tstatic create(properties, ...elements) {\n\t\treturn Object.assign(new ComposableList(...elements), properties);\n\t}\n\n\ttoString(\n\t\tlistInset = this.listInset || '',\n\t\tlistType = this.listType || 'ul',\n\t\tlistStyle = this.listStyle,\n\t\tlistStart = this.listStart,\n\t) {\n\t\tlistStart &&\n\t\t\ttypeof listStart !== 'number' &&\n\t\t\t(listStart = `${\n\t\t\t\tlistStyle === 'lower-latin' || listStyle === 'upper-latin'\n\t\t\t\t\t? ComposableList.parseLatin(listStart)\n\t\t\t\t\t: listStyle === 'lower-roman' || listStyle === 'upper-roman'\n\t\t\t\t\t? ComposableList.parseRoman(listStart)\n\t\t\t\t\t: parseInt(listStart) || ''\n\t\t\t}`);\n\n\t\tconst attributes = `${\n\t\t\t// TODO: Explore using type attribute instead\n\t\t\t(listStyle &&\n\t\t\t\t`style=\"list-style: ${listStyle}\"${(listStyle in ListTypes && ` type=\"${ListTypes[listStyle]}\"`) || ''}`) ||\n\t\t\t\t''\n\t\t} ${\n\t\t\t// TODO: Check if guard against invalid start is needed\n\t\t\t(listStart && `start=\"${listStart}\"`) || ''\n\t\t}`.trim();\n\n\t\tconst listRows = [`${listInset}<${listType}${(attributes && ` ${attributes}`) || ''}>`];\n\n\t\t/** @type {import('./block-normalizer.js').MarkoutBlockNormalizer} */\n\t\tconst normalizer = this.normalizer;\n\n\t\t// .split('\\n\\n').map(line => `<p>${line}</p>`).join('')\n\t\tfor (const item of this) {\n\t\t\tif (item && typeof item === 'object') {\n\t\t\t\tif (item instanceof ComposableList) {\n\t\t\t\t\tconst last = listRows.length - 1;\n\t\t\t\t\tconst row = listRows[last];\n\t\t\t\t\tlast > 0\n\t\t\t\t\t\t? (listRows[listRows.length - 1] = `${row.slice(0, -5)}\\n${item.toString(\n\t\t\t\t\t\t\t\t`${listInset}\\t\\t`,\n\t\t\t\t\t\t  )}\\n${listInset}\\t</li>`)\n\t\t\t\t\t\t: listRows.push(`${listInset}\\t<li>\\n${item.toString(`${listInset}\\t\\t`)}\\n${listInset}\\t</li>`);\n\t\t\t\t\t// continue;\n\t\t\t\t} else {\n\t\t\t\t\tconst insetText = `${item}`;\n\t\t\t\t\tlet text = insetText;\n\t\t\t\t\tfor (const character of listInset) {\n\t\t\t\t\t\tif (!text.startsWith(character)) break;\n\t\t\t\t\t\ttext = text.slice(1);\n\t\t\t\t\t}\n\t\t\t\t\t// if (normalizer) {\n\t\t\t\t\t// \tconsole.log({normalizer, text});\n\t\t\t\t\t// \ttext = normalizer.normalizeParagraphs(`\\n\\n${text}`);\n\t\t\t\t\t// }\n\t\t\t\t\tlistRows.push(text);\n\t\t\t\t\t// listRows.push(text.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b|\\n+))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m)));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst [, checked, content] = /^\\s*(?:\\[([-xX]| )\\] |)([^]+?)\\s*$/.exec(item);\n\n\t\t\t\tcontent &&\n\t\t\t\t\tlistRows.push(\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\t\t? `${listInset}\\t<li type=checkbox ${\n\t\t\t\t\t\t\t\t\tchecked === ' ' ? '' : checked === '-' ? 'indeterminate' : ' checked'\n\t\t\t\t\t\t\t  }> ${\n\t\t\t\t\t\t\t\t\tcontent\n\t\t\t\t\t\t\t\t\t// content.replace(/^(.+?)(?=(<\\/p>)|<[a-z]+\\b))/, (m, a, b) => (a ? `<p>${a}${b || '</p>'}` : m))\n\t\t\t\t\t\t\t  } </li>`\n\t\t\t\t\t\t\t: `${listInset}\\t<li> ${content} </li>`,\n\t\t\t\t\t);\n\t\t\t}\n\t\t}\n\t\tlistRows.push(`${listInset}</${listType}>`);\n\t\t// console.log(this, {normalizer, listRows});\n\t\treturn `\\n${listRows.join('\\n')}\\n`;\n\t}\n}\n\nconst ChecklistMarker = new RegExp(patterns.ChecklistMarker);\nconst SquareMarker = new RegExp(patterns.SquareMarker);\nconst DiscMarker = new RegExp(patterns.DiscMarker);\nconst ArabicMarker = new RegExp(patterns.ArabicMarker);\nconst ZeroLeadingArabicMarker = new RegExp(patterns.ZeroLeadingArabicMarker);\nconst LatinMarker = new RegExp(patterns.LatinMarker);\nconst LowerLatinMarker = new RegExp(patterns.LowerLatinMarker);\nconst UpperLatinMarker = new RegExp(patterns.UpperLatinMarker);\nconst RomanMarker = new RegExp(patterns.RomanMarker);\nconst LowerRomanMarker = new RegExp(patterns.LowerRomanMarker);\nconst UpperRomanMarker = new RegExp(patterns.UpperRomanMarker);\nconst OrderedMarker = new RegExp(patterns.OrderedMarker);\nconst UnorderedMarker = new RegExp(patterns.UnorderedMarker);\nconst ListTypes = {\n\t'lower-latin': 'a',\n\t'upper-latin': 'A',\n\t'lower-roman': 'i',\n\t'upper-roman': 'I',\n\tdecimal: '1',\n\t'decimal-leading-zero': '1',\n};\n\nLATIN: {\n\tconst parseLatin = latin => parseLatin.mappings[latin] || NaN;\n\n\tparseLatin.mappings = {};\n\n\t'abcdefghijklmnopqrstuvwxyz'.split('').forEach((latin, index) => {\n\t\tparseLatin.mappings[(parseLatin.mappings[latin] = parseLatin.mappings[latin.toUpperCase] = index + 1)] = latin;\n\t});\n\n\tComposableList.parseLatin = parseLatin;\n}\n\nROMAN: {\n\tconst parseRoman = roman =>\n\t\t/[^ivxlcdm]/i.test((roman = String(roman)))\n\t\t\t? NaN\n\t\t\t: roman\n\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t.split('')\n\t\t\t\t\t.reduce(parseRoman.reducer, 0);\n\t// prettier-ignore\n\tparseRoman.mappings = Object.freeze({i: 1, v: 5, x: 10, l: 50, c: 100, d: 500, m: 1000, 1: 'i', 5: 'v', 10: 'x', 50: 'l', 100: 'c', 500: 'd', 1000: 'm'});\n\n\tparseRoman.reducer = (decimal, character, index, characters) =>\n\t\tdecimal +\n\t\t(parseRoman.mappings[character] < parseRoman.mappings[characters[index + 1]]\n\t\t\t? -parseRoman.mappings[character]\n\t\t\t: parseRoman.mappings[character]);\n\n\tComposableList.parseRoman = parseRoman;\n}\n\nComposableList.ORDERED_STYLE = /^(?:(0+[1-9]\\d*)(?=\\. )|(\\d+)(?=\\. )|([ivx]+)(?=\\. )|([a-z])(?=[.)] ))|/i;\nComposableList.ORDERED_STYLE.key = ['decimal-leading-zero', 'decimal', 'roman', 'latin'];\n\nComposableList.orderedStyleOf = (marker, variant, fallback) => {\n\tconst category =\n\t\tComposableList.ORDERED_STYLE.key[\n\t\t\tComposableList.ORDERED_STYLE.exec(marker)\n\t\t\t\t.slice(1)\n\t\t\t\t.findIndex(Boolean)\n\t\t];\n\treturn (\n\t\t(category !== undefined &&\n\t\t\t(category === 'latin' || category === 'roman'\n\t\t\t\t? `${\n\t\t\t\t\t\tvariant === 'lower' || (variant !== 'upper' && marker === marker.toLowerCase()) ? 'lower' : 'upper'\n\t\t\t\t  }-${category}`\n\t\t\t\t: category === 'decimal'\n\t\t\t\t? variant !== 'leading-zero'\n\t\t\t\t\t? 'decimal'\n\t\t\t\t\t: 'decimal-leading-zero'\n\t\t\t\t: variant !== 'decimal'\n\t\t\t\t? 'decimal-leading-zero'\n\t\t\t\t: 'decimal')) ||\n\t\tfallback\n\t);\n};\n\nComposableList.markerIsLike = (marker, expected) =>\n\texpected in ComposableList.LIKE ? ComposableList.LIKE[expected].test(marker) : undefined;\n\nComposableList.LIKE = {\n\t['square']: SquareMarker,\n\t['disc']: DiscMarker,\n\t['decimal']: ArabicMarker,\n\t['decimal-leading-zero']: ZeroLeadingArabicMarker,\n\t['latin']: LatinMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-latin']: LatinMarker,\n\t['upper-latin']: LatinMarker,\n\t['roman']: RomanMarker,\n\t// NOTE: We allow cases insenstivity as a common convencience feature\n\t['lower-roman']: RomanMarker,\n\t['upper-roman']: RomanMarker,\n\t['ol']: OrderedMarker,\n\t['ul']: UnorderedMarker,\n\t['checkbox']: ChecklistMarker,\n};\n","﻿import {encodeEntities} from '../markup.js';\nimport {ComposableList} from './composable-list.js';\nimport {matchers} from './expressions.js';\nimport {MATCHES, countInsetQuotes} from './helpers.js';\nimport {escape} from '/markup/packages/matcher/matcher.js';\n\nconst {\n\t/** Attempts to overcome **__** */\n\t'markout-render-comment-stashing': COMMENT_STASHING = false,\n\t'markout-render-paragraph-trimming': PARAGRAPH_TRIMMING = true,\n} = import.meta;\n\nconst generateBlockquotes = (quotesAfter, quotesBefore = 0) => {\n\tlet blockquotes, steps, level;\n\n\tsteps = quotesAfter - (quotesBefore || 0);\n\n\tif (steps < 0) {\n\t\treturn '</p></blockquote>'.repeat(-steps);\n\t} else if (steps > 0) {\n\t\tblockquotes = new Array(steps);\n\t\tfor (level = quotesAfter; steps; blockquotes[steps--] = `<blockquote blockquote-level=${level--}><p>`);\n\t\treturn blockquotes.join('');\n\t} else {\n\t\treturn '';\n\t}\n};\n\nexport class MarkoutBlockNormalizer {\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeBlocks(sourceText, state = {}) {\n\t\tconst {\n\t\t\tsources = (state.sources = []),\n\t\t\t[ALIASES]: aliases = (state[ALIASES] = {}),\n\t\t} = state;\n\n\t\tconst source = {sourceText, [BLOCKS]: [], [ALIASES]: {}};\n\t\tsources.push(source);\n\n\t\t// ({body: sourceText, comments: state.comments} = decomment(sourceText));\n\n\t\tBlocks: {\n\t\t\tconst body = [];\n\t\t\tconst {\n\t\t\t\tsourceText,\n\t\t\t\t[BLOCKS]: sourceBlocks,\n\t\t\t\t[BLOCKS]: {\n\t\t\t\t\t[MATCHES]: matchedBlocks = (sourceBlocks[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {\n\t\t\t\t\t\tfenced: fenced = (matchedBlocks.fenced = []),\n\t\t\t\t\t\tembedded: embedded = (matchedBlocks.embedded = []),\n\t\t\t\t\t\tunfenced: unfenced = (matchedBlocks.unfenced = []),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t[ALIASES]: sourceAliases,\n\t\t\t\t[ALIASES]: {\n\t\t\t\t\t[MATCHES]: matchedAliases = (sourceAliases[MATCHES] = []),\n\t\t\t\t\t[MATCHES]: {aliased = (matchedAliases.aliased = []), unaliased = (matchedAliases.unaliased = [])},\n\t\t\t\t},\n\t\t\t} = source;\n\t\t\tlet match = (matchers.NormalizableBlocks.lastIndex = null);\n\n\t\t\tconst replaceAlias = (text, indent, alias, href, title, index) => {\n\t\t\t\tconst match = {text, indent, alias, href, title, index};\n\n\t\t\t\t// TODO: Figure out anchors: https://www.w3.org/TR/2017/REC-html52-20171214/links.html\n\t\t\t\treturn alias && alias.trim()\n\t\t\t\t\t? (aliased.push((sourceAliases[alias] = aliases[alias] = match)),\n\t\t\t\t\t  `<a hidden rel=\"alias\" name=\"${alias}\" href=\"${href}\" ref=\"${href}\">${title || ''}</a>`)\n\t\t\t\t\t: (unaliased.push(match), text);\n\t\t\t};\n\n\t\t\twhile ((match = matchers.NormalizableBlocks.exec(sourceText))) {\n\t\t\t\tmatchedBlocks.push(([match.text, match.fence, match.inset, match.unfenced] = match));\n\t\t\t\tif (match.fence) {\n\t\t\t\t\tfenced.push(match);\n\t\t\t\t} else if (match.inset !== undefined) {\n\t\t\t\t\tembedded.push(match);\n\t\t\t\t} else {\n\t\t\t\t\tunfenced.push(match);\n\t\t\t\t\tmatch.text = match.text.replace(matchers.RewritableAliases, replaceAlias);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// console.log(matchedBlocks);\n\t\t}\n\n\t\tNormalization: {\n\t\t\t/** @type {{[BLOCKS]: {[MATCHES]: MatchedBlock[]}}} */\n\t\t\tconst {[BLOCKS]: sourceBlocks} = source;\n\t\t\tfor (const matchedBlock of sourceBlocks[MATCHES]) {\n\t\t\t\tsourceBlocks.push(\n\t\t\t\t\tmatchedBlock.fence !== undefined\n\t\t\t\t\t\t? this.normalizeFencing(\n\t\t\t\t\t\t\t\tmatchedBlock.text,\n\t\t\t\t\t\t\t\t// Provides the fence\n\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t  )\n\t\t\t\t\t\t: matchedBlock.inset !== undefined\n\t\t\t\t\t\t? matchedBlock.text\n\t\t\t\t\t\t: this.normalizeParagraphs(\n\t\t\t\t\t\t\t\tthis.normalizeBreaks(\n\t\t\t\t\t\t\t\t\tthis.normalizeLists(\n\t\t\t\t\t\t\t\t\t\tthis.normalizeBlockquotes(\n\t\t\t\t\t\t\t\t\t\t\tthis.normalizeReferences(matchedBlock.text, state),\n\t\t\t\t\t\t\t\t\t\t\t// Provides the inset\n\t\t\t\t\t\t\t\t\t\t\tmatchedBlock,\n\t\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\t\t),\n\t\t\t\t\t\t  ),\n\t\t\t\t);\n\t\t\t}\n\t\t\tsource.normalizedText = sourceBlocks.join('\\n');\n\t\t\timport.meta['debug:markout:block-normalization'] && console.log('normalizeSourceText:', state);\n\t\t}\n\n\t\t// source.normalizedText = recomment(source.normalizedText, state.comments);\n\n\t\treturn source.normalizedText;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeFencing(sourceText, matchedBlock) {\n\t\t// const debugging = true;\n\t\tconst inset = sourceText.slice(0, sourceText.indexOf('```'));\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tif (inset.trim() === '') return sourceText;\n\t\tconst quotesBefore = countInsetQuotes(inset);\n\t\tconst Inset = new RegExp(`${escape(inset.trimRight())}(?:  ?|\\t|(?=\\n|$))`, 'g');\n\t\t// debugging && console.log('normalizeFencing', {sourceText, inset, matchedBlock});\n\t\tconst normalized = sourceText.replace(/```\\S*/, `$& blockquote-level=${quotesBefore}`).replace(Inset, '\\n');\n\t\treturn normalized;\n\t}\n\n\t/** @param {string} sourceText @param {MatchedBlock} matchedBlock */\n\tnormalizeBlockquotes(sourceText, matchedBlock) {\n\t\tconst debugging = false;\n\t\tdebugging === true && (matchedBlock.blockquotes = []);\n\n\t\tmatchers.NormalizableBlockquotes.lastIndex = 0;\n\t\tsourceText = sourceText.replace(\n\t\t\tmatchers.NormalizableBlockquotes,\n\t\t\t(matched, leader, quote, quoted, inquote, requote, dequote, unquote, index, sourceText) => {\n\t\t\t\tlet before, after;\n\t\t\t\tif (quote === undefined) return matched;\n\n\t\t\t\tconst quotesBefore = countInsetQuotes(quote);\n\t\t\t\tconst indent = quote.slice(0, quote.indexOf('>'));\n\t\t\t\tconst quotesAfter =\n\t\t\t\t\tunquote !== undefined\n\t\t\t\t\t\t? 0\n\t\t\t\t\t\t: requote !== undefined\n\t\t\t\t\t\t? quotesBefore\n\t\t\t\t\t\t: inquote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(inquote)\n\t\t\t\t\t\t: dequote !== undefined\n\t\t\t\t\t\t? countInsetQuotes(dequote)\n\t\t\t\t\t\t: quotesBefore;\n\n\t\t\t\tbefore = leader !== undefined ? `${leader}${indent}${generateBlockquotes(quotesBefore, 0)}` : `\\n${indent}`;\n\n\t\t\t\tafter = generateBlockquotes(quotesAfter, quotesBefore);\n\n\t\t\t\tconst replaced = `${before}${quoted.trimLeft()}${after ? `\\n${indent}${after}` : ''}`;\n\n\t\t\t\tdebugging === true &&\n\t\t\t\t\tmatchedBlock.blockquotes.push({\n\t\t\t\t\t\treplaced,\n\t\t\t\t\t\tindent,\n\t\t\t\t\t\tquotesBefore,\n\t\t\t\t\t\tquotesAfter,\n\t\t\t\t\t\tmatched: [matched, leader, quote, quoted, inquote, requote, dequote, unquote],\n\t\t\t\t\t});\n\t\t\t\treturn replaced;\n\t\t\t},\n\t\t);\n\n\t\t// TODO: Normalize block quotes\n\t\tdebugging === true && matchedBlock.blockquotes.length > 0 && console.table(matchedBlock.blockquotes);\n\n\t\treturn sourceText;\n\t}\n\n\t/**\n\t * @param {string} sourceText\n\t * @param {{ aliases?: { [name: string]: alias } }} [state]\n\t */\n\tnormalizeReferences(sourceText, state = {}) {\n\t\tconst debugging = import.meta['debug:markout:anchor-normalization'];\n\t\tconst {aliases = (state.aliases = {})} = state;\n\n\t\treturn sourceText.replace(matchers.NormalizableReferences, (m, text, link, alias, index) => {\n\t\t\tconst reference = alias\n\t\t\t\t? (alias = alias.trim())\n\t\t\t\t: link !== undefined\n\t\t\t\t? (link = (link && link.trim()) || '')\n\t\t\t\t: text\n\t\t\t\t? (alias = text)\n\t\t\t\t: undefined;\n\n\t\t\t// console.log('reference — %O ', {m, text, link, alias, index, reference, aliases});\n\n\t\t\tif (reference !== undefined) {\n\t\t\t\tlet href, title, match;\n\t\t\t\t// debugging && console.log(m, {text, link, alias, reference, index});\n\t\t\t\tif (link) {\n\t\t\t\t\t[, href, title] = match = matchers.NormalizableLink.exec(link);\n\t\t\t\t} else if (alias && alias in aliases) {\n\t\t\t\t\t({href, title} = match = aliases[alias]);\n\t\t\t\t}\n\n\t\t\t\t// console.log('reference — %O ', {m, text, link, alias, match});\n\n\t\t\t\tif (m[0] === '!') {\n\t\t\t\t\treturn ` <img${href ? ` src=\"${encodeURI(href)}\"` : ''}${\n\t\t\t\t\t\ttext || title ? ` title=\"${text || title}\"` : ''\n\t\t\t\t\t}${(alias && ` alias=\"${alias}\"`) || ''} />`;\n\t\t\t\t} else {\n\t\t\t\t\ttext = text || encodeEntities(href);\n\t\t\t\t\treturn ` <a${href ? ` href=\"${href}\"` : ''}${title ? ` title=\"${title}\"` : ''}${(alias &&\n\t\t\t\t\t\t` alias=\"${alias}\"`) ||\n\t\t\t\t\t\t''}>${text || reference}</a>`;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn m;\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeLists(sourceText) {\n\t\tconst listProperties = {normalizer: this};\n\t\treturn sourceText.replace(matchers.NormalizableLists, (m, feed, body) => {\n\t\t\tlet match, indent;\n\t\t\tindent = feed.slice(1);\n\t\t\tlet top = ComposableList.create(listProperties);\n\t\t\tlet list = top;\n\t\t\tconst lists = [top];\n\t\t\tmatchers.NormalizableListItem.lastIndex = 0;\n\t\t\twhile ((match = matchers.NormalizableListItem.exec(m))) {\n\t\t\t\tlet [text, matchedInset, matchedMarker, matchedLine] = match;\n\t\t\t\tlet like;\n\t\t\t\tif (!matchedLine.trim()) continue;\n\n\t\t\t\t// console.log(text, {matchedInset, matchedMarker, matchedLine});\n\n\t\t\t\tif (matchedMarker) {\n\t\t\t\t\tlet depth = matchedInset.length;\n\t\t\t\t\tif (depth > list.listDepth) {\n\t\t\t\t\t\tconst parent = list;\n\t\t\t\t\t\tlist.push((list = ComposableList.create(listProperties)));\n\t\t\t\t\t\tlist.parent = parent;\n\t\t\t\t\t} else if (depth < list.listDepth) {\n\t\t\t\t\t\twhile ((list = list.parent) && depth < list.listDepth);\n\t\t\t\t\t} else if ('listStyle' in list && !(like = ComposableList.markerIsLike(matchedMarker, list.listStyle))) {\n\t\t\t\t\t\tconst parent = list.parent;\n\t\t\t\t\t\t((list = ComposableList.create(listProperties)).parent = parent)\n\t\t\t\t\t\t\t? parent.push(list)\n\t\t\t\t\t\t\t: lists.push((top = list));\n\t\t\t\t\t} else if (depth !== list.listDepth && list.listDepth !== undefined) {\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t}\n\n\t\t\t\t\t// console.log(text, [matchedMarker, list.listStyle, like]);\n\n\t\t\t\t\tif (!list)\n\t\t\t\t\t\t// debugger;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t'listInset' in list ||\n\t\t\t\t\t\t((list.listInset = matchedInset),\n\t\t\t\t\t\t(list.listDepth = depth),\n\t\t\t\t\t\t(list.listType =\n\t\t\t\t\t\t\tmatchedMarker[0] === '*' || matchedMarker[0] === '-'\n\t\t\t\t\t\t\t\t? 'ul'\n\t\t\t\t\t\t\t\t: ((list.listStart = matchedMarker.replace(/\\W/g, '')), 'ol')));\n\n\t\t\t\t\t'listStyle' in list ||\n\t\t\t\t\t\t(list.listStyle =\n\t\t\t\t\t\t\t(list.listType === 'ul' && ((matchedMarker[0] === '*' && 'disc') || 'square')) ||\n\t\t\t\t\t\t\tComposableList.orderedStyleOf(matchedMarker));\n\n\t\t\t\t\tmatchedLine = matchedLine.replace(/[ \\t]*\\n[> \\t]*/g, ' ');\n\t\t\t\t\tlist.push(matchedMarker[2] === '[' ? `${matchedMarker.slice(2)}${matchedLine}` : matchedLine);\n\t\t\t\t} else {\n\t\t\t\t\tif (list.length) {\n\t\t\t\t\t\tconst index = list.length - 1;\n\t\t\t\t\t\tlist[index] += `<p>${matchedLine}</p>`;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlist.push(new String(m));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn lists.map(list => list.toString(indent)).join('\\n');\n\t\t});\n\t}\n\n\t/** @param {string} sourceText */\n\tnormalizeParagraphs(sourceText) {\n\t\tsourceText = sourceText.replace(matchers.NormalizableParagraphs, (m, feed, inset, body) => {\n\t\t\tlet paragraphs, comments;\n\n\t\t\tCOMMENT_STASHING && ({body, comments} = decomment(body));\n\n\t\t\tparagraphs = body\n\t\t\t\t.trim()\n\t\t\t\t.split(/^(?:[> \\t]*\\n)+[> \\t]*/m)\n\t\t\t\t.filter(isNotBlank);\n\n\t\t\timport.meta['debug:markout:paragraph-normalization'] &&\n\t\t\t\tconsole.log('normalizeParagraphs:', {m, feed, inset, body, paragraphs});\n\n\t\t\tbody = `${feed}<p> ${paragraphs.join(` </p>\\n${inset}<p> `)} </p>\\n`;\n\n\t\t\tCOMMENT_STASHING && (body = recomment(body, comments));\n\n\t\t\treturn body;\n\t\t});\n\n\t\tPARAGRAPH_TRIMMING && (sourceText = sourceText.replace(/<p>[\\s\\n]*<\\/p>/g, ''));\n\n\t\treturn sourceText;\n\t}\n\n\tnormalizeBreaks(sourceText) {\n\t\treturn sourceText.replace(matchers.RewritableParagraphs, (m, a, b, c, index, sourceText) => {\n\t\t\timport.meta['debug:markout:break-normalization'] &&\n\t\t\t\tconsole.log('normalizeBreaks:\\n\\t%o%o\\u23CE%o [%o]', a, b, c, index);\n\t\t\treturn `${a}${b} `;\n\t\t});\n\t}\n}\n\n// export const MATCHES = Symbol('matches');\nexport const ALIASES = 'aliases';\nexport const BLOCKS = 'blocks';\n\nconst decomment = body => {\n\tconst comments = [];\n\tbody = body.replace(/<!--[^]+-->/g, comment => `<!--${comments.push(comment)}!-->`);\n\treturn {body, comments};\n};\n\nconst recomment = (body, comments) => {\n\treturn body.replace(\n\t\tnew RegExp(`<!--(${comments.map((comment, i) => comments.length - i).join('|')})!-->`, 'g'),\n\t\t(comment, index) => comments[index] || '<!---->',\n\t);\n};\n\nconst isNotBlank = text => typeof text === 'string' && !(text === '' || text.trim() === '');\n\n/** @template {string} T @typedef {Partial<Record<T, string>>} MatchedRecord */\n/** @typedef {MatchedRecord<'text'|'fence'|'inset'|'unfenced'>} MatchedBlockRecord */\n/** @typedef {RegExpExecArray & MatchedBlockRecord} MatchedBlock */\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Matcher} from './matcher.js';\nexport {DELIMITER, UNKNOWN} from './matcher.js';\n\n/** Segmenter for sub-match captures */\nexport class SegmentMatcher extends Matcher {\n  /**\n   * @param {MatcherPattern} pattern\n   * @param {MatcherFlags} [flags]\n   * @param {MatcherEntities} [entities]\n   * @param {{}} [state]\n   */\n  constructor(pattern, flags, entities, state) {\n    //@ts-ignore\n    super(pattern, flags, entities, state);\n    this.captureEntity = this.captureEntity;\n  }\n  /**\n   * @template {MatcherMatch} T\n   * @param {string} text\n   * @param {number} capture\n   * @param {T} match\n   * @returns {T}\n   */\n  captureEntity(text, capture, match) {\n    if (capture === 0) return void (match.capture = {});\n    if (text === undefined) return;\n    const index = capture - 1;\n    const {\n      entities: {[index]: entity, meta, identities},\n      state,\n    } = this;\n    // entity === INSET ||\n    // entity === LOOKAHEAD ||\n    // entity === Matcher.DELIMITER ||\n    // entity === Matcher.UNKNOWN ||\n    // debugger;\n    if (!entity) return;\n\n    if (typeof entity === 'function') {\n      match.entity = index;\n      entity(text, capture, match, state);\n      return;\n    }\n\n    if (meta.has(entity)) {\n      // match.entity || (match.entity = index);\n      match.meta = `${(match.meta && `${match.meta} `) || ''}${/** @type {string} */ (entity)}`;\n    } else if (identities.has(entity) && match.identity == null) {\n      match.entity = index;\n      match.identity = entity;\n    }\n    match.capture[/** @type {MatcherNamedEntity} */ (entity)] = text;\n  }\n\n  /** @param {MatcherExecArray} match */\n  capture(match) {\n    if (match === null) return null;\n\n    match.matcher = this;\n    match.capture = {};\n\n    match &&\n      (match.forEach(this.captureEntity || SegmentMatcher.prototype.captureEntity, this),\n      match.identity ||\n        (match.capture[\n          (/** @type {MatcherMatch} */(match)).identity = this.UNKNOWN || Matcher.UNKNOWN // prettier-ignore\n        ] = match[0]));\n\n    return match;\n  }\n\n  async debug(options) {\n    const job = {options, ...options};\n    try {\n      job.timestamp = `?${encodeURIComponent(Date.now())}`;\n      job.location =\n        (typeof globalThis === 'object' &&\n          globalThis &&\n          globalThis.location != null &&\n          typeof globalThis.location === 'object' &&\n          globalThis.location &&\n          globalThis.location.href) ||\n        /\\/(?:node_modules\\/(?:@.+?\\/|)|)(?:Markdown\\/|)lib\\/.*$/[Symbol.replace](import.meta.url, '/');\n      if (job.specifier != null) {\n        job.sourceText = null;\n        job.url = new URL(job.specifier, job.location);\n        job.response = await (job.request = fetch(job.url));\n        if (!job.response.ok) throw Error(`Failed to fetch ${job.url}`);\n        job.sourceText = await job.response.text();\n      }\n      job.sourceText === null ||\n        /** @type {import('./debug.js')} */ (await import('./debug.js')).debugMatcher(\n          this, // SegmentMatcher.prototype,\n          job.sourceText,\n          (job.debugging = {}),\n        );\n    } catch (exception) {\n      throw (job.error = (exception.stack, exception));\n    } finally {\n      console.group('%o', job);\n      if (job.error) console.warn(job.error);\n      console.groupEnd();\n    }\n  }\n}\n\nexport const {\n  /** Identity for delimiter captures (like newlines) */\n  INSET = (SegmentMatcher.INSET = SegmentMatcher.prototype.INSET = /** @type {MatcherIdentityString} */ ('INSET?')),\n  /** Identity for unknown captures */\n  LOOKAHEAD = (SegmentMatcher.LOOKAHEAD = SegmentMatcher.prototype.LOOKAHEAD =\n    /** @type {MatcherIdentityString} */ ('LOOKAHEAD?')),\n} = SegmentMatcher;\n\n// await (SegmentMatcher.prototype.debug['implementation'] ||\n//   (SegmentMatcher.prototype.debug['implementation'] = import(\n//     // TODO: Find a better way to resolve matcher/lib/debug.js\n//     '/markup/packages/matcher/lib/debug.js'\n//   ).catch(exception => {\n//     console.warn(exception);\n//     return new Proxy(Object.seal(Object.freeze(() => {})), {\n//       get() {\n//         return arguments[0];\n//       },\n//       apply: Reflect.apply.bind(console.warn, null, [exception], undefined),\n//     });\n//   })))\n","﻿// @ts-check\n\nimport {SegmentMatcher, INSET, LOOKAHEAD, UNKNOWN} from '/markup/packages/matcher/lib/segment-matcher.js';\n\nexport const MarkdownSegmenter = (() => {\n  // SEE: https://github.github.com/gfm/#tables-extension-\n  const MarkdownLists = SegmentMatcher.sequence/* regexp */ `\n\t\t[-*]\n\t\t|[1-9]+\\d*\\.\n\t\t|[ivx]+\\.\n\t\t|[a-z]\\.\n\t`;\n  const MarkdownMatter = SegmentMatcher.sequence/* regexp */ `\n\t\t---(?=\\n.+)(?:\\n.*)+?\\n---\n\t`;\n  const MarkdownStub = SegmentMatcher.sequence/* regexp */ `\n\t\t<!--[^]*?-->\n\t\t|<!.*?>|<\\?.*?\\?>\n\t\t|<%.*?%>\n\t\t|<(?:\\b|\\/).*(?:\\b|\\/)>.*\n\t`;\n  const MarkdownStart = SegmentMatcher.sequence/* regexp */ `\n\t\t(?:\n\t\t\t[^#${'`'}~<>|\\n\\s]\n\t\t\t|${'`'}{1,2}(?!${'`'})\n\t\t\t|~{1, 2}(?!~)\n\t\t)\n\t`;\n  // (?!(?:${MarkdownLists}) )\n\n  const MarkdownLine = SegmentMatcher.sequence/* regexp */ `\n\t\t(?!(?:${MarkdownLists}) )\n\t\t(?:${MarkdownStart})\n\t\t(?:${MarkdownStub}|.*)*$\n\t`;\n  const MarkdownDivider = SegmentMatcher.sequence/* regexp */ `\n\t\t-{2,}\n\t\t|={2,}\n\t\t|\\*{2,}\n\t\t|(?:- ){2,}-\n\t\t|(?:= ){2,}=\n\t\t|(?:\\* ){2,}\\*\n\t`;\n  const MarkdownATXStyleHeading = SegmentMatcher.sequence/* regexp */ `\n\t\t#{1,6}(?= +\\S)\n\t`;\n  const MarkdownSetextHeading = SegmentMatcher.sequence/* regexp */ `\n\t\t${MarkdownStart}.*\\n(?=\n\t\t\t\\2\\={3,}\\n\n\t\t\t|\\2\\-{3,}\\n\n\t\t)\n\t`;\n\n  return /** @type {SegmentMatcher} */ (SegmentMatcher.define(\n    entity => SegmentMatcher.sequence/* regexp */ `^\n\t\t  (?:\n\t\t    ${entity(UNKNOWN)}(${MarkdownMatter}$|[ \\t]*(?:${MarkdownStub})[ \\t]*$)|\n\t\t    (?:\n\t\t      ${entity(INSET)}((?:  |\\t)*?(?:> ?)*?(?:> ?| *))\n\t\t      (?:\n\t\t        ${entity('fence')}(?:(${'```'}|~~~)(?=.*\\n)[^]*?\\n\\2\\3.*$)|\n\t\t        ${entity('heading')}(?:(${MarkdownATXStyleHeading}|${MarkdownSetextHeading}).*$)|\n\t\t        ${entity('list')}(?:(${MarkdownLists}) +${MarkdownLine}(?:\\n\\2 {2,4}${MarkdownLine})*$)|\n\t\t        ${entity('alias')}(?:(\\[.+?\\]: .+)$)|\n\t\t        ${entity('divider')}(?:(${MarkdownDivider})$)|\n\t\t        ${entity('feed')}(?:([ \\t]*(?:\\n\\2[ \\t])*)$)|\n\t\t\t\t\t\t${entity('table')}(\n\t\t\t\t\t\t\t[|](?=[ :-]).+[|]$(?:\\n\\2[|].+[|]$)+|\n\t\t\t\t\t\t\t[^|\\n]*?\\|[^|\\n].*$(?:\\n\\2[^|\\n]*?\\|[^|\\n].*$)+\n\t\t\t\t\t\t)|\n\t\t        ${entity('paragraph')}(?:(${MarkdownLine}(?:\\n\\2 {0,2}${MarkdownLine})*)$)\n\t\t      )|\n\t\t      ${entity(UNKNOWN)}(.+?$)\n\t\t    )\n\t\t  )(?=${entity(LOOKAHEAD)}(\\n?^.*$)?)\n\t\t`,\n    'gmi',\n  ));\n})();\n\ntypeof globalThis !== 'object' ||\n  !globalThis ||\n  (globalThis.$md = (specifier = '/markout/examples/markdown-testsuite.md') =>\n    MarkdownSegmenter.debug({specifier, matcher: MarkdownSegmenter}));\n","﻿//@ts-check\n\n/** @template T @param {T} pairs @returns {Readonly<T>} */\nexport const Enum = pairs => Object.freeze(Object.setPrototypeOf(Enum.reflect({...pairs}), null));\n\n/** @template T @param {T} pairs @returns {T & {[K in PropertyKey & T[keyof T]]?: PropertyKey}} */\nEnum.reflect = pairs => {\n\t/** @type {{[K in PropertyKey & T[keyof T]]?: {value: K}}} */\n\tconst descriptors = {};\n\tfor (const [key, value] of Object.entries(pairs))\n\t\tif (typeof value === 'string' || typeof value === 'number' || typeof value === 'symbol')\n\t\t\tdescriptors[value] = {value: key, enumerable: false};\n\tObject.defineProperties(pairs, descriptors);\n\n\treturn pairs;\n};\n\n/** @param {string} context @param {object} meta @param {(string | boolean)[]} [flags] */\nexport const debugging = (context, meta, flags) =>\n\t!(meta && context && flags) ||\n\ttypeof meta.url !== 'string' ||\n\ttypeof context !== 'string' ||\n\ttypeof flags !== 'object' ||\n\t(Array.isArray(flags) && flags.includes(false)) ||\n\tObject.entries(flags).reduce(\n\t\tArray.isArray(flags)\n\t\t\t? (meta, [, flag]) => (typeof flag === 'string' && (meta[`debug:${context}:${flag}`] = true), meta)\n\t\t\t: (meta, [flag, value = meta[flag]]) => (\n\t\t\t\t\ttypeof flag === 'string' && (meta[`debug:${context}:${flag}`] = value), meta\n\t\t\t  ),\n\t\tmeta,\n\t);\n\n/** @type {(text: string, matcher: RegExp | string) => IterableIterator<RegExpExecArray>} */\nexport const matchAll = Function.call.bind(\n\tString.prototype.matchAll ||\n\t\t{\n\t\t\t/**\n\t\t\t * @this {string}\n\t\t\t * @param {RegExp | string} pattern\n\t\t\t */\n\t\t\t*matchAll() {\n\t\t\t\tconst matcher = arguments[0] && (arguments[0] instanceof RegExp ? arguments[0] : RegExp(arguments[0], 'g'));\n\t\t\t\tconst string = String(this);\n\t\t\t\tfor (\n\t\t\t\t\tlet match, lastIndex = -1;\n\t\t\t\t\tlastIndex <\n\t\t\t\t\t// (((arguments[0].lastIndex = lastIndex > -1 ? lastIndex : null), (match = next()))\n\t\t\t\t\t(((matcher.lastIndex = lastIndex > -1 ? lastIndex + 1 : null), (match = matcher.exec(string)))\n\t\t\t\t\t\t? (lastIndex = matcher.lastIndex)\n\t\t\t\t\t\t: lastIndex);\n\t\t\t\t\tyield match\n\t\t\t\t);\n\t\t\t},\n\t\t}.matchAll,\n);\n\n/** @param {string} string */\nexport const normalizeString = string => Object.keys({[string]: true})[0];\n","﻿import {MarkoutBlockNormalizer} from './block-normalizer.js';\nimport {MarkdownSegmenter} from '../markdown/markdown-segmenter.js';\nimport {MATCHES, MATCH} from './helpers.js';\n\nconst {\n  // Attempts to overcome **__**\n  // 'markout-render-merged-marking': MERGED_MARKING = true,\n  // 'markout-segmentation': MARKOUT_SEGMENTATION = true,\n} =\n  //@ts-ignore\n  import.meta;\n\nexport class MarkoutSegmentNormalizer extends MarkoutBlockNormalizer {\n  /**\n   * @param {string} sourceText\n   * @param {{ sources?: *, aliases?: { [name: string]: * }, segments?: DocumentFragment }} [state]\n   */\n  normalizeSegments(sourceText, state = {}) {\n    const debugging = import.meta['debug:markout:segment-normalization'];\n    try {\n      state.sources || (state.sources = []);\n      state.aliases || (state.aliases = {});\n      state[SEGMENTS] || (state[SEGMENTS] = []);\n\n      // TODO: Implement Markout's Matcher-based segment normalization\n      // setTimeout(() => this.debugSegments(sourceText), 5000);\n      if (debugging) {\n        this.normalizeMarkdownSegments(sourceText, state);\n        setTimeout(() => console.log(state));\n      }\n\n      return this.normalizeBlocks(sourceText, state);\n    } finally {\n      //@ts-ignore\n      import.meta['debug:markout:segment-normalization'] && console.log('normalizeSegments:', state);\n    }\n  }\n\n  normalizeMarkdownSegments(sourceText, state) {\n    const {\n      [SEGMENTS]: segments = (state[SEGMENTS] = []),\n      [SEGMENTS]: {[MATCHES]: matches = (state[SEGMENTS][MATCHES] = [])},\n    } = state;\n    for (const match of MarkdownSegmenter.matchAll(sourceText)) {\n      const {\n        0: text,\n        identity,\n        capture: {[MarkdownSegmenter.INSET]: inset},\n      } = match;\n      const segment = {identity, text, inset, [MATCH]: match};\n      if (identity === 'table') {\n        this.normalizeMarkdownTableSegment(segment);\n        if (segment.identity === 'table') {\n          (state[TABLES] || (state[TABLES] = [])).push(segment);\n        }\n      }\n      segments.push(segment);\n      matches.push(match);\n    }\n  }\n\n  normalizeMarkdownTableSegment(segment) {\n    const {text, inset} = segment;\n    segment.lines = `\\n${text}`.split(`\\n${inset}`).slice(1);\n    segment.rows = [];\n    for (const text of segment.lines) {\n      const cells = text.replace(/^\\s*(?:\\|\\s*)?|(?:\\|\\s*)?\\s*$/g, '').split(/\\s*\\|\\s*/);\n      cells.text = text;\n      cells.inset = inset;\n      if (segment.rows.length === 1 && !/[^-|: \\t]/.test(text)) {\n        segment.rows.header = segment.rows[0];\n        segment.rows.format = cells;\n      } else {\n        cells.row = segment.rows.push(cells);\n      }\n    }\n  }\n\n  async debugSegments(sourceText, options) {\n    MarkdownSegmenter.debug({...options, sourceText});\n    // (await import('/markout/lib/markdown/markdown-segmenter.js')).MarkdownSegmenter.debug({sourceText});\n  }\n}\n\nexport const SEGMENTS = 'segments';\nexport const TABLES = 'tables';\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n  // import.meta.url.includes('/markout/lib/') ||\n  typeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n  'segment-normalization',\n  'block-normalization',\n  'paragraph-normalization',\n  'anchor-normalization',\n  'break-normalization',\n]);\n","﻿import {MarkoutSegmentNormalizer} from './experimental/segment-normalizer.js';\nimport {normalizeString} from '/markout/lib/helpers.js';\n\nconst {\n\t// 'markout-render-merged-marking': MERGED_MARKING = true,\n} = import.meta;\n\nexport class MarkoutNormalizer extends MarkoutSegmentNormalizer {\n\tnormalizeSourceText(sourceText) {\n\t\tconst {normalized = (this.normalized = new Map())} = this;\n\t\tlet normalizedText = normalized.get(sourceText);\n\t\tnormalizedText !== undefined ||\n\t\t\tnormalized.set(\n\t\t\t\tsourceText,\n\t\t\t\t(normalizedText = normalizeString(this.normalizeSegments(normalizeString(sourceText)))),\n\t\t\t);\n\t\treturn normalizedText;\n\t}\n}\n","﻿export const DOM_MUTATIONS = undefined;\nexport const BREAK_NORMALIZATION = undefined;\nexport const HEADING_NORMALIZATION = true;\nexport const PARAGRAPH_NORMALIZATION = true;\nexport const BLOCK_PARAGRAPH_NORMALIZATION = true;\nexport const LIST_PARAGRAPH_NORMALIZATION = true;\nexport const CHECKLIST_NORMALIZATION = true;\nexport const BLOCKQUOTE_NORMALIZATION = true;\nexport const BLOCKQUOTE_HEADING_NORMALIZATION = true;\nexport const TOKEN_FLATTENING = true;\nexport const DECLARATIVE_STYLING = true;\nexport const SOURCE_TEXT_RENDERING = true;\nexport const ASSET_REMAPPING = true;\nexport const ASSET_INITIALIZATION = true;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport * as defaults from './defaults.js';\n\nexport const content = /** @type {import('./content').content} */ ({});\n\nObject.setPrototypeOf(content, null);\n\ncontent.matchers = {};\ncontent.symbols = {};\ncontent.selectors = {};\ncontent.defaults = defaults;\n","﻿//@ts-check\n/// <reference path=\"./types.d.ts\" />\n\nimport {Enum} from '../helpers.js';\nimport {content} from './content.js';\nimport * as markup from '../markup.js';\n\nexport const MarkupAttributeMap = Enum({\n\tSourceType: 'source-type',\n\tMarkupMode: 'markup-mode',\n\tMarkupSyntax: 'markup-syntax',\n});\n\n/**\n * @param {Partial<{element: HTMLElement, sourceType: string, sourceText: String}>} options\n * @returns {Promise<HTMLElement>}\n */\nexport const renderSourceText = async options => {\n\tlet element, sourceType, sourceText, state;\n\n\tif (\n\t\t!options ||\n\t\ttypeof options !== 'object' ||\n\t\t(({element, sourceType, sourceText, ...options} = options),\n\t\t!(element\n\t\t\t? !element.hasAttribute(content.MarkupAttributeMap.MarkupSyntax) &&\n\t\t\t  (sourceType ||\n\t\t\t\t\t(sourceType =\n\t\t\t\t\t\telement.getAttribute(content.MarkupAttributeMap.MarkupMode) ||\n\t\t\t\t\t\telement.getAttribute(content.MarkupAttributeMap.SourceType)),\n\t\t\t  sourceText || (sourceText = element.textContent || ''))\n\t\t\t: sourceText))\n\t)\n\t\treturn void console.warn('Aborted: renderSourceText(%o => %o)', options, {element, sourceType, sourceText});\n\n\telement != null\n\t\t? element.removeAttribute(content.MarkupAttributeMap.SourceType)\n\t\t: ((element = document.createElement('pre')).className = 'markup code');\n\n\tstate = element['(markup)'] = {\n\t\telement,\n\t\tsourceText,\n\t\tsourceType,\n\t\tfragment: document.createDocumentFragment(),\n\t\tparsingGoal:\n\t\t\t(/^(js|javascript|es|ecmascript)$/i.test(sourceType) &&\n\t\t\t\t(element.matches('[script=module], [module]') ? 'module' : element.matches('[script]') ? 'script' : 'code')) ||\n\t\t\tundefined,\n\t};\n\n\t// TODO: Implement proper out-of-band handling for js versus es modes\n\tstate.parsingGoal === 'module' && (state.sourceType = sourceType = 'es');\n\n\telement.setAttribute(content.MarkupAttributeMap.MarkupSyntax, state.sourceType);\n\telement.textContent = '';\n\telement.sourceText = sourceText;\n\tawait markup.render(sourceText, state);\n\telement.appendChild(state.fragment);\n\n\treturn element;\n};\n\ncontent.MarkupAttributeMap = MarkupAttributeMap;\ncontent.renderSourceText = renderSourceText;\n","﻿// import {tokenize as tokenizeMarkup, encodeEntities, encodeEntity} from './markup.js';\nimport * as markup from './markup.js';\n\nimport {MarkoutNormalizer} from './normalizer.js';\nimport {content} from './content.js';\n\n/** @type {any} */\nconst {\n  // Attempts to overcome **__**\n  'markout-render-span-restacking': SPAN_RESTACKING = true,\n  'markout-render-newline-consolidation': NEWLINE_CONSOLIDATION = false,\n  // Patched regression from changing markdown.FRAGMENTS\n  //   to /[^\\\\\\n\\s\\[\\]\\(\\)\\<\\>&`\"*~_]+?/ which has been reversed\n  'markout-render-patch-stray-brace': STRAY_BRACE = false,\n  'markout-render-url-expansion': URL_EXPANSION = true,\n} = import.meta;\n\nexport const normalize = sourceText => {\n  const {normalizer = (normalize.normalizer = new MarkoutNormalizer())} = normalize;\n  return normalizer.normalizeSourceText(sourceText);\n};\n\nexport const render = tokens => {\n  const {\n    lookups = (render.lookups = createLookups()),\n    renderer = (render.renderer = new MarkoutRenderer({lookups})),\n  } = render;\n  return renderer.renderTokens(tokens);\n};\n\nexport const tokenize = sourceText => markup.tokenize(`${sourceText.trim()}\\n}`, {sourceType: 'markdown'});\n\nexport const encodeEscapedEntities = ((Escapes, replace) => text => text.replace(Escapes, replace))(\n  /\\\\([*^~`_])(\\1|)/g,\n  (m, e, e2) => (e2 ? markup.encodeEntity(e).repeat(2) : markup.encodeEntity(e)),\n);\n\nconst FencedBlockHeader = /^(?:(\\w+)(?:\\s+(.*?)\\s*|)$|)/m;\nconst URLPrefix = /^(?:https?:|HTTPS?:)\\/\\/\\S+$|^(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})(?:\\/\\S*|)$/u;\nconst URLString = /^\\s*(?:(?:https?:|HTTPS?:)\\/\\/\\S+|(?:[A-Za-z][!%\\-0-9A-Z_a-z~]+\\.)+(?:[a-z]{2,5}|[A-Z]{2,5})\\/\\S*?)(?:[?][^\\S(){}\\[\\]]*?|)(?:[#][^\\S(){}\\[\\]]*?|)\\s*$/u;\nconst URLScheme = /^https?:|HTTPS?:/;\n//\nconst SPAN = 'span';\n\nclass MarkoutRenderingContext {\n  constructor(renderer) {\n    ({lookups: this.lookups} = this.renderer = renderer);\n\n    [\n      this.passthru,\n      this.block,\n      this.fenced,\n      this.header,\n      this.indent,\n      this.newlines,\n      this.comment,\n    ] = this.renderedText = '';\n\n    SPAN_RESTACKING && createSpanStack(this);\n  }\n}\n\nclass MarkoutRenderer {\n  constructor({lookups = createLookups()} = {}) {\n    this.lookups = lookups;\n  }\n\n  renderBlockTokens(token, context) {\n    let before, tag, body, previous, inset;\n    previous = token;\n    inset = '';\n    const {classes, block} = context;\n    while ((previous = previous.previous)) {\n      if (previous.lineBreaks) break;\n      inset = `${previous.text}${inset}`;\n    }\n    if (!/[^> \\t]/.test(inset)) {\n      before = `<${block}${this.renderClasses(classes)}>`;\n      tag = 'tt';\n      classes.push('opener', `${token.type}-token`);\n    } else {\n      body = token.text;\n    }\n    return {before, tag, body};\n  }\n\n  // renderCommentToken(token, context) {}\n\n  encodeURL(url) {\n    return `${url}`.replace(/[\\\\\"]/g, encodeURIComponent);\n  }\n\n  renderTokens(tokens, context = new MarkoutRenderingContext(this)) {\n    let text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta;\n    context.tokens = tokens;\n\n    const {lookups} = context;\n    const {renderClasses} = this;\n\n    // context.openTags = 0;\n    context.openTags = [];\n    context.closeTags = [];\n\n    for (const token of context.tokens) {\n      if (!token || !(body = token.text)) continue;\n      ({text, type = 'text', punctuator, lineBreaks, hint = 'text', previous} = token);\n\n      // Sub type 'text' to 'whitespace'\n      // TODO: Sub type 'text' to 'break' (ie !!lineBreaks)\n      type !== 'text' || lineBreaks || text.trim() || (type = 'whitespace');\n\n      tag = classes = before = after = meta = undefined;\n\n      if (context.passthru || context.fenced) {\n        if (context.fenced) {\n          if (context.fenced === context.passthru) {\n            context.header += text;\n            lineBreaks && ((context.header = context.header.trimRight()), (context.passthru = ''));\n          } else if (punctuator === 'closer' && text === '```') {\n            let sourceType, sourceAttributes;\n            if (context.header) {\n              [, sourceType = 'markup', sourceAttributes] = FencedBlockHeader.exec(context.header);\n              import.meta['debug:fenced-block-header-rendering'] &&\n                console.log('fenced-block-header', {\n                  fenced: context.fenced,\n                  header: context.header,\n                  passthru: context.passthru,\n                  sourceType,\n                  sourceAttributes,\n                  context,\n                });\n              sourceAttributes = `${sourceAttributes ? `${sourceAttributes} ` : ''}data-markout-fence=\"${\n                context.fenced\n              }\" data-markout-header=\"${markup.encodeEntities(context.header)}\" tab-index=-1`;\n            } else {\n              sourceAttributes = `data-markout-fence=\"${context.fenced}\"`;\n            }\n            // passthru rendered code\n            context.renderedText += `<${context.block} class=\"markup code\" ${\n              content.MarkupAttributeMap.SourceType\n            }=\"${sourceType || 'markup'}\"${(sourceAttributes && ` ${sourceAttributes}`) || ''}>${markup.encodeEntities(\n              context.passthru,\n            )}</${context.block}>`;\n            context.header = context.indent = context.fenced = context.passthru = '';\n          } else {\n            // passthru code\n            context.passthru += body.replace(context.indent, '');\n          }\n          continue;\n        } else if (context.url) {\n          if (type === 'text' || /^[~]/.test(text)) {\n            context.passthru += text;\n            continue;\n          }\n          if (URLString.test(context.passthru)) {\n            [before, context.url, after] = context.passthru.split(/(\\S+?(?=(\\.?\\s*$|$)))/);\n            // context.url && console.log(context.url, {text, token, before, context, after});\n            context.renderedText += `${before}<span href=\"${this.encodeURL(\n              URLScheme.test(context.url) ? context.url : `https://${context.url}`,\n            )}\"><samp class=url>${context.url}</samp></span>${after}`;\n            before = after = undefined;\n          } else {\n            context.renderedText += context.passthru;\n          }\n          context.url = context.passthru = '';\n        } else {\n          // Construct open and close tags\n          if (context.currentTag) {\n            // if (\n            // \tpunctuator === 'closer' &&\n            // \t(body === '>' || body === '/>') &&\n            // \tcontext.currentTag !== undefined &&\n            // \tcontext.currentTag.opener !== undefined\n            // ) {\n            // \tdebugTagOpenerPassthru(token, context, {\n            // \t\tscope: {text, type, punctuator, lineBreaks, hint, previous, body, tag, classes, before, after, meta},\n            // \t});\n            // }\n\n            // Construct body\n            context.passthru += body;\n\n            if (context.currentTag.nodeName === '') {\n              if (type === 'text' || text === '-' || text === ':') {\n                context.currentTag.construct += text;\n              } else if (context.currentTag.construct === '') {\n                context.currentTag.nodeName = ' ';\n                context.currentTag.construct = text;\n              } else {\n                context.currentTag.nodeName = context.currentTag.construct;\n                // Substitute element name from lookup\n                context.currentTag.nodeName in lookups.elements &&\n                  (context.passthru = context.passthru.replace(\n                    context.currentTag.nodeName,\n                    (context.currentTag.nodeName = lookups.elements[context.currentTag.nodeName]),\n                  ));\n              }\n            } else {\n              context.currentTag.construct = text;\n              // console.log(text, {...context});\n            }\n          } else {\n            // console.log(text, {...context});\n            // Construct body\n            context.passthru += body;\n          }\n          if (punctuator === 'closer' || (context.comment && punctuator === 'comment')) {\n            // passthru body rendered\n            context.renderedText += context.passthru;\n            context.passthru = '';\n          }\n          continue;\n        }\n      }\n\n      tag = SPAN;\n      classes = context.classes = hint.split(/\\s+/);\n      before, after;\n\n      if (hint.includes('-in-markdown')) {\n        context.renderedText += token.text;\n        continue;\n      } else if (hint === 'markdown' || hint.startsWith('markdown ') || hint.includes('in-markdown')) {\n        type !== 'text' || lineBreaks || (text in lookups.entities && (body = lookups.entities[text]));\n\n        if (punctuator) {\n          context.passthru =\n            (((context.comment = punctuator === 'comment' && text) || lookups.tags.has(text)) && text) || '';\n          // Opener\n          if (punctuator === 'opener') {\n            if (text === '<') {\n              context.openTags.push(\n                (context.currentTag = {opener: token, delimiter: text, construct: '', nodeName: ''}),\n              );\n            } else if (text === '</') {\n              context.closeTags.push(\n                (context.currentTag = {closer: token, delimiter: text, construct: '', nodeName: ''}),\n              );\n            }\n          } else if (punctuator === 'closer') {\n            context.currentTag = undefined;\n          }\n          if (context.passthru) continue;\n\n          if (punctuator === 'opener') {\n            if ((context.fenced = text === '```' && text)) {\n              context.block = 'pre';\n              context.passthru = context.fenced;\n              [context.indent = ''] = /^[ \\t]*/gm.exec(previous.text);\n              context.indent && (context.indent = new RegExp(String.raw`^${context.indent}`, 'mg'));\n              context.header = '';\n              continue;\n            } else if (text in lookups.spans) {\n              if (SPAN_RESTACKING && (before = context.stack.open(text, body, classes)) === undefined) continue;\n              before || ((before = `<${lookups.spans[text]}${renderClasses(classes)}>`), classes.push('opener'));\n            } else if (text === '<!' || text === '<?') {\n              let next;\n              const closer = text === '<!' ? /-->$/ : /\\?>$/;\n              while (\n                (next = context.tokens.next().value) &&\n                (body += next.text) &&\n                next.punctuator !== 'closer' && !closer.test(next.text)\n                // (next.punctuator === 'opener' && /^</.test(next.text)) ||\n              );\n              context.passthru = body;\n              continue;\n            }\n          } else if (punctuator === 'closer') {\n            if (text === '```') {\n              context.block = lookups.blocks['```'] || 'pre';\n            } else if (text in lookups.spans) {\n              if (SPAN_RESTACKING && (after = context.stack.close(text, body, classes)) === undefined) continue;\n              after || ((after = `</${lookups.spans[text]}>`), classes.push('closer'));\n            }\n          } else if (SPAN_RESTACKING && text in lookups.spans) {\n            if (\n              (context.stack[text] >= 0\n                ? (after = context.stack.close(text, body, classes))\n                : (before = context.stack.open(text, body, classes))) === undefined\n            )\n              continue;\n          } else if (!context.block && (context.block = lookups.blocks[text])) {\n            ({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n          }\n          (before || after) && (tag = 'tt');\n          classes.push(`${punctuator}-token`);\n        } else {\n          if (\n            URL_EXPANSION &&\n            type === 'text' &&\n            tag === SPAN &&\n            before === after &&\n            before === undefined &&\n            URLPrefix.test(text)\n          ) {\n            context.passthru = context.url = text;\n            continue;\n            // before = `<a href=\"${text.trim()}\">`;\n            // after = `</a>`;\n            // console.log(text, {tag, before, after}, token);\n          }\n          if (lineBreaks) {\n            (!context.block && (tag = 'br')) || ((after = `</${context.block}>`) && (context.block = body = ''));\n          } else if (type === 'sequence') {\n            if (text[0] === '`') {\n              tag = 'code';\n              body = text.replace(/(``?)(.*)\\1/, '$2');\n              let fence = '`'.repeat((text.length - body.length) / 2);\n              body = markup.encodeEntities(body.replace(/&nbsp;/g, '\\u202F'));\n              fence in lookups.entities && (fence = lookups.entities[fence]);\n              classes.push('fenced-code');\n              classes.push('code');\n            } else if (text.startsWith('---') && !/[^\\-]/.test(text)) {\n              tag = 'hr';\n            } else if (!context.block && (context.block = lookups.blocks[text])) {\n              ({before = before, tag = tag, body = body} = this.renderBlockTokens(token, context));\n            } else {\n              // sequence\n              body = text;\n            }\n          } else if (type === 'whitespace') {\n            // if (span === 'code') body.replace(/\\xA0/g, '&nbsp;');\n            tag = '';\n          } else {\n            // debug(`${type}:token`)(type, token);\n            classes.push(`${type}-token`);\n            body = text;\n          }\n        }\n      }\n\n      meta =\n        tag &&\n        [\n          punctuator && `punctuator=\"${escape(punctuator)}\"`,\n          type && `token-type=\"${escape(type)}\"`,\n          hint && `token-hint=\"${escape(hint)}\"`,\n          lineBreaks && `line-breaks=\"${escape(lineBreaks)}\"`,\n        ].join(' ');\n\n      tag === 'span' && (body = encodeEscapedEntities(body));\n\n      before && (context.renderedText += before);\n      tag === 'br' || (context.newlines = 0)\n        ? (!NEWLINE_CONSOLIDATION && (context.renderedText += '\\n')) ||\n          (context.newlines++ && (context.renderedText += '\\n')) ||\n          (context.renderedText += '<br/>')\n        : tag === 'hr'\n        ? (context.renderedText += '<hr/>')\n        : body &&\n          (tag\n            ? (context.renderedText += `<${tag} ${meta}${renderClasses(classes)}>${body}</${tag}>`)\n            : (context.renderedText += body));\n      after && (context.renderedText += after);\n    }\n\n    if (STRAY_BRACE && context.renderedText.endsWith(`>}</span>`)) {\n      context.renderedText = context.renderedText.slice(0, context.renderedText.lastIndexOf('<span'));\n    }\n\n    return context.renderedText;\n  }\n\n  renderClasses(classes) {\n    return ((classes = [...classes].filter(Boolean).join(' ')) && ` class=\"${classes}\"`) || '';\n  }\n}\n\nconst debugTagOpenerPassthru = (token, context, details) => {\n  console.log(\n    '\"%c%s%c%s%c%s%c\" — %o',\n    'color: LightSlateGrey;',\n    context.renderedText.length > 20 ? `…${context.renderedText.slice(-20)}` : context.renderedText,\n    'color: DarkSlateBlue;',\n    context.passthru,\n    'color: DarkSlateBlue; font-weight: 400;',\n    (details && details.scope && details.scope.body) || token.text,\n    '',\n    {\n      token: {...token},\n      context: {...context},\n      ...details,\n    },\n  );\n};\n\nclass MarkoutOutput extends String {\n  constructor(context) {\n    super(context.renderedText).context = context;\n  }\n}\n\n/// Features\n\nconst createLookups = (\n  repeats = {['*']: 2, ['`']: 3, ['#']: 6},\n  entities = {['*']: '&#x2217;', ['`']: '&#x0300;'},\n  aliases = {'*': ['_'], '**': ['__'], '`': ['``']},\n  blocks = {['-']: 'li', ['>']: 'blockquote', ['#']: 'h*', ['```']: 'pre'},\n  spans = {['*']: 'i', ['**']: 'b', ['~~']: 's', ['`']: 'code'},\n  tags = ['<', '>', '<!--', '-->', '<?', '?>', '</', '/>'],\n  elements = {'markout-iframe': 'iframe', 'markout-details': 'details', 'markout-blockquote': 'blockquote'},\n) => {\n  const {keys} = Object;\n  const symbols = new Set([...Object.keys(repeats), ...Object.keys(entities)]);\n  for (const symbol of symbols) {\n    let n = repeats[symbol] || 1;\n    const entity = entities[symbol];\n    let block = blocks[symbol];\n    let span = spans[symbol];\n    const tag = block || span;\n    const map = (block && blocks) || (span && spans);\n    for (let i = 1; n--; i++) {\n      const k = symbol.repeat(i);\n      const b = blocks[k];\n      const s = spans[k];\n      const m = (b && blocks) || (s && spans) || map;\n      const t = (b || s || m[k] || tag).replace('*', i);\n      const e = entities[k] || (entity && entity.repeat(i));\n      m[k] = t;\n      e && (entities[k] = e);\n      if (k in aliases) for (const a of aliases[k]) (m[a] = t), e && (entities[a] = e);\n    }\n  }\n  for (let h = 1, c = 2080, n = 6; n--; entities['#'.repeat(h)] = `#<sup>&#x${c + h++};</sup>`);\n\n  const escapes = {};\n\n  for (const symbol of '* ^ ~ `'.split(' ')) {\n    escapes[`\\\\${symbol}`] = `&#x${symbol.charAt(0).toString(16)};`;\n  }\n\n  return {entities, blocks, spans, tags: new Set(tags), elements};\n};\n\nconst createSpanStack = context => {\n  const {\n    lookups: {spans},\n    renderer,\n  } = context;\n  const stack = [];\n  stack.open = (text, body, classes) => {\n    const {[text]: lastIndex, length: index} = stack;\n    if (lastIndex < 0) return (stack[text] = undefined); // ie continue\n    if (lastIndex >= 0) return stack.close(text, body, classes);\n    const span = spans[text];\n    const before = `<${span}${renderer.renderClasses(classes)}>`;\n    stack[text] = index;\n    stack.push({text, body, span, index});\n    return classes.push('opener'), before;\n  };\n  stack.close = (text, body, classes) => {\n    const span = spans[text];\n    const {[text]: index, length} = stack;\n    if (index === length - 1) {\n      index >= 0 && (stack.pop(), (stack[text] = undefined));\n      const after = `</${span}>`;\n      return classes.push('closer'), after;\n    } else if (index >= 0) {\n      classes.push('closer', `closer-token`);\n      const details = `token-type=\"auto\"${renderer.renderClasses(classes)}`;\n      const closing = stack.splice(index, length).reverse();\n      for (const {span, text, body} of closing) {\n        context.renderedText += `<tt punctuator=\"closer\" ${details}>${body}</tt></${span}>`;\n        stack[text] < index || (stack[text] = -1);\n      }\n    } else {\n      context.renderedText += text;\n    }\n  };\n  context.stack = stack;\n};\n\n/** @typedef {{text?: string, indent?: string, index: number}} match */\n/** @typedef {{href: string, title: string}} alias */\n\n/// Debugging\n\nimport {debugging} from '/markout/lib/helpers.js';\n\ndebugging('markout', import.meta, [\n  // import.meta.url.includes('/markout/lib/') ||\n  typeof location === 'object' && /[?&]debug(?=[&#]|=[^&]*\\bmarkout|$)\\b/.test(location.search),\n  'block-normalization',\n  'paragraph-normalization',\n  'anchor-normalization',\n  'break-normalization',\n  'fenced-block-header-rendering',\n]);\n"],"names":["escape","matchAll","markup.render","markup.tokenize","markup.encodeEntity","markup.encodeEntities"],"mappings":"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"}